Version prompt disabled
Running 'poetry run puyapy --version' in '/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts'
poetry: puyapy 4.3.3
Running 'poetry run puyapy /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/smart_contracts/dualstakefarm/contract.py --optimization-level=0 --log-level debug' in '/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts'
poetry: debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=False, output_memory_ir=False, output_bytecode=False, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/smart_contracts/dualstakefarm/contract.py'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
poetry: info: Found python prefix: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv
poetry: debug: Using python executable: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/bin/python3
poetry: debug: Using python site-packages: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages
poetry: debug: Found algopy: 2.6.0
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/__init__.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/types.pyi
poetry: debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/abc.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_collections_abc.pyi
poetry: debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/abc.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_typeshed/__init__.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing_extensions.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/builtins.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/sys/__init__.pyi
poetry: debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_template_variables.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_hints.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_primitives.pyi
poetry: debug: Discovered user module smart_contracts at smart_contracts/__init__.py
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/op.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_contract.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/itxn.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_constants.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_reference.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/__init__.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_state.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_unsigned_builtins.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/gtxn.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_compiled.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/arc4.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_box.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_transaction.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_util.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_logic_sig.pyi
poetry: debug: Discovered user module smart_contracts.common.send at smart_contracts/common/send.py
poetry: debug: Discovered user module smart_contracts.common.math at smart_contracts/common/math.py
poetry: debug: Discovered user module smart_contracts.common.custom at smart_contracts/common/custom.py
poetry: debug: Discovered user module smart_contracts.common.validate at smart_contracts/common/validate.py
poetry: debug: Discovered user module smart_contracts.common.round_time at smart_contracts/common/round_time.py
poetry: debug: Discovered user module smart_contracts.dualstakefarm.contract at smart_contracts/dualstakefarm/contract.py
poetry: debug: Building AWST for module smart_contracts
poetry: debug: Building AWST for module smart_contracts.common.send
poetry: debug: Building AWST for module smart_contracts.common.math
poetry: debug: Building AWST for module smart_contracts.common.custom
poetry: debug: Building AWST for module smart_contracts.common.validate
poetry: debug: Building AWST for module smart_contracts.common.round_time
poetry: debug: Building AWST for module smart_contracts.dualstakefarm.contract
poetry: debug: Building IR for function _puya_lib.util.ensure_budget
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@1
poetry: debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
poetry: debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
poetry: debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
poetry: debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
poetry: debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
poetry: debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
poetry: debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
poetry: debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
poetry: debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
poetry: debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
poetry: debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
poetry: debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
poetry: debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
poetry: debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Building IR for function _puya_lib.bytes_.is_substring
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
poetry: debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
poetry: debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@1
poetry: debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
poetry: debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
poetry: debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
poetry: debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
poetry: debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
poetry: debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
poetry: debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
poetry: debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
poetry: debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
poetry: debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
poetry: debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
poetry: debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
poetry: debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
poetry: debug: Sealing block@4
poetry: debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
poetry: debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
poetry: debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
poetry: debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
poetry: debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
poetry: debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
poetry: debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
poetry: debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
poetry: debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
poetry: debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
poetry: debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
poetry: debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
poetry: debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
poetry: debug: Terminated block@4
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
poetry: debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
poetry: debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
poetry: debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
poetry: debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
poetry: debug: Terminated block@2
poetry: debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
poetry: debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
poetry: debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
poetry: debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
poetry: debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
poetry: debug: Terminated block@4
poetry: debug: Sealing block@3
poetry: debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
poetry: debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
poetry: debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
poetry: debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
poetry: debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
poetry: debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
poetry: debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
poetry: debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
poetry: debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
poetry: debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
poetry: debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
poetry: debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
poetry: debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
poetry: debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
poetry: debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
poetry: debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
poetry: debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
poetry: debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
poetry: debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
poetry: debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
poetry: debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
poetry: debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
poetry: debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
poetry: debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
poetry: debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
poetry: debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
poetry: debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
poetry: debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
poetry: debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
poetry: debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
poetry: debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
poetry: debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
poetry: debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
poetry: debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
poetry: debug: Sealing block@4
poetry: debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
poetry: debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
poetry: debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
poetry: debug: Terminated block@4
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
poetry: debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
poetry: debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@5
poetry: debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
poetry: debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
poetry: debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
poetry: debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
poetry: debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
poetry: debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
poetry: debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
poetry: debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
poetry: debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
poetry: debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
poetry: debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
poetry: debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
poetry: debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
poetry: debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
poetry: debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
poetry: debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
poetry: debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
poetry: debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
poetry: debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
poetry: debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
poetry: debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
poetry: debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
poetry: debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
poetry: debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
poetry: debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
poetry: debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
poetry: debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
poetry: debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
poetry: debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
poetry: debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Terminated block@8
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
poetry: debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
poetry: debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
poetry: debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
poetry: debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
poetry: debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
poetry: debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
poetry: debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
poetry: debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
poetry: debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
poetry: debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
poetry: debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
poetry: debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
poetry: debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Building IR for function smart_contracts.common.send.optin
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.send.send
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Building IR for function smart_contracts.common.send.axfer
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.send.axfer_closeout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.send.algo_pay
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.send.algo_closeout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.math.max
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.math.safe_subtract
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
poetry: debug: Terminated block@3
poetry: debug: Building IR for function smart_contracts.common.custom.ensure
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.common.validate.asset
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.axfer
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.payment
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.payment_amount_min
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.payment_amount_exact
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.round_time.get_round_time
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@2
poetry: debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
poetry: debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0
poetry: debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let first_accessible#1: uint64 = undefined while trying to resolve 'first_accessible' in block@2
poetry: debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0) in block@0
poetry: debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0
poetry: debug: Deleting Phi assignment: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0 in current definition for 1 blocks
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.common.round_time.get_block_rewards
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'rnd_delta' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let rnd_delta#1: uint64 = undefined while trying to resolve 'rnd_delta' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'last_accessible' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Looking for 'num_payouts' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let num_payouts#1: uint64 = undefined while trying to resolve 'num_payouts' in block@1
poetry: debug: Looking for 'sum_payouts' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let sum_payouts#1: uint64 = undefined while trying to resolve 'sum_payouts' in block@1
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@1
poetry: debug: Added rnd_delta#0 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0) in block@0
poetry: debug: Added rnd_delta#2 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0, rnd_delta#2 <- block@5) in block@5
poetry: debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let last_accessible#2: uint64 = undefined while trying to resolve 'last_accessible' in block@4
poetry: debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2) in block@2
poetry: debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1
poetry: debug: Deleting Phi assignment: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1 in current definition for 1 blocks
poetry: debug: Added last_accessible#1 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0
poetry: debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0 in current definition for 5 blocks
poetry: debug: Added num_payouts#0 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let num_payouts#3: uint64 = undefined while trying to resolve 'num_payouts' in block@4
poetry: debug: Added num_payouts#1 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2) in block@2
poetry: debug: Added num_payouts#2 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2, num_payouts#2 <- block@3) in block@3
poetry: debug: Added num_payouts#3 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0, num_payouts#3 <- block@5) in block@5
poetry: debug: Added sum_payouts#0 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let sum_payouts#3: uint64 = undefined while trying to resolve 'sum_payouts' in block@4
poetry: debug: Added sum_payouts#1 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2) in block@2
poetry: debug: Added sum_payouts#2 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2, sum_payouts#2 <- block@3) in block@3
poetry: debug: Added sum_payouts#3 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0, sum_payouts#3 <- block@5) in block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let bonus#1: uint64 = undefined while trying to resolve 'bonus' in block@1
poetry: debug: Added bonus#0 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let bonus#2: uint64 = undefined while trying to resolve 'bonus' in block@4
poetry: debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2) in block@2
poetry: debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1
poetry: debug: Deleting Phi assignment: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1 in current definition for 1 blocks
poetry: debug: Added bonus#1 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0
poetry: debug: Deleting Phi assignment: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0 in current definition for 5 blocks
poetry: debug: Terminated block@8
poetry: debug: Sealing block@9
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@9
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7) in block@7
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7, ternary_result%0#1 <- block@8) in block@8
poetry: debug: Terminated block@9
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Terminated block@8
poetry: debug: Sealing block@9
poetry: debug: Terminated block@9
poetry: debug: Sealing block@10
poetry: debug: Terminated block@10
poetry: debug: Sealing block@11
poetry: debug: Terminated block@11
poetry: debug: Sealing block@12
poetry: debug: Terminated block@12
poetry: debug: Sealing block@13
poetry: debug: Terminated block@13
poetry: debug: Sealing block@14
poetry: debug: Terminated block@14
poetry: debug: Sealing block@15
poetry: debug: Terminated block@15
poetry: debug: Sealing block@16
poetry: debug: Terminated block@16
poetry: debug: Sealing block@17
poetry: debug: Terminated block@17
poetry: debug: Sealing block@18
poetry: debug: Terminated block@18
poetry: debug: Sealing block@19
poetry: debug: Terminated block@19
poetry: debug: Sealing block@20
poetry: debug: Terminated block@20
poetry: debug: Sealing block@21
poetry: debug: Terminated block@21
poetry: debug: Sealing block@22
poetry: debug: Terminated block@22
poetry: debug: Sealing block@23
poetry: debug: Terminated block@23
poetry: debug: Sealing block@24
poetry: debug: Terminated block@24
poetry: debug: Sealing block@25
poetry: debug: Terminated block@25
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@6
poetry: debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4) in block@4
poetry: debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4, and_result%0#1 <- block@5) in block@5
poetry: debug: Created Phi assignment: let recipient_app_id#1: uint64 = undefined while trying to resolve 'recipient_app_id' in block@6
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let recipient_app_id#2: uint64 = undefined while trying to resolve 'recipient_app_id' in block@5
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0) in block@0
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1) in block@1
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2) in block@2
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0
poetry: debug: Deleting Phi assignment: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0 in current definition for 1 blocks
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0
poetry: debug: Deleting Phi assignment: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0 in current definition for 1 blocks
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let farm_amount#2: uint64 = undefined while trying to resolve 'farm_amount' in block@8
poetry: debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6) in block@6
poetry: debug: Added farm_amount#1 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6, farm_amount#1 <- block@7) in block@7
poetry: debug: Terminated block@8
poetry: debug: Sealing block@9
poetry: debug: Created Phi assignment: let tm2_app_id#1: uint64 = undefined while trying to resolve 'tm2_app_id' in block@8
poetry: debug: Created Phi assignment: let tm2_app_id#2: uint64 = undefined while trying to resolve 'tm2_app_id' in block@6
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let tm2_app_id#3: uint64 = undefined while trying to resolve 'tm2_app_id' in block@5
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0) in block@0
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1) in block@1
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2) in block@2
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0
poetry: debug: Deleting Phi assignment: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0 in current definition for 1 blocks
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0
poetry: debug: Deleting Phi assignment: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0 in current definition for 1 blocks
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6) in block@6
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0
poetry: debug: Deleting Phi assignment: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let tm2_lp_addr#1: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@8
poetry: debug: Created Phi assignment: let tm2_lp_addr#2: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@6
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let tm2_lp_addr#3: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@5
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0) in block@0
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1) in block@1
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2) in block@2
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0
poetry: debug: Deleting Phi assignment: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0 in current definition for 1 blocks
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0
poetry: debug: Deleting Phi assignment: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0 in current definition for 1 blocks
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6) in block@6
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0
poetry: debug: Deleting Phi assignment: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0 in current definition for 1 blocks
poetry: debug: Terminated block@9
poetry: debug: Sealing block@10
poetry: debug: Terminated block@10
poetry: debug: Sealing block@11
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@11
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9) in block@9
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9, ternary_result%0#1 <- block@10) in block@10
poetry: debug: Created Phi assignment: let current_block_rewards#1: uint64 = undefined while trying to resolve 'current_block_rewards' in block@11
poetry: debug: Created Phi assignment: let current_block_rewards#2: uint64 = undefined while trying to resolve 'current_block_rewards' in block@8
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6) in block@6
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0
poetry: debug: Deleting Phi assignment: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0 in current definition for 1 blocks
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9) in block@9
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0
poetry: debug: Deleting Phi assignment: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let own_yearly_blocks_produced#1: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@11
poetry: debug: Created Phi assignment: let own_yearly_blocks_produced#2: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@8
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6) in block@6
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0
poetry: debug: Deleting Phi assignment: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0 in current definition for 1 blocks
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9) in block@9
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0
poetry: debug: Deleting Phi assignment: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let staked#1: uint64 = undefined while trying to resolve 'staked' in block@11
poetry: debug: Created Phi assignment: let staked#2: uint64 = undefined while trying to resolve 'staked' in block@8
poetry: debug: Created Phi assignment: let staked#3: uint64 = undefined while trying to resolve 'staked' in block@6
poetry: debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let staked#4: uint64 = undefined while trying to resolve 'staked' in block@5
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0) in block@0
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1) in block@1
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2) in block@2
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0
poetry: debug: Deleting Phi assignment: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0 in current definition for 1 blocks
poetry: debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0
poetry: debug: Deleting Phi assignment: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0 in current definition for 1 blocks
poetry: debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6) in block@6
poetry: debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0
poetry: debug: Deleting Phi assignment: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0 in current definition for 1 blocks
poetry: debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9) in block@9
poetry: debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0
poetry: debug: Deleting Phi assignment: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let balance#1: uint64 = undefined while trying to resolve 'balance' in block@11
poetry: debug: Created Phi assignment: let balance#2: uint64 = undefined while trying to resolve 'balance' in block@8
poetry: debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6) in block@6
poetry: debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0
poetry: debug: Deleting Phi assignment: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0 in current definition for 1 blocks
poetry: debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9) in block@9
poetry: debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0
poetry: debug: Deleting Phi assignment: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let current_avg_block_payout#1: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@11
poetry: debug: Created Phi assignment: let current_avg_block_payout#2: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@8
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6) in block@6
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0
poetry: debug: Deleting Phi assignment: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0 in current definition for 1 blocks
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9) in block@9
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0
poetry: debug: Deleting Phi assignment: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let farm_amount#3: uint64 = undefined while trying to resolve 'farm_amount' in block@11
poetry: debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9) in block@9
poetry: debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2
poetry: debug: Deleting Phi assignment: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10)
poetry: debug: Replaced trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let avg_round_time#1: uint64 = undefined while trying to resolve 'avg_round_time' in block@11
poetry: debug: Created Phi assignment: let avg_round_time#2: uint64 = undefined while trying to resolve 'avg_round_time' in block@8
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6) in block@6
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0
poetry: debug: Deleting Phi assignment: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0 in current definition for 1 blocks
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9) in block@9
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0
poetry: debug: Deleting Phi assignment: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let total_online_stake#1: biguint = undefined while trying to resolve 'total_online_stake' in block@11
poetry: debug: Created Phi assignment: let total_online_stake#2: biguint = undefined while trying to resolve 'total_online_stake' in block@8
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6) in block@6
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0
poetry: debug: Deleting Phi assignment: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0 in current definition for 1 blocks
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9) in block@9
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0
poetry: debug: Deleting Phi assignment: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0 in current definition for 1 blocks
poetry: debug: Terminated block@11
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
poetry: debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@3
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1) in block@1
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0
poetry: debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@3
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1) in block@1
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0
poetry: debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
poetry: debug: Terminated block@3
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Created Phi assignment: let farm_asset#1: uint64 = undefined while trying to resolve 'farm_asset' in block@2
poetry: debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0) in block@0
poetry: debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0
poetry: debug: Deleting Phi assignment: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let amount_per_block#1: uint64 = undefined while trying to resolve 'amount_per_block' in block@2
poetry: debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0) in block@0
poetry: debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0
poetry: debug: Deleting Phi assignment: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@2
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0) in block@0
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0
poetry: debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@2
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0) in block@0
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0
poetry: debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Created Phi assignment: let txn_fuel_spent#1: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@5
poetry: debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2) in block@2
poetry: debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0
poetry: debug: Deleting Phi assignment: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let state#1: bytes = undefined while trying to resolve 'state' in block@5
poetry: debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2) in block@2
poetry: debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0
poetry: debug: Deleting Phi assignment: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@5
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2) in block@2
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0
poetry: debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let block_round#1: uint64 = undefined while trying to resolve 'block_round' in block@5
poetry: debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2) in block@2
poetry: debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0
poetry: debug: Deleting Phi assignment: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0 in current definition for 1 blocks
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let txn_fuel_spent#5: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@8
poetry: debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6) in block@6
poetry: debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4
poetry: debug: Deleting Phi assignment: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7)
poetry: debug: Replaced trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4 in current definition for 1 blocks
poetry: debug: Terminated block@8
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'k' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let k#1: uint64 = undefined while trying to resolve 'k' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'box_names' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let box_names#1: bytes = undefined while trying to resolve 'box_names' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@1
poetry: debug: Added k#0 to Phi node: let k#1: uint64 = φ(k#0 <- block@0) in block@0
poetry: debug: Added k#2 to Phi node: let k#1: uint64 = φ(k#0 <- block@0, k#2 <- block@6) in block@6
poetry: debug: Added box_names#0 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let box_names#2: bytes = undefined while trying to resolve 'box_names' in block@5
poetry: debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3) in block@3
poetry: debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1
poetry: debug: Deleting Phi assignment: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1 in current definition for 1 blocks
poetry: debug: Added box_names#1 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) in block@6
poetry: debug: Replacing trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0
poetry: debug: Deleting Phi assignment: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6)
poetry: debug: Replaced trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0 in current definition for 6 blocks
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let rnd#1: uint64 = undefined while trying to resolve 'rnd' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added rnd#0 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0) in block@0
poetry: debug: Added rnd#2 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0, rnd#2 <- block@3) in block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: removing unused subroutine _puya_lib.util.ensure_budget
poetry: debug: removing unused subroutine _puya_lib.bytes_.is_substring
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
poetry: debug: removing unused subroutine smart_contracts.common.send.send
poetry: debug: removing unused subroutine smart_contracts.common.send.algo_closeout
poetry: debug: removing unused subroutine smart_contracts.common.validate.asset
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
poetry: debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: removing unused subroutine _puya_lib.util.ensure_budget
poetry: debug: removing unused subroutine _puya_lib.bytes_.is_substring
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
poetry: debug: removing unused subroutine smart_contracts.common.send.optin
poetry: debug: removing unused subroutine smart_contracts.common.send.send
poetry: debug: removing unused subroutine smart_contracts.common.send.axfer
poetry: debug: removing unused subroutine smart_contracts.common.send.axfer_closeout
poetry: debug: removing unused subroutine smart_contracts.common.send.algo_pay
poetry: debug: removing unused subroutine smart_contracts.common.send.algo_closeout
poetry: debug: removing unused subroutine smart_contracts.common.math.max
poetry: debug: removing unused subroutine smart_contracts.common.math.safe_subtract
poetry: debug: removing unused subroutine smart_contracts.common.custom.ensure
poetry: debug: removing unused subroutine smart_contracts.common.validate.asset
poetry: debug: removing unused subroutine smart_contracts.common.validate.axfer
poetry: debug: removing unused subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: removing unused subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: removing unused subroutine smart_contracts.common.round_time.get_block_rewards
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
poetry: debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
poetry: info: optimizing approval program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 0
poetry: debug: Begin optimization pass 1/100
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.optin
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer_closeout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_AssetAmount_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.algo_pay
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.math.max
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.custom.ensure
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_block_rewards
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create in smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable asa_id#0
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable exists#0
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable reinterpret_biguint%1#0
poetry: debug: Removing unused variable txn_fuel_spent#0
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Removing unused variable reinterpret_biguint%4#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: Begin optimization pass 2/100
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.optin
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer_closeout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.send.algo_pay
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.math.max
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.custom.ensure
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_block_rewards
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: No optimizations performed in pass 2, ending loop
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.send.optin
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.send.optin using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.send.optin
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.send.axfer
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.send.axfer using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.send.axfer
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.send.axfer_closeout
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.send.axfer_closeout using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.send.axfer_closeout
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.send.algo_pay
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.send.algo_pay using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.send.algo_pay
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.math.max
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.math.max using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.math.max
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.math.safe_subtract
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.math.safe_subtract using strategy RootOperandGrouping
poetry: debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
poetry: debug: Coalescing resulted in 7 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.math.safe_subtract
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.custom.ensure
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.custom.ensure using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.custom.ensure
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.validate.axfer
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.validate.axfer using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.validate.axfer
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.validate.axfer_amount_exact using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.validate.payment
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.validate.payment using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.validate.payment
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.validate.payment_amount_exact
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.validate.payment_amount_exact using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.validate.payment_amount_exact
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.round_time.get_round_time
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.round_time.get_round_time using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.round_time.get_round_time
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.round_time.get_block_rewards
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.round_time.get_block_rewards using strategy RootOperandGrouping
poetry: debug: Coalescing num_payouts#0 with [num_payouts#6, num_payouts#1, num_payouts#2, num_payouts#3]
poetry: debug: Coalescing sum_payouts#0 with [sum_payouts#6, sum_payouts#1, sum_payouts#2, sum_payouts#3]
poetry: debug: Coalescing rnd_delta#0 with [rnd_delta#5, rnd_delta#1, rnd_delta#2]
poetry: debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
poetry: debug: Coalescing resulted in 39 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.round_time.get_block_rewards
poetry: debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: ready: 
poetry: debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: * to_do rnd_delta#0
poetry: debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: ready: 
poetry: debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: * to_do rnd_delta#0
poetry: debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
poetry: debug: ready: num_payouts#9, sum_payouts#9
poetry: debug: to_do: num_payouts#9, sum_payouts#9
poetry: debug: * avail sum_payouts#9
poetry: debug: * avail sum_payouts#0
poetry: debug: * avail num_payouts#9
poetry: debug: * avail num_payouts#0
poetry: debug: * to_do sum_payouts#9
poetry: debug: * to_do num_payouts#9
poetry: debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
poetry: debug: ready: num_payouts#9, sum_payouts#9
poetry: debug: to_do: num_payouts#9, sum_payouts#9
poetry: debug: * avail sum_payouts#9
poetry: debug: * avail sum_payouts#0
poetry: debug: * avail num_payouts#9
poetry: debug: * avail num_payouts#0
poetry: debug: * to_do sum_payouts#9
poetry: debug: * to_do num_payouts#9
poetry: debug: loc: {num_payouts#0=None, sum_payouts#0=None, num_payouts#9=num_payouts#9, sum_payouts#9=sum_payouts#9}
poetry: debug: pred: {num_payouts#0=num_payouts#9, sum_payouts#0=sum_payouts#9}
poetry: debug: ready: num_payouts#0, sum_payouts#0
poetry: debug: to_do: num_payouts#0, sum_payouts#0
poetry: debug: * avail sum_payouts#0
poetry: debug: * avail sum_payouts#9
poetry: debug: * avail num_payouts#0
poetry: debug: * avail num_payouts#9
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: ready: 
poetry: debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: * to_do rnd_delta#0
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__ using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr using strategy RootOperandGrouping
poetry: debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
poetry: debug: Coalescing farm_amount#0 with [farm_amount#5, farm_amount#1, farm_amount#2]
poetry: debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
poetry: debug: Coalescing resulted in 23 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost using strategy RootOperandGrouping
poetry: debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
poetry: debug: Coalescing resulted in 7 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks using strategy RootOperandGrouping
poetry: debug: Coalescing state#0 with [state#1]
poetry: debug: Coalescing resulted in 2 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing state#0 with [state#1]
poetry: debug: Coalescing resulted in 2 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout using strategy RootOperandGrouping
poetry: debug: Coalescing state#0 with [state#2, state#3]
poetry: debug: Coalescing txn_fuel_spent#2 with [txn_fuel_spent#3, txn_fuel_spent#4]
poetry: debug: Coalescing resulted in 10 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.noop using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states using strategy RootOperandGrouping
poetry: debug: Coalescing k#0 with [k#5, k#1, k#2]
poetry: debug: Coalescing resulted in 9 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers using strategy RootOperandGrouping
poetry: debug: Coalescing rnd#0 with [rnd#5, rnd#1, rnd#2]
poetry: debug: Coalescing resulted in 9 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
poetry: debug: Coalescing smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 with [smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#1, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#2, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#3, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#4, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#5, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#6, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#7, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#8, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#9, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#10, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#11, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#12, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#13, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#14, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#15, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#16, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#17, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#18]
poetry: debug: Coalescing tmp%0#0 with [tmp%0#2]
poetry: debug: Coalescing resulted in 56 replacement/s
poetry: debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
poetry: debug: Performing post-SSA optimizations at level 0
poetry: info: optimizing clear program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 0
poetry: debug: Begin optimization pass 1/100
poetry: debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: No optimizations performed in pass 1, ending loop
poetry: debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Performing post-SSA optimizations at level 0
poetry: debug: Inserted main.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced main.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted optin.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced optin.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted axfer.ops[8]: 'l-store-copy inner_txn_params%0%%param_AssetAmount_idx_0#0 0'
poetry: debug: Replaced axfer.ops[10]: 'v-load inner_txn_params%0%%param_AssetAmount_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetAmount_idx_0#0'
poetry: debug: Inserted axfer.ops[6]: 'l-store-copy inner_txn_params%0%%param_AssetReceiver_idx_0#0 0'
poetry: debug: Replaced axfer.ops[13]: 'v-load inner_txn_params%0%%param_AssetReceiver_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetReceiver_idx_0#0'
poetry: debug: Inserted axfer.ops[4]: 'l-store-copy inner_txn_params%0%%param_XferAsset_idx_0#0 0'
poetry: debug: Replaced axfer.ops[16]: 'v-load inner_txn_params%0%%param_XferAsset_idx_0#0' with 'l-load inner_txn_params%0%%param_XferAsset_idx_0#0'
poetry: debug: Inserted axfer.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
poetry: debug: Replaced axfer.ops[21]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
poetry: debug: Inserted axfer_closeout.ops[8]: 'l-store-copy inner_txn_params%0%%param_AssetCloseTo_idx_0#0 0'
poetry: debug: Replaced axfer_closeout.ops[10]: 'v-load inner_txn_params%0%%param_AssetCloseTo_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetCloseTo_idx_0#0'
poetry: debug: Inserted axfer_closeout.ops[6]: 'l-store-copy inner_txn_params%0%%param_AssetReceiver_idx_0#0 0'
poetry: debug: Replaced axfer_closeout.ops[15]: 'v-load inner_txn_params%0%%param_AssetReceiver_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetReceiver_idx_0#0'
poetry: debug: Inserted axfer_closeout.ops[4]: 'l-store-copy inner_txn_params%0%%param_XferAsset_idx_0#0 0'
poetry: debug: Replaced axfer_closeout.ops[18]: 'v-load inner_txn_params%0%%param_XferAsset_idx_0#0' with 'l-load inner_txn_params%0%%param_XferAsset_idx_0#0'
poetry: debug: Inserted axfer_closeout.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
poetry: debug: Replaced axfer_closeout.ops[23]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
poetry: debug: Inserted algo_pay.ops[6]: 'l-store-copy inner_txn_params%0%%param_Amount_idx_0#0 0'
poetry: debug: Replaced algo_pay.ops[8]: 'v-load inner_txn_params%0%%param_Amount_idx_0#0' with 'l-load inner_txn_params%0%%param_Amount_idx_0#0'
poetry: debug: Inserted algo_pay.ops[4]: 'l-store-copy inner_txn_params%0%%param_Receiver_idx_0#0 0'
poetry: debug: Replaced algo_pay.ops[11]: 'v-load inner_txn_params%0%%param_Receiver_idx_0#0' with 'l-load inner_txn_params%0%%param_Receiver_idx_0#0'
poetry: debug: Inserted algo_pay.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
poetry: debug: Replaced algo_pay.ops[16]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
poetry: debug: Inserted max.ops[8]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced max.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted max.ops[3]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced max.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted safe_subtract.ops[3]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced safe_subtract.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[2]: 'l-store-copy gtxn_type%0#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[12]: 'l-store-copy axfer_txn#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[14]: 'v-load axfer_txn#0' with 'l-load axfer_txn#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[16]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[21]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[34]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[36]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[41]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[43]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[30]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[33]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[28]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[33]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[15]: 'l-store-copy axfer_txn#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[27]: 'v-load axfer_txn#0' with 'l-load axfer_txn#0'
poetry: debug: Inserted smart_contracts.common.validate.axfer.ops[28]: 'l-store-copy axfer_txn#0 0'
poetry: debug: Replaced smart_contracts.common.validate.axfer.ops[43]: 'v-load axfer_txn#0' with 'l-load axfer_txn#0'
poetry: debug: Inserted axfer_amount_exact.ops[3]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced axfer_amount_exact.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted axfer_amount_exact.ops[8]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced axfer_amount_exact.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted payment.ops[2]: 'l-store-copy gtxn_type%0#0 0'
poetry: debug: Replaced payment.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
poetry: debug: Inserted payment.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
poetry: debug: Replaced payment.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
poetry: debug: Inserted payment.ops[12]: 'l-store-copy pay_txn#0 0'
poetry: debug: Replaced payment.ops[14]: 'v-load pay_txn#0' with 'l-load pay_txn#0'
poetry: debug: Inserted payment.ops[22]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced payment.ops[24]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted payment.ops[29]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced payment.ops[31]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted payment.ops[18]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced payment.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted payment.ops[16]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced payment.ops[21]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted payment.ops[15]: 'l-store-copy pay_txn#0 0'
poetry: debug: Replaced payment.ops[30]: 'v-load pay_txn#0' with 'l-load pay_txn#0'
poetry: debug: Inserted payment_amount_exact.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced payment_amount_exact.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted payment_amount_exact.ops[7]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced payment_amount_exact.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_round_time.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_round_time.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_round_time.ops[9]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_round_time.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_round_time.ops[18]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced get_round_time.ops[20]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_round_time.ops[7]: 'l-store-copy first_accessible#0 0'
poetry: debug: Replaced get_round_time.ops[16]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
poetry: debug: Inserted get_round_time_if_body@1.ops[3]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced get_round_time_if_body@1.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted get_round_time_if_body@1.ops[8]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced get_round_time_if_body@1.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[13]: 'l-store-copy ts_delta#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[15]: 'v-load ts_delta#0' with 'l-load ts_delta#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[9]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[12]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[1]: 'l-store-copy last_accessible#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[5]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[7]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[3]: 'l-store-copy first_accessible#0 2'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[10]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[5]: 'l-store-copy block_delta#0 2'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[21]: 'v-load block_delta#0' with 'l-load block_delta#0'
poetry: debug: Inserted get_block_rewards.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_block_rewards.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_block_rewards.ops[9]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_block_rewards.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_block_rewards.ops[14]: 'l-store-copy last_accessible#0 0'
poetry: debug: Replaced get_block_rewards.ops[16]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
poetry: debug: Inserted get_block_rewards.ops[17]: 'l-store-copy last_accessible#0 0'
poetry: debug: Replaced get_block_rewards.ops[21]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
poetry: debug: Inserted get_block_rewards.ops[7]: 'l-store-copy first_accessible#0 0'
poetry: debug: Replaced get_block_rewards.ops[19]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
poetry: debug: Inserted get_block_rewards_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
poetry: debug: Replaced get_block_rewards_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
poetry: debug: Inserted get_block_rewards_for_body@2.ops[3]: 'l-store-copy rnd#0 0'
poetry: debug: Replaced get_block_rewards_for_body@2.ops[5]: 'v-load rnd#0' with 'l-load rnd#0'
poetry: debug: Inserted get_block_rewards_for_body@2.ops[7]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced get_block_rewards_for_body@2.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_block_rewards_for_body@2.ops[12]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced get_block_rewards_for_body@2.ops[18]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted get_block_rewards_if_body@3.ops[10]: 'l-store-copy sum_payouts#0 0'
poetry: debug: Replaced get_block_rewards_if_body@3.ops[12]: 'v-load sum_payouts#0' with 'l-load sum_payouts#0'
poetry: debug: Inserted get_block_rewards_if_body@3.ops[6]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced get_block_rewards_if_body@3.ops[9]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted get_block_rewards_if_body@3.ops[3]: 'l-store-copy num_payouts#0 0'
poetry: debug: Replaced get_block_rewards_if_body@3.ops[16]: 'v-load num_payouts#0' with 'l-load num_payouts#0'
poetry: debug: Inserted get_block_rewards_after_for@6.ops[3]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced get_block_rewards_after_for@6.ops[5]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted get_block_rewards_ternary_merge@9.ops[1]: 'l-store-copy avg_payout_or_bonus#0 0'
poetry: debug: Replaced get_block_rewards_ternary_merge@9.ops[3]: 'v-load avg_payout_or_bonus#0' with 'l-load avg_payout_or_bonus#0'
poetry: debug: Inserted __init__.ops[1]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced __init__.ops[4]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted project_apr.ops[4]: 'l-store-copy tuple_assignment%0#0 0'
poetry: debug: Replaced project_apr.ops[6]: 'v-load tuple_assignment%0#0' with 'l-load tuple_assignment%0#0'
poetry: debug: Inserted project_apr.ops[14]: 'l-store-copy tuple_assignment%2#0 0'
poetry: debug: Replaced project_apr.ops[16]: 'v-load tuple_assignment%2#0' with 'l-load tuple_assignment%2#0'
poetry: debug: Inserted project_apr.ops[31]: 'l-store-copy tuple_assignment%6#0 0'
poetry: debug: Replaced project_apr.ops[33]: 'v-load tuple_assignment%6#0' with 'l-load tuple_assignment%6#0'
poetry: debug: Inserted project_apr.ops[23]: 'l-store-copy tuple_assignment%5#0 1'
poetry: debug: Replaced project_apr.ops[26]: 'v-load tuple_assignment%5#0' with 'l-load tuple_assignment%5#0'
poetry: debug: Inserted project_apr.ops[3]: 'l-store-copy tuple_assignment%1#0 1'
poetry: debug: Replaced project_apr.ops[9]: 'v-load tuple_assignment%1#0' with 'l-load tuple_assignment%1#0'
poetry: debug: Inserted project_apr.ops[14]: 'l-store-copy tuple_assignment%3#0 1'
poetry: debug: Replaced project_apr.ops[20]: 'v-load tuple_assignment%3#0' with 'l-load tuple_assignment%3#0'
poetry: debug: Inserted project_apr.ops[33]: 'l-store-copy tuple_assignment%7#0 1'
poetry: debug: Replaced project_apr.ops[39]: 'v-load tuple_assignment%7#0' with 'l-load tuple_assignment%7#0'
poetry: debug: Inserted project_apr.ops[29]: 'l-store-copy exists1#0 0'
poetry: debug: Replaced project_apr.ops[42]: 'v-load exists1#0' with 'l-load exists1#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[18]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[20]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[24]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[29]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[31]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[43]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[45]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[52]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[54]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[57]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[59]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[62]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[64]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[73]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[75]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[87]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[89]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[5]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[8]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[12]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[15]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[41]: 'l-store-copy rt_fraction.dt#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[44]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[72]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[75]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[87]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[90]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[96]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[99]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[7]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[11]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[15]: 'l-store-copy value%1#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[19]: 'v-load value%1#0' with 'l-load value%1#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[71]: 'l-store-copy global_yearly_blocks_produced#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[77]: 'v-load global_yearly_blocks_produced#0' with 'l-load global_yearly_blocks_produced#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[42]: 'l-store-copy rt_fraction.dr#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[52]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[53]: 'l-store-copy rt_fraction.dr#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[62]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[48]: 'l-store-copy rt_fraction.dt#0 2'
poetry: debug: Replaced project_apr_bool_merge@6.ops[68]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[20]: 'l-store-copy balance#0 0'
poetry: debug: Replaced project_apr_bool_merge@6.ops[77]: 'v-load balance#0' with 'l-load balance#0'
poetry: debug: Inserted project_apr_bool_merge@6.ops[27]: 'l-store-copy total_online_stake#0 1'
poetry: debug: Replaced project_apr_bool_merge@6.ops[88]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
poetry: debug: Inserted project_apr_if_body@7.ops[6]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced project_apr_if_body@7.ops[8]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted project_apr_if_body@7.ops[18]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced project_apr_if_body@7.ops[20]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted project_apr_if_body@7.ops[2]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced project_apr_if_body@7.ops[5]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted project_apr_if_body@7.ops[11]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced project_apr_if_body@7.ops[14]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted project_apr_if_body@7.ops[13]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced project_apr_if_body@7.ops[17]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted project_apr_after_if_else@8.ops[3]: 'l-store-copy tmp%14#0 0'
poetry: debug: Replaced project_apr_after_if_else@8.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[5]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[7]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[9]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[11]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[17]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[19]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[53]: 'l-store-copy len_%0#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[55]: 'v-load len_%0#0' with 'l-load len_%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[58]: 'l-store-copy no_overflow%0#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[60]: 'v-load no_overflow%0#0' with 'l-load no_overflow%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[71]: 'l-store-copy len_%1#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[73]: 'v-load len_%1#0' with 'l-load len_%1#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[76]: 'l-store-copy no_overflow%1#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[78]: 'v-load no_overflow%1#0' with 'l-load no_overflow%1#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[89]: 'l-store-copy len_%2#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[91]: 'v-load len_%2#0' with 'l-load len_%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[94]: 'l-store-copy no_overflow%2#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[96]: 'v-load no_overflow%2#0' with 'l-load no_overflow%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[108]: 'l-store-copy encoded_tuple_buffer%1#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[110]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[113]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[115]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[118]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[120]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[123]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[125]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[128]: 'l-store-copy encoded_tuple_buffer%5#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[130]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[133]: 'l-store-copy encoded_tuple_buffer%6#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[135]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[138]: 'l-store-copy encoded_tuple_buffer%7#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[140]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[143]: 'l-store-copy encoded_tuple_buffer%8#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[145]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[148]: 'l-store-copy encoded_tuple_buffer%9#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[150]: 'v-load encoded_tuple_buffer%9#0' with 'l-load encoded_tuple_buffer%9#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[153]: 'l-store-copy encoded_tuple_buffer%10#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[155]: 'v-load encoded_tuple_buffer%10#0' with 'l-load encoded_tuple_buffer%10#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[1]: 'l-store-copy farm_amount_algo#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[4]: 'v-load farm_amount_algo#0' with 'l-load farm_amount_algo#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[26]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[29]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[66]: 'l-store-copy b_zeros%0#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[69]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[85]: 'l-store-copy b_zeros%1#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[88]: 'v-load b_zeros%1#0' with 'l-load b_zeros%1#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[104]: 'l-store-copy b_zeros%2#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[107]: 'v-load b_zeros%2#0' with 'l-load b_zeros%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[23]: 'l-store-copy tmp%18#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[29]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[15]: 'l-store-copy rewards#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[22]: 'v-load rewards#0' with 'l-load rewards#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[27]: 'l-store-copy staked#0 1'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[38]: 'v-load staked#0' with 'l-load staked#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[57]: 'l-store-copy total_online_stake#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[72]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[77]: 'l-store-copy own_yearly_blocks_produced#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[92]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[97]: 'l-store-copy projected_apr_bps#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[112]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[4]: 'l-store-copy current_block_rewards#0 1'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[42]: 'v-load current_block_rewards#0' with 'l-load current_block_rewards#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[116]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[164]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[6]: 'l-store-copy farm_amount_algo#0 2'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[52]: 'v-load farm_amount_algo#0' with 'l-load farm_amount_algo#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[97]: 'l-store-copy tmp%21#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[161]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[16]: 'l-store-copy own_yearly_blocks_produced#0 3'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[79]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[37]: 'l-store-copy projected_apr_bps#0 4'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[101]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[79]: 'l-store-copy tmp%20#0 2'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[159]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[41]: 'l-store-copy val_as_bytes%0#0 5'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[125]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[45]: 'l-store-copy val_as_bytes%1#0 5'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[131]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[49]: 'l-store-copy val_as_bytes%2#0 5'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[137]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[53]: 'l-store-copy val_as_bytes%3#0 6'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[143]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[57]: 'l-store-copy val_as_bytes%4#0 7'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[149]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[61]: 'l-store-copy val_as_bytes%5#0 7'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[155]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[65]: 'l-store-copy val_as_bytes%6#0 8'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[161]: 'v-load val_as_bytes%6#0' with 'l-load val_as_bytes%6#0'
poetry: debug: Inserted calculate_algo_cost.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced calculate_algo_cost.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted calculate_algo_cost.ops[6]: 'l-store-copy tmp%2#0 1'
poetry: debug: Replaced calculate_algo_cost.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[8]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[20]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[22]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[27]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[29]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[34]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[36]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[43]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[45]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy total_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[50]: 'v-load total_cost#0' with 'l-load total_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[71]: 'l-store-copy encoded_tuple_buffer%1#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[73]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[76]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[78]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[81]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[83]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[86]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[88]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[91]: 'l-store-copy encoded_tuple_buffer%5#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[93]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[96]: 'l-store-copy encoded_tuple_buffer%6#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[98]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[4]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[13]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[18]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[41]: 'l-store-copy platform_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[49]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[34]: 'l-store-copy txn_fee_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[45]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[51]: 'l-store-copy platform_cost#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[64]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[27]: 'l-store-copy ix_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[45]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[58]: 'l-store-copy val_as_bytes%0#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[76]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[62]: 'l-store-copy val_as_bytes%1#0 2'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[82]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[66]: 'l-store-copy val_as_bytes%2#0 3'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[88]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[46]: 'l-store-copy ix_cost#0 2'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[72]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[71]: 'l-store-copy val_as_bytes%3#0 4'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[95]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[75]: 'l-store-copy val_as_bytes%4#0 4'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[101]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy txn_fee_cost#0 3'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[78]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[80]: 'l-store-copy val_as_bytes%5#0 5'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[108]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[20]: 'l-store-copy box_mbr#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[67]: 'v-load box_mbr#0' with 'l-load box_mbr#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[1]: 'l-store-copy optin_mbr#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[64]: 'v-load optin_mbr#0' with 'l-load optin_mbr#0'
poetry: debug: Inserted get_algo_cost.ops[4]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_algo_cost.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[4]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[6]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[38]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[40]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[46]: 'l-store-copy encoded_tuple_buffer%1#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[48]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[51]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[53]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[56]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[58]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[61]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[63]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[66]: 'l-store-copy encoded_tuple_buffer%5#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[68]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[71]: 'l-store-copy encoded_tuple_buffer%6#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[73]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[76]: 'l-store-copy encoded_tuple_buffer%7#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[78]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[7]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[12]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[13]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[18]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[19]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[24]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[25]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[30]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[31]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[36]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[47]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[80]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[40]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[76]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[35]: 'l-store-copy tmp%4#0 1'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[72]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[29]: 'l-store-copy tmp%3#0 1'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[68]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[23]: 'l-store-copy tmp%2#0 1'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[64]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[17]: 'l-store-copy tmp%1#0 1'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[60]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[11]: 'l-store-copy tmp%0#0 1'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[56]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_max_duration.ops[16]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_max_duration.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_max_duration.ops[28]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_max_duration.ops[30]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_max_duration.ops[33]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced get_max_duration.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_max_duration.ops[38]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced get_max_duration.ops[40]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted get_max_duration.ops[46]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced get_max_duration.ops[48]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted get_max_duration.ops[51]: 'l-store-copy max_duration#0 0'
poetry: debug: Replaced get_max_duration.ops[53]: 'v-load max_duration#0' with 'l-load max_duration#0'
poetry: debug: Inserted get_max_duration.ops[54]: 'l-store-copy reinterpret_bytes%0#0 0'
poetry: debug: Replaced get_max_duration.ops[56]: 'v-load reinterpret_bytes%0#0' with 'l-load reinterpret_bytes%0#0'
poetry: debug: Inserted get_max_duration.ops[62]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced get_max_duration.ops[64]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted get_max_duration.ops[2]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced get_max_duration.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted get_max_duration.ops[9]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced get_max_duration.ops[12]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted get_max_duration.ops[44]: 'l-store-copy blocks_produced#0 0'
poetry: debug: Replaced get_max_duration.ops[47]: 'v-load blocks_produced#0' with 'l-load blocks_produced#0'
poetry: debug: Inserted get_max_duration.ops[61]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced get_max_duration.ops[64]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted get_max_duration.ops[4]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced get_max_duration.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted get_max_duration.ops[12]: 'l-store-copy value%1#0 1'
poetry: debug: Replaced get_max_duration.ops[16]: 'v-load value%1#0' with 'l-load value%1#0'
poetry: debug: Inserted get_max_duration.ops[27]: 'l-store-copy rt_fraction.dr#0 1'
poetry: debug: Replaced get_max_duration.ops[36]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
poetry: debug: Inserted get_max_duration.ops[29]: 'l-store-copy rt_fraction.dt#0 1'
poetry: debug: Replaced get_max_duration.ops[42]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
poetry: debug: Inserted get_max_duration.ops[18]: 'l-store-copy ds_balance#0 0'
poetry: debug: Replaced get_max_duration.ops[51]: 'v-load ds_balance#0' with 'l-load ds_balance#0'
poetry: debug: Inserted get_max_duration.ops[25]: 'l-store-copy total_online_stake#0 1'
poetry: debug: Replaced get_max_duration.ops[58]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
poetry: debug: Inserted validate_duration.ops[2]: 'l-store-copy allowed_duration#0 0'
poetry: debug: Replaced validate_duration.ops[4]: 'v-load allowed_duration#0' with 'l-load allowed_duration#0'
poetry: debug: Inserted validate_duration.ops[7]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced validate_duration.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted validate_duration_if_body@1.ops[2]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced validate_duration_if_body@1.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted create_farm.ops[6]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced create_farm.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted create_farm.ops[14]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced create_farm.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted create_farm.ops[20]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced create_farm.ops[22]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted create_farm.ops[25]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced create_farm.ops[27]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted create_farm.ops[31]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced create_farm.ops[33]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted create_farm.ops[41]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced create_farm.ops[43]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted create_farm.ops[47]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced create_farm.ops[49]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted create_farm.ops[56]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced create_farm.ops[58]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted create_farm.ops[77]: 'l-store-copy tuple_assignment%0#0 0'
poetry: debug: Replaced create_farm.ops[79]: 'v-load tuple_assignment%0#0' with 'l-load tuple_assignment%0#0'
poetry: debug: Inserted create_farm.ops[80]: 'l-store-copy recipient_asa_id#0 0'
poetry: debug: Replaced create_farm.ops[82]: 'v-load recipient_asa_id#0' with 'l-load recipient_asa_id#0'
poetry: debug: Inserted create_farm.ops[85]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced create_farm.ops[87]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted create_farm.ops[92]: 'l-store-copy tmp%14#0 0'
poetry: debug: Replaced create_farm.ops[94]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted create_farm.ops[96]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced create_farm.ops[98]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted create_farm.ops[101]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced create_farm.ops[103]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted create_farm.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced create_farm.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted create_farm.ops[11]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced create_farm.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted create_farm.ops[53]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced create_farm.ops[56]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted create_farm.ops[109]: 'l-store-copy tmp%18#0 1'
poetry: debug: Replaced create_farm.ops[112]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted create_farm.ops[68]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced create_farm.ops[72]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted create_farm.ops[64]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced create_farm.ops[71]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted create_farm.ops[38]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced create_farm.ops[56]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[10]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[12]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[15]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[17]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[23]: 'l-store-copy encoded_tuple_buffer%1#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[25]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[28]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[30]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[33]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[35]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[45]: 'l-store-copy tmp%21#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[47]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[58]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[60]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[41]: 'l-store-copy tmp%20#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[44]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[54]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[57]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[65]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[68]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[70]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[73]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[78]: 'l-store-copy maybe_exists%2#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[81]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[86]: 'l-store-copy new_state_value%1#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[89]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[80]: 'l-store-copy maybe_value%2#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[84]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[38]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[50]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[57]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[69]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[19]: 'l-store-copy val_as_bytes%3#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[37]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[23]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[6]: 'l-store-copy val_as_bytes%1#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[29]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[10]: 'l-store-copy val_as_bytes%2#0 2'
poetry: debug: Replaced create_farm_after_if_else@2.ops[35]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
poetry: debug: Inserted extend_duration_blocks.ops[6]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted extend_duration_blocks.ops[21]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted extend_duration_blocks.ops[30]: 'l-store-copy copy%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[32]: 'v-load copy%0#0' with 'l-load copy%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[33]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[35]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks.ops[39]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted extend_duration_blocks.ops[45]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[47]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted extend_duration_blocks.ops[55]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[57]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted extend_duration_blocks.ops[61]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[63]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted extend_duration_blocks.ops[70]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[72]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted extend_duration_blocks.ops[80]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[82]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted extend_duration_blocks.ops[84]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[86]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted extend_duration_blocks.ops[98]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[100]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted extend_duration_blocks.ops[102]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[104]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted extend_duration_blocks.ops[115]: 'l-store-copy tmp%18#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[117]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted extend_duration_blocks.ops[119]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[121]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted extend_duration_blocks.ops[124]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[126]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[128]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[130]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[136]: 'l-store-copy updated_data%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[138]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[139]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[141]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks.ops[149]: 'l-store-copy tmp%21#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[151]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted extend_duration_blocks.ops[162]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[164]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted extend_duration_blocks.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[11]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[19]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted extend_duration_blocks.ops[28]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted extend_duration_blocks.ops[69]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[72]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted extend_duration_blocks.ops[112]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[115]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted extend_duration_blocks.ops[151]: 'l-store-copy tmp%20#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[154]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted extend_duration_blocks.ops[164]: 'l-store-copy maybe_exists%2#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[167]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
poetry: debug: Inserted extend_duration_blocks.ops[175]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[178]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted extend_duration_blocks.ops[180]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[183]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[188]: 'l-store-copy maybe_exists%3#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[191]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
poetry: debug: Inserted extend_duration_blocks.ops[196]: 'l-store-copy new_state_value%1#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[199]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
poetry: debug: Inserted extend_duration_blocks.ops[30]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[34]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted extend_duration_blocks.ops[95]: 'l-store-copy tmp%14#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[99]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted extend_duration_blocks.ops[139]: 'l-store-copy assigned_value%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[143]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[193]: 'l-store-copy maybe_value%3#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[197]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
poetry: debug: Inserted extend_duration_blocks.ops[48]: 'l-store-copy farm_asset#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[58]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
poetry: debug: Inserted extend_duration_blocks.ops[152]: 'l-store-copy copy%1#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[164]: 'v-load copy%1#0' with 'l-load copy%1#0'
poetry: debug: Inserted extend_duration_blocks.ops[171]: 'l-store-copy maybe_value%2#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[183]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
poetry: debug: Inserted extend_duration_blocks.ops[82]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[99]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted extend_duration_blocks.ops[56]: 'l-store-copy tmp%6#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[74]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted extend_duration_blocks.ops[105]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[123]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks.ops[86]: 'l-store-copy state#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[105]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks.ops[125]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[147]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks.ops[60]: 'l-store-copy farm_asset#0 2'
poetry: debug: Replaced extend_duration_blocks.ops[103]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
poetry: debug: Inserted extend_duration_blocks.ops[41]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[87]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block.ops[6]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted extend_amount_per_block.ops[21]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted extend_amount_per_block.ops[30]: 'l-store-copy copy%0#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[32]: 'v-load copy%0#0' with 'l-load copy%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[33]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[35]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block.ops[39]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted extend_amount_per_block.ops[45]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[47]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted extend_amount_per_block.ops[55]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[57]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted extend_amount_per_block.ops[72]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[74]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted extend_amount_per_block.ops[76]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[78]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted extend_amount_per_block.ops[81]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[83]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[85]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[87]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[93]: 'l-store-copy updated_data%0#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[95]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[96]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[98]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block.ops[106]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[108]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted extend_amount_per_block.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[11]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced extend_amount_per_block.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[19]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted extend_amount_per_block.ops[28]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced extend_amount_per_block.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted extend_amount_per_block.ops[63]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[66]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted extend_amount_per_block.ops[107]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[110]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted extend_amount_per_block.ops[30]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced extend_amount_per_block.ops[34]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted extend_amount_per_block.ops[69]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[73]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted extend_amount_per_block.ops[95]: 'l-store-copy assigned_value%0#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[99]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[107]: 'l-store-copy copy%1#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[119]: 'v-load copy%1#0' with 'l-load copy%1#0'
poetry: debug: Inserted extend_amount_per_block.ops[55]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[72]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted extend_amount_per_block.ops[41]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[58]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block.ops[59]: 'l-store-copy state#0 1'
poetry: debug: Replaced extend_amount_per_block.ops[78]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block.ops[79]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[101]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block.ops[49]: 'l-store-copy farm_asset#0 1'
poetry: debug: Replaced extend_amount_per_block.ops[76]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
poetry: debug: Inserted payout.ops[6]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced payout.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted payout.ops[21]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced payout.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted payout.ops[30]: 'l-store-copy copy%0#0 0'
poetry: debug: Replaced payout.ops[32]: 'v-load copy%0#0' with 'l-load copy%0#0'
poetry: debug: Inserted payout.ops[33]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout.ops[35]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout.ops[39]: 'l-store-copy reinterpret_biguint%0#0 0'
poetry: debug: Replaced payout.ops[41]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
poetry: debug: Inserted payout.ops[44]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced payout.ops[46]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted payout.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced payout.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted payout.ops[11]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced payout.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted payout.ops[19]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced payout.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted payout.ops[28]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced payout.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted payout.ops[30]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced payout.ops[34]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted payout_if_body@1.ops[6]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced payout_if_body@1.ops[8]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted payout_if_body@1.ops[2]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced payout_if_body@1.ops[5]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted payout_after_if_else@2.ops[11]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[13]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted payout_after_if_else@2.ops[28]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[30]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted payout_after_if_else@2.ops[36]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[38]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted payout_after_if_else@2.ops[7]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[10]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted payout_after_if_else@2.ops[22]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced payout_after_if_else@2.ops[25]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted payout_after_if_else@2.ops[4]: 'l-store-copy reinterpret_biguint%2#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[10]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
poetry: debug: Inserted payout_after_if_else@2.ops[25]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced payout_after_if_else@2.ops[30]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted payout_after_if_else@2.ops[20]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[30]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted payout_if_body@3.ops[4]: 'l-store-copy inner_txn_params%0%%param_ApplicationID_idx_0#0 0'
poetry: debug: Replaced payout_if_body@3.ops[6]: 'v-load inner_txn_params%0%%param_ApplicationID_idx_0#0' with 'l-load inner_txn_params%0%%param_ApplicationID_idx_0#0'
poetry: debug: Inserted payout_if_body@3.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
poetry: debug: Replaced payout_if_body@3.ops[13]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
poetry: debug: Inserted payout_after_if_else@5.ops[10]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted payout_after_if_else@5.ops[25]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[27]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted payout_after_if_else@5.ops[67]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[69]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted payout_after_if_else@5.ops[75]: 'l-store-copy updated_data%0#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[77]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
poetry: debug: Inserted payout_after_if_else@5.ops[78]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[80]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[84]: 'l-store-copy tmp%25#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[86]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
poetry: debug: Inserted payout_after_if_else@5.ops[88]: 'l-store-copy tmp%26#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[90]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
poetry: debug: Inserted payout_after_if_else@5.ops[93]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[95]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted payout_after_if_else@5.ops[97]: 'l-store-copy val_as_bytes%1#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[99]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[105]: 'l-store-copy updated_data%1#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[107]: 'v-load updated_data%1#0' with 'l-load updated_data%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[108]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[110]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[114]: 'l-store-copy reinterpret_biguint%3#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[116]: 'v-load reinterpret_biguint%3#0' with 'l-load reinterpret_biguint%3#0'
poetry: debug: Inserted payout_after_if_else@5.ops[119]: 'l-store-copy tmp%27#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[121]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
poetry: debug: Inserted payout_after_if_else@5.ops[1]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[4]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted payout_after_if_else@5.ops[18]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced payout_after_if_else@5.ops[21]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[40]: 'l-store-copy tmp%18#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[43]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted payout_after_if_else@5.ops[57]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[60]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted payout_after_if_else@5.ops[64]: 'l-store-copy tmp%24#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[67]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
poetry: debug: Inserted payout_after_if_else@5.ops[51]: 'l-store-copy tmp%21#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[55]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted payout_after_if_else@5.ops[63]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[68]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted payout_after_if_else@5.ops[77]: 'l-store-copy assigned_value%0#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[81]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
poetry: debug: Inserted payout_after_if_else@5.ops[108]: 'l-store-copy assigned_value%1#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[112]: 'v-load assigned_value%1#0' with 'l-load assigned_value%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[33]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[38]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted payout_after_if_else@5.ops[50]: 'l-store-copy tmp%20#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[56]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted payout_after_if_else@5.ops[31]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[38]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted payout_after_if_else@5.ops[49]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[57]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted payout_after_if_else@5.ops[47]: 'l-store-copy txn_fuel_spent#2 0'
poetry: debug: Replaced payout_after_if_else@5.ops[65]: 'v-load txn_fuel_spent#2' with 'l-load txn_fuel_spent#2'
poetry: debug: Inserted payout_after_if_else@5.ops[8]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[24]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[21]: 'l-store-copy value%1#0 2'
poetry: debug: Replaced payout_after_if_else@5.ops[39]: 'v-load value%1#0' with 'l-load value%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[16]: 'l-store-copy tmp%14#0 1'
poetry: debug: Replaced payout_after_if_else@5.ops[39]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted payout_after_if_else@5.ops[97]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[119]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[6]: 'l-store-copy txn_fuel_spent#2 0'
poetry: debug: Replaced payout_after_if_else@5.ops[48]: 'v-load txn_fuel_spent#2' with 'l-load txn_fuel_spent#2'
poetry: debug: Inserted payout_after_if_else@5.ops[28]: 'l-store-copy state#0 3'
poetry: debug: Replaced payout_after_if_else@5.ops[89]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_if_body@6.ops[6]: 'l-store-copy tmp%29#0 0'
poetry: debug: Replaced payout_if_body@6.ops[8]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
poetry: debug: Inserted payout_if_body@6.ops[2]: 'l-store-copy tmp%28#0 0'
poetry: debug: Replaced payout_if_body@6.ops[5]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
poetry: debug: Inserted payout_else_body@7.ops[8]: 'l-store-copy tmp%31#0 0'
poetry: debug: Replaced payout_else_body@7.ops[10]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
poetry: debug: Inserted payout_else_body@7.ops[4]: 'l-store-copy tmp%30#0 0'
poetry: debug: Replaced payout_else_body@7.ops[7]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
poetry: debug: Inserted payout_else_body@7.ops[1]: 'l-store-copy copy%1#0 0'
poetry: debug: Replaced payout_else_body@7.ops[13]: 'v-load copy%1#0' with 'l-load copy%1#0'
poetry: debug: Inserted payout_after_if_else@8.ops[3]: 'l-store-copy maybe_exists%2#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[6]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
poetry: debug: Inserted payout_after_if_else@8.ops[11]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced payout_after_if_else@8.ops[14]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted payout_after_if_else@8.ops[19]: 'l-store-copy maybe_exists%3#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[22]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
poetry: debug: Inserted payout_after_if_else@8.ops[27]: 'l-store-copy new_state_value%1#0 0'
poetry: debug: Replaced payout_after_if_else@8.ops[30]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
poetry: debug: Inserted payout_after_if_else@8.ops[5]: 'l-store-copy maybe_value%2#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[9]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
poetry: debug: Inserted payout_after_if_else@8.ops[22]: 'l-store-copy maybe_value%3#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[26]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
poetry: debug: Inserted withdraw_fees.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced withdraw_fees.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted withdraw_fees.ops[26]: 'l-store-copy locked_balance#0 0'
poetry: debug: Replaced withdraw_fees.ops[28]: 'v-load locked_balance#0' with 'l-load locked_balance#0'
poetry: debug: Inserted withdraw_fees.ops[33]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced withdraw_fees.ops[35]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted withdraw_fees.ops[44]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced withdraw_fees.ops[46]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted withdraw_fees.ops[50]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced withdraw_fees.ops[52]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted withdraw_fees.ops[6]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[9]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted withdraw_fees.ops[14]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[17]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted withdraw_fees.ops[20]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced withdraw_fees.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted withdraw_fees.ops[25]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced withdraw_fees.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted withdraw_fees.ops[41]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced withdraw_fees.ops[44]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted withdraw_fees.ops[43]: 'l-store-copy value%1#0 1'
poetry: debug: Replaced withdraw_fees.ops[48]: 'v-load value%1#0' with 'l-load value%1#0'
poetry: debug: Inserted withdraw_fees.ops[16]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[23]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted withdraw_fees.ops[36]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced withdraw_fees.ops[49]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted withdraw_fees.ops[8]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[29]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted optout.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced optout.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted optout.ops[13]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced optout.ops[15]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted optout.ops[25]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced optout.ops[27]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted optout.ops[7]: 'l-store-copy tmp%2#0 1'
poetry: debug: Replaced optout.ops[10]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted optout.ops[19]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced optout.ops[22]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted optout.ops[35]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced optout.ops[38]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted optout.ops[21]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced optout.ops[25]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted optout.ops[38]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced optout.ops[43]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted get_state.ops[6]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_state.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_state.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_state.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_state.ops[11]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced get_state.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted get_state.ops[13]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced get_state.ops[17]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted log_states_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
poetry: debug: Replaced log_states_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
poetry: debug: Inserted log_states_for_body@2.ops[11]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted log_states_for_body@2.ops[15]: 'l-store-copy box_name#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[17]: 'v-load box_name#0' with 'l-load box_name#0'
poetry: debug: Inserted log_states_for_body@2.ops[23]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted log_states_for_body@2.ops[6]: 'l-store-copy item_offset%0#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
poetry: debug: Inserted log_states_for_body@2.ops[20]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[23]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted log_states_for_body@2.ops[29]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced log_states_for_body@2.ops[32]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted log_states_for_body@2.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
poetry: debug: Inserted log_states_if_body@3.ops[6]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced log_states_if_body@3.ops[8]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted log_states_if_body@3.ops[2]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced log_states_if_body@3.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted log_states_if_body@3.ops[11]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced log_states_if_body@3.ops[14]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted log_states_if_body@3.ops[13]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced log_states_if_body@3.ops[17]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted log_block_proposers_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
poetry: debug: Replaced log_block_proposers_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
poetry: debug: Inserted log_block_proposers_for_body@2.ops[2]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced log_block_proposers_for_body@2.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted ensure_manager_caller.ops[12]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced ensure_manager_caller.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted ensure_manager_caller.ops[5]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced ensure_manager_caller.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted ensure_manager_caller.ops[7]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced ensure_manager_caller.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted ensure_manager_caller.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced ensure_manager_caller.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_spend_per_block.ops[7]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced get_spend_per_block.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_spend_per_block.ops[3]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_spend_per_block.ops[6]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_spend_per_block.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_spend_per_block.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_ix_rewards_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced get_ix_rewards_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted get_platform_fee_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_platform_fee_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_platform_fee_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced get_platform_fee_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted get_platform_fee_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_platform_fee_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_platform_fee_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced get_platform_fee_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_txn_fee_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced get_txn_fee_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
poetry: debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced approval_program_abi_routing@2.ops[18]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[21]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[23]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[25]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[27]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[29]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[31]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[37]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[39]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[42]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[44]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_project_apr_route@3.ops[33]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced approval_program_project_apr_route@3.ops[36]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[1]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[6]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[8]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[11]: 'l-store-copy tmp%14#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[13]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[16]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[18]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[21]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[23]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[25]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[27]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[31]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[33]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[35]: 'l-store-copy tmp%20#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[37]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[41]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[43]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[54]: 'l-store-copy tmp%25#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[56]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[59]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[61]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[50]: 'l-store-copy tmp%24#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[53]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[45]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[49]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[39]: 'l-store-copy tmp%21#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[49]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted approval_program_get_algo_cost_route@4.ops[29]: 'l-store-copy tmp%18#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_route@4.ops[49]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[1]: 'l-store-copy tmp%26#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[3]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[6]: 'l-store-copy tmp%27#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[8]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[11]: 'l-store-copy tmp%28#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[13]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[16]: 'l-store-copy tmp%29#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[18]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[21]: 'l-store-copy tmp%30#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[23]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[25]: 'l-store-copy tmp%31#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[27]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[31]: 'l-store-copy tmp%33#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[33]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[35]: 'l-store-copy tmp%34#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[37]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[41]: 'l-store-copy tmp%36#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[43]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[54]: 'l-store-copy tmp%39#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[56]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[59]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[61]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[50]: 'l-store-copy tmp%38#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[53]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[45]: 'l-store-copy tmp%37#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[49]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[39]: 'l-store-copy tmp%35#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[49]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
poetry: debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[29]: 'l-store-copy tmp%32#0 0'
poetry: debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[49]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[1]: 'l-store-copy tmp%40#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[6]: 'l-store-copy tmp%41#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[8]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[11]: 'l-store-copy tmp%42#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[13]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[16]: 'l-store-copy tmp%43#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[18]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[21]: 'l-store-copy tmp%44#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[23]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[25]: 'l-store-copy tmp%45#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[27]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[31]: 'l-store-copy tmp%47#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[33]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[35]: 'l-store-copy tmp%48#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[37]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[41]: 'l-store-copy tmp%50#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[43]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[47]: 'l-store-copy tmp%52#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[49]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[58]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[60]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[51]: 'l-store-copy tmp%53#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[45]: 'l-store-copy tmp%51#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[39]: 'l-store-copy tmp%49#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
poetry: debug: Inserted approval_program_create_farm_route@6.ops[29]: 'l-store-copy tmp%46#0 0'
poetry: debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[1]: 'l-store-copy tmp%54#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[3]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[6]: 'l-store-copy tmp%55#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[8]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[11]: 'l-store-copy tmp%56#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[13]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[16]: 'l-store-copy tmp%57#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[18]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[21]: 'l-store-copy tmp%58#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[23]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[25]: 'l-store-copy tmp%59#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[27]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[31]: 'l-store-copy tmp%61#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[33]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[40]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[42]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[35]: 'l-store-copy tmp%62#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[38]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
poetry: debug: Inserted approval_program_extend_duration_blocks_route@7.ops[29]: 'l-store-copy tmp%60#0 0'
poetry: debug: Replaced approval_program_extend_duration_blocks_route@7.ops[38]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[1]: 'l-store-copy tmp%63#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[3]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[6]: 'l-store-copy tmp%64#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[8]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[11]: 'l-store-copy tmp%65#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[13]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[16]: 'l-store-copy tmp%66#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[18]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[21]: 'l-store-copy tmp%67#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[23]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[25]: 'l-store-copy tmp%68#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[27]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[31]: 'l-store-copy tmp%70#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[33]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[40]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[42]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[35]: 'l-store-copy tmp%71#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[38]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
poetry: debug: Inserted approval_program_extend_amount_per_block_route@8.ops[29]: 'l-store-copy tmp%69#0 0'
poetry: debug: Replaced approval_program_extend_amount_per_block_route@8.ops[38]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[1]: 'l-store-copy tmp%72#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[3]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[6]: 'l-store-copy tmp%73#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[8]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[11]: 'l-store-copy tmp%74#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[13]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[16]: 'l-store-copy tmp%75#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[18]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[21]: 'l-store-copy tmp%76#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[23]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[25]: 'l-store-copy tmp%77#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[27]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[31]: 'l-store-copy tmp%79#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[33]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[43]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[45]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[37]: 'l-store-copy tmp%81#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[41]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[35]: 'l-store-copy tmp%80#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[41]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
poetry: debug: Inserted approval_program_payout_route@9.ops[29]: 'l-store-copy tmp%78#0 0'
poetry: debug: Replaced approval_program_payout_route@9.ops[41]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
poetry: debug: Inserted approval_program_noop_route@10.ops[1]: 'l-store-copy tmp%82#0 0'
poetry: debug: Replaced approval_program_noop_route@10.ops[3]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
poetry: debug: Inserted approval_program_noop_route@10.ops[6]: 'l-store-copy tmp%83#0 0'
poetry: debug: Replaced approval_program_noop_route@10.ops[8]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
poetry: debug: Inserted approval_program_noop_route@10.ops[11]: 'l-store-copy tmp%84#0 0'
poetry: debug: Replaced approval_program_noop_route@10.ops[13]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
poetry: debug: Inserted approval_program_noop_route@10.ops[16]: 'l-store-copy tmp%85#0 0'
poetry: debug: Replaced approval_program_noop_route@10.ops[18]: 'v-load tmp%85#0' with 'l-load tmp%85#0'
poetry: debug: Inserted approval_program_noop_route@10.ops[22]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_noop_route@10.ops[24]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_withdraw_fees_route@11.ops[1]: 'l-store-copy tmp%86#0 0'
poetry: debug: Replaced approval_program_withdraw_fees_route@11.ops[3]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
poetry: debug: Inserted approval_program_withdraw_fees_route@11.ops[6]: 'l-store-copy tmp%87#0 0'
poetry: debug: Replaced approval_program_withdraw_fees_route@11.ops[8]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
poetry: debug: Inserted approval_program_withdraw_fees_route@11.ops[11]: 'l-store-copy tmp%88#0 0'
poetry: debug: Replaced approval_program_withdraw_fees_route@11.ops[13]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
poetry: debug: Inserted approval_program_withdraw_fees_route@11.ops[16]: 'l-store-copy tmp%89#0 0'
poetry: debug: Replaced approval_program_withdraw_fees_route@11.ops[18]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
poetry: debug: Inserted approval_program_withdraw_fees_route@11.ops[21]: 'l-store-copy tmp%90#0 0'
poetry: debug: Replaced approval_program_withdraw_fees_route@11.ops[23]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
poetry: debug: Inserted approval_program_withdraw_fees_route@11.ops[25]: 'l-store-copy tmp%91#0 0'
poetry: debug: Replaced approval_program_withdraw_fees_route@11.ops[27]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
poetry: debug: Inserted approval_program_withdraw_fees_route@11.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_withdraw_fees_route@11.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[1]: 'l-store-copy tmp%92#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[3]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[6]: 'l-store-copy tmp%93#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[8]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[11]: 'l-store-copy tmp%94#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[13]: 'v-load tmp%94#0' with 'l-load tmp%94#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[16]: 'l-store-copy tmp%95#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[18]: 'v-load tmp%95#0' with 'l-load tmp%95#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[21]: 'l-store-copy tmp%96#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[23]: 'v-load tmp%96#0' with 'l-load tmp%96#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[25]: 'l-store-copy tmp%97#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[27]: 'v-load tmp%97#0' with 'l-load tmp%97#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[29]: 'l-store-copy tmp%98#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[31]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
poetry: debug: Inserted approval_program_optout_route@12.ops[34]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_optout_route@12.ops[36]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_update_max_duration_days_route@13.ops[1]: 'l-store-copy tmp%99#0 0'
poetry: debug: Replaced approval_program_update_max_duration_days_route@13.ops[3]: 'v-load tmp%99#0' with 'l-load tmp%99#0'
poetry: debug: Inserted approval_program_update_max_duration_days_route@13.ops[6]: 'l-store-copy tmp%100#0 0'
poetry: debug: Replaced approval_program_update_max_duration_days_route@13.ops[8]: 'v-load tmp%100#0' with 'l-load tmp%100#0'
poetry: debug: Inserted approval_program_update_max_duration_days_route@13.ops[11]: 'l-store-copy tmp%101#0 0'
poetry: debug: Replaced approval_program_update_max_duration_days_route@13.ops[13]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
poetry: debug: Inserted approval_program_update_max_duration_days_route@13.ops[16]: 'l-store-copy tmp%102#0 0'
poetry: debug: Replaced approval_program_update_max_duration_days_route@13.ops[18]: 'v-load tmp%102#0' with 'l-load tmp%102#0'
poetry: debug: Inserted approval_program_update_max_duration_days_route@13.ops[21]: 'l-store-copy tmp%103#0 0'
poetry: debug: Replaced approval_program_update_max_duration_days_route@13.ops[23]: 'v-load tmp%103#0' with 'l-load tmp%103#0'
poetry: debug: Inserted approval_program_update_max_duration_days_route@13.ops[25]: 'l-store-copy tmp%104#0 0'
poetry: debug: Replaced approval_program_update_max_duration_days_route@13.ops[27]: 'v-load tmp%104#0' with 'l-load tmp%104#0'
poetry: debug: Inserted approval_program_update_max_duration_days_route@13.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_update_max_duration_days_route@13.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[1]: 'l-store-copy tmp%105#0 0'
poetry: debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[3]: 'v-load tmp%105#0' with 'l-load tmp%105#0'
poetry: debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[6]: 'l-store-copy tmp%106#0 0'
poetry: debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[8]: 'v-load tmp%106#0' with 'l-load tmp%106#0'
poetry: debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[11]: 'l-store-copy tmp%107#0 0'
poetry: debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[13]: 'v-load tmp%107#0' with 'l-load tmp%107#0'
poetry: debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[16]: 'l-store-copy tmp%108#0 0'
poetry: debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[18]: 'v-load tmp%108#0' with 'l-load tmp%108#0'
poetry: debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[21]: 'l-store-copy tmp%109#0 0'
poetry: debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[23]: 'v-load tmp%109#0' with 'l-load tmp%109#0'
poetry: debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[25]: 'l-store-copy tmp%110#0 0'
poetry: debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[27]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
poetry: debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[1]: 'l-store-copy tmp%111#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[3]: 'v-load tmp%111#0' with 'l-load tmp%111#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[6]: 'l-store-copy tmp%112#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[8]: 'v-load tmp%112#0' with 'l-load tmp%112#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[11]: 'l-store-copy tmp%113#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[13]: 'v-load tmp%113#0' with 'l-load tmp%113#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[16]: 'l-store-copy tmp%114#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[18]: 'v-load tmp%114#0' with 'l-load tmp%114#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[21]: 'l-store-copy tmp%115#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[23]: 'v-load tmp%115#0' with 'l-load tmp%115#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[25]: 'l-store-copy tmp%116#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[27]: 'v-load tmp%116#0' with 'l-load tmp%116#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[29]: 'l-store-copy tmp%117#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[31]: 'v-load tmp%117#0' with 'l-load tmp%117#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[37]: 'l-store-copy tmp%119#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[39]: 'v-load tmp%119#0' with 'l-load tmp%119#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[42]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[44]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_get_state_route@15.ops[33]: 'l-store-copy tmp%118#0 0'
poetry: debug: Replaced approval_program_get_state_route@15.ops[36]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
poetry: debug: Inserted approval_program_log_states_route@16.ops[1]: 'l-store-copy tmp%120#0 0'
poetry: debug: Replaced approval_program_log_states_route@16.ops[3]: 'v-load tmp%120#0' with 'l-load tmp%120#0'
poetry: debug: Inserted approval_program_log_states_route@16.ops[6]: 'l-store-copy tmp%121#0 0'
poetry: debug: Replaced approval_program_log_states_route@16.ops[8]: 'v-load tmp%121#0' with 'l-load tmp%121#0'
poetry: debug: Inserted approval_program_log_states_route@16.ops[11]: 'l-store-copy tmp%122#0 0'
poetry: debug: Replaced approval_program_log_states_route@16.ops[13]: 'v-load tmp%122#0' with 'l-load tmp%122#0'
poetry: debug: Inserted approval_program_log_states_route@16.ops[16]: 'l-store-copy tmp%123#0 0'
poetry: debug: Replaced approval_program_log_states_route@16.ops[18]: 'v-load tmp%123#0' with 'l-load tmp%123#0'
poetry: debug: Inserted approval_program_log_states_route@16.ops[21]: 'l-store-copy tmp%124#0 0'
poetry: debug: Replaced approval_program_log_states_route@16.ops[23]: 'v-load tmp%124#0' with 'l-load tmp%124#0'
poetry: debug: Inserted approval_program_log_states_route@16.ops[26]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_log_states_route@16.ops[28]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[1]: 'l-store-copy tmp%125#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[3]: 'v-load tmp%125#0' with 'l-load tmp%125#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[6]: 'l-store-copy tmp%126#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[8]: 'v-load tmp%126#0' with 'l-load tmp%126#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[11]: 'l-store-copy tmp%127#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[13]: 'v-load tmp%127#0' with 'l-load tmp%127#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[16]: 'l-store-copy tmp%128#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[18]: 'v-load tmp%128#0' with 'l-load tmp%128#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[21]: 'l-store-copy tmp%129#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[23]: 'v-load tmp%129#0' with 'l-load tmp%129#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[27]: 'l-store-copy tmp%131#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[29]: 'v-load tmp%131#0' with 'l-load tmp%131#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[36]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[38]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[31]: 'l-store-copy tmp%132#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[34]: 'v-load tmp%132#0' with 'l-load tmp%132#0'
poetry: debug: Inserted approval_program_log_block_proposers_route@17.ops[25]: 'l-store-copy tmp%130#0 0'
poetry: debug: Replaced approval_program_log_block_proposers_route@17.ops[34]: 'v-load tmp%130#0' with 'l-load tmp%130#0'
poetry: debug: Inserted approval_program_bare_routing@20.ops[1]: 'l-store-copy tmp%133#0 0'
poetry: debug: Replaced approval_program_bare_routing@20.ops[6]: 'v-load tmp%133#0' with 'l-load tmp%133#0'
poetry: debug: Inserted approval_program_update@21.ops[1]: 'l-store-copy tmp%134#0 0'
poetry: debug: Replaced approval_program_update@21.ops[3]: 'v-load tmp%134#0' with 'l-load tmp%134#0'
poetry: debug: Inserted approval_program_update@21.ops[6]: 'l-store-copy tmp%135#0 0'
poetry: debug: Replaced approval_program_update@21.ops[8]: 'v-load tmp%135#0' with 'l-load tmp%135#0'
poetry: debug: Inserted approval_program_update@21.ops[12]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_update@21.ops[14]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_delete@22.ops[1]: 'l-store-copy tmp%136#0 0'
poetry: debug: Replaced approval_program_delete@22.ops[3]: 'v-load tmp%136#0' with 'l-load tmp%136#0'
poetry: debug: Inserted approval_program_delete@22.ops[6]: 'l-store-copy tmp%137#0 0'
poetry: debug: Replaced approval_program_delete@22.ops[8]: 'v-load tmp%137#0' with 'l-load tmp%137#0'
poetry: debug: Inserted approval_program_delete@22.ops[12]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_delete@22.ops[14]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program___algopy_default_create@23.ops[1]: 'l-store-copy tmp%138#0 0'
poetry: debug: Replaced approval_program___algopy_default_create@23.ops[3]: 'v-load tmp%138#0' with 'l-load tmp%138#0'
poetry: debug: Inserted approval_program___algopy_default_create@23.ops[6]: 'l-store-copy tmp%139#0 0'
poetry: debug: Replaced approval_program___algopy_default_create@23.ops[8]: 'v-load tmp%139#0' with 'l-load tmp%139#0'
poetry: debug: Inserted approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25.ops[1]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25.ops[3]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted approval_program_after_if_else@28.ops[1]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced approval_program_after_if_else@28.ops[3]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Found 1 edge set/s for smart_contracts.common.send.axfer
poetry: debug: Found 1 edge set/s for smart_contracts.common.send.axfer_closeout
poetry: debug: Found 1 edge set/s for smart_contracts.common.send.algo_pay
poetry: debug: Found 2 edge set/s for smart_contracts.common.math.safe_subtract
poetry: debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
poetry: debug: shared x-stack for safe_subtract_ternary_true@1 -> safe_subtract_ternary_merge@3: ternary_result%0#0
poetry: debug: shared x-stack for safe_subtract_ternary_false@2 -> safe_subtract_ternary_merge@3: ternary_result%0#0
poetry: debug: Found 1 edge set/s for smart_contracts.common.custom.ensure
poetry: debug: Found 1 edge set/s for smart_contracts.common.round_time.get_round_time
poetry: debug: Found 6 edge set/s for smart_contracts.common.round_time.get_block_rewards
poetry: debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
poetry: debug: shared x-stack for get_block_rewards_ternary_true@7 -> get_block_rewards_ternary_merge@9: ternary_result%0#0
poetry: debug: shared x-stack for get_block_rewards_ternary_false@8 -> get_block_rewards_ternary_merge@9: ternary_result%0#0
poetry: debug: Found 5 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Allocated 2 variable/s to x-stack: and_result%0#0, ternary_result%0#0
poetry: debug: shared x-stack for project_apr_bool_true@4 -> project_apr_bool_merge@6: and_result%0#0
poetry: debug: shared x-stack for project_apr_bool_false@5 -> project_apr_bool_merge@6: and_result%0#0
poetry: debug: shared x-stack for project_apr_ternary_true@9 -> project_apr_ternary_merge@11: ternary_result%0#0
poetry: debug: shared x-stack for project_apr_ternary_false@10 -> project_apr_ternary_merge@11: ternary_result%0#0
poetry: debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
poetry: debug: shared x-stack for calculate_algo_cost_ternary_true@1 -> calculate_algo_cost_ternary_merge@3: ternary_result%0#0
poetry: debug: shared x-stack for calculate_algo_cost_ternary_false@2 -> calculate_algo_cost_ternary_merge@3: ternary_result%0#0
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Found 5 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Found 5 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Found 3 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
poetry: debug: Allocated 1 variable/s to x-stack: tmp%0#0
poetry: debug: shared x-stack for approval_program_project_apr_route@3 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_get_algo_cost_route@4 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_get_algo_cost_and_max_duration_route@5 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_create_farm_route@6 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_extend_duration_blocks_route@7 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_extend_amount_per_block_route@8 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_payout_route@9 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_noop_route@10 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_withdraw_fees_route@11 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_optout_route@12 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_update_max_duration_days_route@13 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_update_min_duration_blocks_route@14 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_get_state_route@15 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_log_states_route@16 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_log_block_proposers_route@17 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_update@21 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_delete@22 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: shared x-stack for approval_program_after_if_else@28 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
poetry: debug: smart_contracts.common.round_time.get_round_time f-stack entry: []
poetry: debug: smart_contracts.common.round_time.get_round_time f-stack on first store: ['first_accessible#0', 'last_accessible#0']
poetry: debug: smart_contracts.common.round_time.get_block_rewards f-stack entry: ['num_payouts#9', 'rnd#0', 'sum_payouts#9']
poetry: debug: smart_contracts.common.round_time.get_block_rewards f-stack on first store: ['last_accessible#0', 'delta#0', 'bonus#0', 'num_payouts#0', 'sum_payouts#0', 'rnd_delta#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack entry: ['own_yearly_blocks_produced#0', 'total_online_stake#0', 'avg_round_time#0', 'balance#0', 'current_avg_block_payout#0', 'current_block_rewards#0', 'farm_amount#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack on first store: ['tm2_app_id#0', 'exists2#0', 'tm2_lp_addr#0', 'exists3#0', 'staked#0', 'exists4#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack entry: []
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack on first store: ['allowed_duration#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack entry: ['txn_fuel_spent#2']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack on first store: ['state#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack entry: ['box_name#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack on first store: ['tmp%0#0', 'k#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack entry: []
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack on first store: ['tmp%0#0', 'rnd#0']
poetry: debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init() -> uint64:
poetry: debug: removing explicit jump to fall-through block main_call___init__@1
poetry: debug: removing explicit jump to fall-through block main_after_if_else@2
poetry: smart_contracts/common/send.py:4 debug: optimizing TEAL subroutine smart_contracts.common.send.optin(asset: uint64, fee: uint64) -> void:
poetry: smart_contracts/common/send.py:18 debug: optimizing TEAL subroutine smart_contracts.common.send.axfer(asset: uint64, receiver: bytes, amount: uint64, fee: uint64) -> void:
poetry: debug: removing explicit jump to fall-through block axfer_next_txn@1
poetry: smart_contracts/common/send.py:26 debug: optimizing TEAL subroutine smart_contracts.common.send.axfer_closeout(asset: uint64, receiver: bytes, fee: uint64) -> void:
poetry: debug: removing explicit jump to fall-through block axfer_closeout_next_txn@1
poetry: smart_contracts/common/send.py:38 debug: optimizing TEAL subroutine smart_contracts.common.send.algo_pay(receiver: bytes, amount: uint64, fee: uint64) -> void:
poetry: debug: removing explicit jump to fall-through block algo_pay_next_txn@1
poetry: smart_contracts/common/math.py:7 debug: optimizing TEAL subroutine smart_contracts.common.math.max(a: uint64, b: uint64) -> uint64:
poetry: smart_contracts/common/math.py:12 debug: optimizing TEAL subroutine smart_contracts.common.math.safe_subtract(a: uint64, b: uint64, default: uint64) -> uint64:
poetry: debug: removing explicit jump to fall-through block safe_subtract_ternary_true@1
poetry: debug: removing explicit jump to fall-through block safe_subtract_ternary_merge@3
poetry: smart_contracts/common/custom.py:9 debug: optimizing TEAL subroutine smart_contracts.common.custom.ensure(cond: uint64, msg: bytes) -> void:
poetry: debug: removing explicit jump to fall-through block ensure_if_body@1
poetry: smart_contracts/common/validate.py:15 debug: optimizing TEAL subroutine smart_contracts.common.validate.axfer(axfer_txn_idx: uint64, expected_asset: uint64) -> uint64:
poetry: smart_contracts/common/validate.py:26 debug: optimizing TEAL subroutine smart_contracts.common.validate.axfer_amount_exact(axfer_txn_id: uint64, expected_asset: uint64, expected_amount: uint64) -> void:
poetry: smart_contracts/common/validate.py:35 debug: optimizing TEAL subroutine smart_contracts.common.validate.payment(txn_idx: uint64) -> uint64:
poetry: smart_contracts/common/validate.py:50 debug: optimizing TEAL subroutine smart_contracts.common.validate.payment_amount_exact(payment_txn_idx: uint64, expected_amount: uint64) -> void:
poetry: smart_contracts/common/round_time.py:22 debug: optimizing TEAL subroutine smart_contracts.common.round_time.get_round_time(min_round_sample: uint64) -> uint64, uint64:
poetry: debug: removing explicit jump to fall-through block get_round_time_if_body@1
poetry: debug: removing explicit jump to fall-through block get_round_time_after_if_else@2
poetry: smart_contracts/common/round_time.py:38 debug: optimizing TEAL subroutine smart_contracts.common.round_time.get_block_rewards() -> uint64:
poetry: debug: removing explicit jump to fall-through block get_block_rewards_for_header@1
poetry: debug: removing explicit jump to fall-through block get_block_rewards_for_body@2
poetry: debug: removing explicit jump to fall-through block get_block_rewards_if_body@3
poetry: debug: removing explicit jump to fall-through block get_block_rewards_after_if_else@4
poetry: debug: removing explicit jump to fall-through block get_block_rewards_for_footer@5
poetry: debug: removing explicit jump to fall-through block get_block_rewards_ternary_true@7
poetry: debug: removing explicit jump to fall-through block get_block_rewards_ternary_merge@9
poetry: smart_contracts/dualstakefarm/contract.py:32 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset(tm2_app_id: uint64, tm2_lp_addr: bytes, farm_amount: uint64) -> uint64:
poetry: smart_contracts/dualstakefarm/contract.py:104 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__() -> void:
poetry: smart_contracts/dualstakefarm/contract.py:117 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update() -> void:
poetry: smart_contracts/dualstakefarm/contract.py:121 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete() -> void:
poetry: smart_contracts/dualstakefarm/contract.py:125 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr(recipient_app_id: uint64) -> bytes:
poetry: debug: removing explicit jump to fall-through block project_apr_and_contd@1
poetry: debug: removing explicit jump to fall-through block project_apr_and_contd@2
poetry: debug: removing explicit jump to fall-through block project_apr_and_contd@3
poetry: debug: removing explicit jump to fall-through block project_apr_bool_true@4
poetry: debug: removing explicit jump to fall-through block project_apr_bool_merge@6
poetry: debug: removing explicit jump to fall-through block project_apr_if_body@7
poetry: debug: removing explicit jump to fall-through block project_apr_after_if_else@8
poetry: debug: removing explicit jump to fall-through block project_apr_ternary_true@9
poetry: debug: removing explicit jump to fall-through block project_apr_ternary_merge@11
poetry: smart_contracts/dualstakefarm/contract.py:184 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost(recipient_app: uint64, farm_asset: uint64, duration_blocks: uint64) -> bytes:
poetry: debug: removing explicit jump to fall-through block calculate_algo_cost_ternary_true@1
poetry: debug: removing explicit jump to fall-through block calculate_algo_cost_ternary_merge@3
poetry: smart_contracts/dualstakefarm/contract.py:211 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost(recipient_app: uint64, farm_asset: uint64, duration_blocks: uint64) -> bytes:
poetry: smart_contracts/dualstakefarm/contract.py:217 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration(recipient_app: uint64, farm_asset: uint64, duration_blocks: uint64) -> bytes:
poetry: smart_contracts/dualstakefarm/contract.py:232 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration(recipient_app: uint64) -> uint64:
poetry: smart_contracts/dualstakefarm/contract.py:256 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration(recipient_app: uint64, duration_blocks: uint64) -> void:
poetry: debug: removing explicit jump to fall-through block validate_duration_if_body@1
poetry: smart_contracts/dualstakefarm/contract.py:266 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm(recipient_app: uint64, farm_asset: uint64, amount_per_block: uint64, duration_blocks: uint64) -> void:
poetry: debug: removing explicit jump to fall-through block create_farm_if_body@1
poetry: debug: removing explicit jump to fall-through block create_farm_after_if_else@2
poetry: smart_contracts/dualstakefarm/contract.py:320 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks(recipient_app: uint64, duration_blocks: uint64) -> void:
poetry: smart_contracts/dualstakefarm/contract.py:361 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block(recipient_app: uint64, amount_per_block: uint64) -> void:
poetry: smart_contracts/dualstakefarm/contract.py:385 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout(recipient_app: uint64, block_round: uint64, call_swap: bytes) -> void:
poetry: debug: removing explicit jump to fall-through block payout_if_body@1
poetry: debug: removing explicit jump to fall-through block payout_if_body@3
poetry: debug: removing explicit jump to fall-through block payout_next_txn@4
poetry: debug: removing explicit jump to fall-through block payout_after_if_else@5
poetry: debug: removing explicit jump to fall-through block payout_if_body@6
poetry: debug: removing explicit jump to fall-through block payout_after_if_else@8
poetry: smart_contracts/dualstakefarm/contract.py:455 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop() -> void:
poetry: smart_contracts/dualstakefarm/contract.py:459 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees(amount: uint64) -> void:
poetry: smart_contracts/dualstakefarm/contract.py:475 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout(asset: uint64) -> void:
poetry: smart_contracts/dualstakefarm/contract.py:486 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days(max_duration: uint64) -> void:
poetry: smart_contracts/dualstakefarm/contract.py:491 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks(min_duration: uint64) -> void:
poetry: smart_contracts/dualstakefarm/contract.py:496 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state(recipient_app: uint64) -> bytes:
poetry: smart_contracts/dualstakefarm/contract.py:500 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states(box_names: bytes) -> void:
poetry: debug: removing explicit jump to fall-through block log_states_for_header@1
poetry: debug: removing explicit jump to fall-through block log_states_for_body@2
poetry: debug: removing explicit jump to fall-through block log_states_if_body@3
poetry: debug: removing explicit jump to fall-through block log_states_after_if_else@5
poetry: debug: removing explicit jump to fall-through block log_states_for_footer@6
poetry: smart_contracts/dualstakefarm/contract.py:509 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers(start_round: uint64, end_round: uint64) -> void:
poetry: debug: removing explicit jump to fall-through block log_block_proposers_for_header@1
poetry: debug: removing explicit jump to fall-through block log_block_proposers_for_body@2
poetry: debug: removing explicit jump to fall-through block log_block_proposers_for_footer@3
poetry: smart_contracts/dualstakefarm/contract.py:514 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller() -> void:
poetry: smart_contracts/dualstakefarm/contract.py:526 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block() -> uint64:
poetry: smart_contracts/dualstakefarm/contract.py:530 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block() -> uint64:
poetry: smart_contracts/dualstakefarm/contract.py:534 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block() -> uint64:
poetry: smart_contracts/dualstakefarm/contract.py:538 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block() -> uint64:
poetry: debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.approval_program() -> uint64:
poetry: debug: removing explicit jump to fall-through block approval_program_block@1
poetry: debug: removing explicit jump to fall-through block approval_program_abi_routing@2
poetry: debug: removing explicit jump to fall-through block approval_program_switch_case_default@18
poetry: debug: removing explicit jump to fall-through block approval_program_switch_case_next@19
poetry: debug: removing explicit jump to fall-through block approval_program_after_if_else@28
poetry: debug: removing explicit jump to fall-through block approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29
poetry: debug: removing explicit jump to fall-through block approval_program_switch_case_default@26
poetry: debug: removing explicit jump to fall-through block approval_program_switch_case_next@27
poetry: debug: removing explicit jump to fall-through block approval_program_block@24
poetry: debug: removing explicit jump to fall-through block approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25
poetry: debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
poetry: info: Writing smart_contracts/dualstakefarm/DualstakeFarm.arc32.json
poetry: info: Writing smart_contracts/dualstakefarm/DualstakeFarm.approval.teal
poetry: info: Writing smart_contracts/dualstakefarm/DualstakeFarm.clear.teal
poetry: info: Writing smart_contracts/dualstakefarm/DualstakeFarm.approval.puya.map
poetry: info: Writing smart_contracts/dualstakefarm/DualstakeFarm.clear.puya.map
debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=False, output_memory_ir=False, output_bytecode=False, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/smart_contracts/dualstakefarm/contract.py'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv
debug: Using python executable: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/bin/python3
debug: Using python site-packages: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages
debug: Found algopy: 2.6.0
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/__init__.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/types.pyi
debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/abc.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_collections_abc.pyi
debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/abc.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_typeshed/__init__.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing_extensions.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/builtins.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/sys/__init__.pyi
debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_template_variables.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_hints.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_primitives.pyi
debug: Discovered user module smart_contracts at smart_contracts/__init__.py
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/op.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_contract.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/itxn.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_constants.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_reference.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/__init__.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_state.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_unsigned_builtins.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/gtxn.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_compiled.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/arc4.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_box.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_transaction.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_util.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_logic_sig.pyi
debug: Discovered user module smart_contracts.common.send at smart_contracts/common/send.py
debug: Discovered user module smart_contracts.common.math at smart_contracts/common/math.py
debug: Discovered user module smart_contracts.common.custom at smart_contracts/common/custom.py
debug: Discovered user module smart_contracts.common.validate at smart_contracts/common/validate.py
debug: Discovered user module smart_contracts.common.round_time at smart_contracts/common/round_time.py
debug: Discovered user module smart_contracts.dualstakefarm.contract at smart_contracts/dualstakefarm/contract.py
debug: Building AWST for module smart_contracts
debug: Building AWST for module smart_contracts.common.send
debug: Building AWST for module smart_contracts.common.math
debug: Building AWST for module smart_contracts.common.custom
debug: Building AWST for module smart_contracts.common.validate
debug: Building AWST for module smart_contracts.common.round_time
debug: Building AWST for module smart_contracts.dualstakefarm.contract
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function smart_contracts.common.send.optin
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.send.send
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function smart_contracts.common.send.axfer
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.send.axfer_closeout
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.send.algo_pay
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.send.algo_closeout
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.math.max
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.math.safe_subtract
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
debug: Terminated block@3
debug: Building IR for function smart_contracts.common.custom.ensure
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function smart_contracts.common.validate.asset
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.axfer
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.axfer_amount_exact
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.payment
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.payment_amount_min
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.payment_amount_exact
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.round_time.get_round_time
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@2
debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0
debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1)
debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0 in current definition for 1 blocks
debug: Created Phi assignment: let first_accessible#1: uint64 = undefined while trying to resolve 'first_accessible' in block@2
debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0) in block@0
debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0
debug: Deleting Phi assignment: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1)
debug: Replaced trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Building IR for function smart_contracts.common.round_time.get_block_rewards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'rnd_delta' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd_delta#1: uint64 = undefined while trying to resolve 'rnd_delta' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'last_accessible' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Looking for 'num_payouts' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let num_payouts#1: uint64 = undefined while trying to resolve 'num_payouts' in block@1
debug: Looking for 'sum_payouts' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sum_payouts#1: uint64 = undefined while trying to resolve 'sum_payouts' in block@1
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added rnd_delta#0 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0) in block@0
debug: Added rnd_delta#2 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0, rnd_delta#2 <- block@5) in block@5
debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
debug: Created Phi assignment: let last_accessible#2: uint64 = undefined while trying to resolve 'last_accessible' in block@4
debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2) in block@2
debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1
debug: Deleting Phi assignment: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3)
debug: Replaced trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1 in current definition for 1 blocks
debug: Added last_accessible#1 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0
debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5)
debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0 in current definition for 5 blocks
debug: Added num_payouts#0 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0) in block@0
debug: Created Phi assignment: let num_payouts#3: uint64 = undefined while trying to resolve 'num_payouts' in block@4
debug: Added num_payouts#1 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2) in block@2
debug: Added num_payouts#2 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2, num_payouts#2 <- block@3) in block@3
debug: Added num_payouts#3 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0, num_payouts#3 <- block@5) in block@5
debug: Added sum_payouts#0 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0) in block@0
debug: Created Phi assignment: let sum_payouts#3: uint64 = undefined while trying to resolve 'sum_payouts' in block@4
debug: Added sum_payouts#1 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2) in block@2
debug: Added sum_payouts#2 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2, sum_payouts#2 <- block@3) in block@3
debug: Added sum_payouts#3 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0, sum_payouts#3 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let bonus#1: uint64 = undefined while trying to resolve 'bonus' in block@1
debug: Added bonus#0 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0) in block@0
debug: Created Phi assignment: let bonus#2: uint64 = undefined while trying to resolve 'bonus' in block@4
debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2) in block@2
debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1
debug: Deleting Phi assignment: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3)
debug: Replaced trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1 in current definition for 1 blocks
debug: Added bonus#1 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0
debug: Deleting Phi assignment: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5)
debug: Replaced trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0 in current definition for 5 blocks
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@9
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7) in block@7
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7, ternary_result%0#1 <- block@8) in block@8
debug: Terminated block@9
debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@6
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4) in block@4
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4, and_result%0#1 <- block@5) in block@5
debug: Created Phi assignment: let recipient_app_id#1: uint64 = undefined while trying to resolve 'recipient_app_id' in block@6
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4) in block@4
debug: Created Phi assignment: let recipient_app_id#2: uint64 = undefined while trying to resolve 'recipient_app_id' in block@5
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0) in block@0
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1) in block@1
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2) in block@2
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0
debug: Deleting Phi assignment: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3)
debug: Replaced trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0 in current definition for 1 blocks
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0
debug: Deleting Phi assignment: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5)
debug: Replaced trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let farm_amount#2: uint64 = undefined while trying to resolve 'farm_amount' in block@8
debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6) in block@6
debug: Added farm_amount#1 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6, farm_amount#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let tm2_app_id#1: uint64 = undefined while trying to resolve 'tm2_app_id' in block@8
debug: Created Phi assignment: let tm2_app_id#2: uint64 = undefined while trying to resolve 'tm2_app_id' in block@6
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4) in block@4
debug: Created Phi assignment: let tm2_app_id#3: uint64 = undefined while trying to resolve 'tm2_app_id' in block@5
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0) in block@0
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1) in block@1
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2) in block@2
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0
debug: Deleting Phi assignment: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3)
debug: Replaced trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0 in current definition for 1 blocks
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0
debug: Deleting Phi assignment: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5)
debug: Replaced trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0 in current definition for 1 blocks
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6) in block@6
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0
debug: Deleting Phi assignment: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7)
debug: Replaced trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0 in current definition for 1 blocks
debug: Created Phi assignment: let tm2_lp_addr#1: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@8
debug: Created Phi assignment: let tm2_lp_addr#2: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@6
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4) in block@4
debug: Created Phi assignment: let tm2_lp_addr#3: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@5
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0) in block@0
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1) in block@1
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2) in block@2
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0
debug: Deleting Phi assignment: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3)
debug: Replaced trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0 in current definition for 1 blocks
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0
debug: Deleting Phi assignment: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5)
debug: Replaced trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0 in current definition for 1 blocks
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6) in block@6
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0
debug: Deleting Phi assignment: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7)
debug: Replaced trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0 in current definition for 1 blocks
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@11
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9) in block@9
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9, ternary_result%0#1 <- block@10) in block@10
debug: Created Phi assignment: let current_block_rewards#1: uint64 = undefined while trying to resolve 'current_block_rewards' in block@11
debug: Created Phi assignment: let current_block_rewards#2: uint64 = undefined while trying to resolve 'current_block_rewards' in block@8
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6) in block@6
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0
debug: Deleting Phi assignment: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7)
debug: Replaced trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0 in current definition for 1 blocks
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9) in block@9
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0
debug: Deleting Phi assignment: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10)
debug: Replaced trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0 in current definition for 1 blocks
debug: Created Phi assignment: let own_yearly_blocks_produced#1: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@11
debug: Created Phi assignment: let own_yearly_blocks_produced#2: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@8
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6) in block@6
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0
debug: Deleting Phi assignment: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7)
debug: Replaced trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0 in current definition for 1 blocks
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9) in block@9
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0
debug: Deleting Phi assignment: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10)
debug: Replaced trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0 in current definition for 1 blocks
debug: Created Phi assignment: let staked#1: uint64 = undefined while trying to resolve 'staked' in block@11
debug: Created Phi assignment: let staked#2: uint64 = undefined while trying to resolve 'staked' in block@8
debug: Created Phi assignment: let staked#3: uint64 = undefined while trying to resolve 'staked' in block@6
debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4) in block@4
debug: Created Phi assignment: let staked#4: uint64 = undefined while trying to resolve 'staked' in block@5
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0) in block@0
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1) in block@1
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2) in block@2
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0
debug: Deleting Phi assignment: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3)
debug: Replaced trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0 in current definition for 1 blocks
debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0
debug: Deleting Phi assignment: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5)
debug: Replaced trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0 in current definition for 1 blocks
debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6) in block@6
debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0
debug: Deleting Phi assignment: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7)
debug: Replaced trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0 in current definition for 1 blocks
debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9) in block@9
debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0
debug: Deleting Phi assignment: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10)
debug: Replaced trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0 in current definition for 1 blocks
debug: Created Phi assignment: let balance#1: uint64 = undefined while trying to resolve 'balance' in block@11
debug: Created Phi assignment: let balance#2: uint64 = undefined while trying to resolve 'balance' in block@8
debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6) in block@6
debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0
debug: Deleting Phi assignment: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7)
debug: Replaced trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0 in current definition for 1 blocks
debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9) in block@9
debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0
debug: Deleting Phi assignment: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10)
debug: Replaced trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let current_avg_block_payout#1: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@11
debug: Created Phi assignment: let current_avg_block_payout#2: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@8
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6) in block@6
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0
debug: Deleting Phi assignment: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7)
debug: Replaced trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0 in current definition for 1 blocks
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9) in block@9
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0
debug: Deleting Phi assignment: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10)
debug: Replaced trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0 in current definition for 1 blocks
debug: Created Phi assignment: let farm_amount#3: uint64 = undefined while trying to resolve 'farm_amount' in block@11
debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9) in block@9
debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) in block@10
debug: Replacing trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2
debug: Deleting Phi assignment: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10)
debug: Replaced trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2 in current definition for 1 blocks
debug: Created Phi assignment: let avg_round_time#1: uint64 = undefined while trying to resolve 'avg_round_time' in block@11
debug: Created Phi assignment: let avg_round_time#2: uint64 = undefined while trying to resolve 'avg_round_time' in block@8
debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6) in block@6
debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0
debug: Deleting Phi assignment: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7)
debug: Replaced trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0 in current definition for 1 blocks
debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9) in block@9
debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0
debug: Deleting Phi assignment: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10)
debug: Replaced trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0 in current definition for 1 blocks
debug: Created Phi assignment: let total_online_stake#1: biguint = undefined while trying to resolve 'total_online_stake' in block@11
debug: Created Phi assignment: let total_online_stake#2: biguint = undefined while trying to resolve 'total_online_stake' in block@8
debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6) in block@6
debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0
debug: Deleting Phi assignment: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7)
debug: Replaced trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0 in current definition for 1 blocks
debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9) in block@9
debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0
debug: Deleting Phi assignment: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10)
debug: Replaced trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0 in current definition for 1 blocks
debug: Terminated block@11
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@3
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1) in block@1
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0
debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2)
debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@3
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1) in block@1
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0
debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2)
debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
debug: Terminated block@3
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let farm_asset#1: uint64 = undefined while trying to resolve 'farm_asset' in block@2
debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0) in block@0
debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0
debug: Deleting Phi assignment: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1)
debug: Replaced trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0 in current definition for 1 blocks
debug: Created Phi assignment: let amount_per_block#1: uint64 = undefined while trying to resolve 'amount_per_block' in block@2
debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0) in block@0
debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0
debug: Deleting Phi assignment: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1)
debug: Replaced trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0 in current definition for 1 blocks
debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@2
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0) in block@0
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0
debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1)
debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@2
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0) in block@0
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0
debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1)
debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let txn_fuel_spent#1: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@5
debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2) in block@2
debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0
debug: Deleting Phi assignment: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4)
debug: Replaced trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0 in current definition for 1 blocks
debug: Created Phi assignment: let state#1: bytes = undefined while trying to resolve 'state' in block@5
debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2) in block@2
debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0
debug: Deleting Phi assignment: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4)
debug: Replaced trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0 in current definition for 1 blocks
debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@5
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2) in block@2
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0
debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4)
debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
debug: Created Phi assignment: let block_round#1: uint64 = undefined while trying to resolve 'block_round' in block@5
debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2) in block@2
debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0
debug: Deleting Phi assignment: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4)
debug: Replaced trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let txn_fuel_spent#5: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@8
debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6) in block@6
debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) in block@7
debug: Replacing trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4
debug: Deleting Phi assignment: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7)
debug: Replaced trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4 in current definition for 1 blocks
debug: Terminated block@8
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'k' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let k#1: uint64 = undefined while trying to resolve 'k' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box_names' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box_names#1: bytes = undefined while trying to resolve 'box_names' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added k#0 to Phi node: let k#1: uint64 = φ(k#0 <- block@0) in block@0
debug: Added k#2 to Phi node: let k#1: uint64 = φ(k#0 <- block@0, k#2 <- block@6) in block@6
debug: Added box_names#0 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0) in block@0
debug: Created Phi assignment: let box_names#2: bytes = undefined while trying to resolve 'box_names' in block@5
debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3) in block@3
debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1
debug: Deleting Phi assignment: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4)
debug: Replaced trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1 in current definition for 1 blocks
debug: Added box_names#1 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0
debug: Deleting Phi assignment: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6)
debug: Replaced trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd#1: uint64 = undefined while trying to resolve 'rnd' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added rnd#0 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0) in block@0
debug: Added rnd#2 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0, rnd#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine smart_contracts.common.send.send
debug: removing unused subroutine smart_contracts.common.send.algo_closeout
debug: removing unused subroutine smart_contracts.common.validate.asset
debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine smart_contracts.common.send.optin
debug: removing unused subroutine smart_contracts.common.send.send
debug: removing unused subroutine smart_contracts.common.send.axfer
debug: removing unused subroutine smart_contracts.common.send.axfer_closeout
debug: removing unused subroutine smart_contracts.common.send.algo_pay
debug: removing unused subroutine smart_contracts.common.send.algo_closeout
debug: removing unused subroutine smart_contracts.common.math.max
debug: removing unused subroutine smart_contracts.common.math.safe_subtract
debug: removing unused subroutine smart_contracts.common.custom.ensure
debug: removing unused subroutine smart_contracts.common.validate.asset
debug: removing unused subroutine smart_contracts.common.validate.axfer
debug: removing unused subroutine smart_contracts.common.validate.axfer_amount_exact
debug: removing unused subroutine smart_contracts.common.validate.payment
debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
debug: removing unused subroutine smart_contracts.common.validate.payment_amount_exact
debug: removing unused subroutine smart_contracts.common.round_time.get_round_time
debug: removing unused subroutine smart_contracts.common.round_time.get_block_rewards
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
info: optimizing approval program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.optin
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.axfer_closeout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%param_AssetAmount_idx_0#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.algo_pay
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.math.max
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.custom.ensure
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.round_time.get_block_rewards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create in smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable asa_id#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable exists#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable txn_fuel_spent#0
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Removing unused variable reinterpret_biguint%4#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: Begin optimization pass 2/100
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.optin
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.axfer_closeout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.send.algo_pay
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.math.max
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.custom.ensure
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.common.round_time.get_block_rewards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.send.optin
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.send.optin using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.send.optin
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.send.axfer
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.send.axfer using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.send.axfer
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.send.axfer_closeout
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.send.axfer_closeout using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.send.axfer_closeout
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.send.algo_pay
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.send.algo_pay using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.send.algo_pay
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.math.max
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.math.max using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.math.max
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.math.safe_subtract
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.math.safe_subtract using strategy RootOperandGrouping
debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.math.safe_subtract
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.custom.ensure
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.custom.ensure using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.custom.ensure
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.validate.axfer
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.validate.axfer using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.validate.axfer
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.validate.axfer_amount_exact
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.validate.axfer_amount_exact using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.validate.axfer_amount_exact
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.validate.payment
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.validate.payment using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.validate.payment
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.validate.payment_amount_exact
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.validate.payment_amount_exact using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.validate.payment_amount_exact
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.round_time.get_round_time
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.round_time.get_round_time using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.round_time.get_round_time
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.common.round_time.get_block_rewards
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.round_time.get_block_rewards using strategy RootOperandGrouping
debug: Coalescing num_payouts#0 with [num_payouts#6, num_payouts#1, num_payouts#2, num_payouts#3]
debug: Coalescing sum_payouts#0 with [sum_payouts#6, sum_payouts#1, sum_payouts#2, sum_payouts#3]
debug: Coalescing rnd_delta#0 with [rnd_delta#5, rnd_delta#1, rnd_delta#2]
debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
debug: Coalescing resulted in 39 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.round_time.get_block_rewards
debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: ready: 
debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: * to_do rnd_delta#0
debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: ready: 
debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: * to_do rnd_delta#0
debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
debug: ready: num_payouts#9, sum_payouts#9
debug: to_do: num_payouts#9, sum_payouts#9
debug: * avail sum_payouts#9
debug: * avail sum_payouts#0
debug: * avail num_payouts#9
debug: * avail num_payouts#0
debug: * to_do sum_payouts#9
debug: * to_do num_payouts#9
debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
debug: ready: num_payouts#9, sum_payouts#9
debug: to_do: num_payouts#9, sum_payouts#9
debug: * avail sum_payouts#9
debug: * avail sum_payouts#0
debug: * avail num_payouts#9
debug: * avail num_payouts#0
debug: * to_do sum_payouts#9
debug: * to_do num_payouts#9
debug: loc: {num_payouts#0=None, sum_payouts#0=None, num_payouts#9=num_payouts#9, sum_payouts#9=sum_payouts#9}
debug: pred: {num_payouts#0=num_payouts#9, sum_payouts#0=sum_payouts#9}
debug: ready: num_payouts#0, sum_payouts#0
debug: to_do: num_payouts#0, sum_payouts#0
debug: * avail sum_payouts#0
debug: * avail sum_payouts#9
debug: * avail num_payouts#0
debug: * avail num_payouts#9
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: ready: 
debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: * to_do rnd_delta#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr using strategy RootOperandGrouping
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing farm_amount#0 with [farm_amount#5, farm_amount#1, farm_amount#2]
debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost using strategy RootOperandGrouping
debug: Coalescing ternary_result%0#0 with [ternary_result%0#5, ternary_result%0#1, ternary_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks using strategy RootOperandGrouping
debug: Coalescing state#0 with [state#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block using strategy RootOperandGrouping
debug: Coalescing state#0 with [state#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout using strategy RootOperandGrouping
debug: Coalescing state#0 with [state#2, state#3]
debug: Coalescing txn_fuel_spent#2 with [txn_fuel_spent#3, txn_fuel_spent#4]
debug: Coalescing resulted in 10 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.noop using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states using strategy RootOperandGrouping
debug: Coalescing k#0 with [k#5, k#1, k#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers using strategy RootOperandGrouping
debug: Coalescing rnd#0 with [rnd#5, rnd#1, rnd#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 with [smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#1, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#2, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#3, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#4, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#5, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#6, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#7, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#8, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#9, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#10, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#11, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#12, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#13, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#14, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#15, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#16, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#17, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#18]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 56 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
info: optimizing clear program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Inserted main.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted optin.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced optin.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted axfer.ops[8]: 'l-store-copy inner_txn_params%0%%param_AssetAmount_idx_0#0 0'
debug: Replaced axfer.ops[10]: 'v-load inner_txn_params%0%%param_AssetAmount_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetAmount_idx_0#0'
debug: Inserted axfer.ops[6]: 'l-store-copy inner_txn_params%0%%param_AssetReceiver_idx_0#0 0'
debug: Replaced axfer.ops[13]: 'v-load inner_txn_params%0%%param_AssetReceiver_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetReceiver_idx_0#0'
debug: Inserted axfer.ops[4]: 'l-store-copy inner_txn_params%0%%param_XferAsset_idx_0#0 0'
debug: Replaced axfer.ops[16]: 'v-load inner_txn_params%0%%param_XferAsset_idx_0#0' with 'l-load inner_txn_params%0%%param_XferAsset_idx_0#0'
debug: Inserted axfer.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
debug: Replaced axfer.ops[21]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
debug: Inserted axfer_closeout.ops[8]: 'l-store-copy inner_txn_params%0%%param_AssetCloseTo_idx_0#0 0'
debug: Replaced axfer_closeout.ops[10]: 'v-load inner_txn_params%0%%param_AssetCloseTo_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetCloseTo_idx_0#0'
debug: Inserted axfer_closeout.ops[6]: 'l-store-copy inner_txn_params%0%%param_AssetReceiver_idx_0#0 0'
debug: Replaced axfer_closeout.ops[15]: 'v-load inner_txn_params%0%%param_AssetReceiver_idx_0#0' with 'l-load inner_txn_params%0%%param_AssetReceiver_idx_0#0'
debug: Inserted axfer_closeout.ops[4]: 'l-store-copy inner_txn_params%0%%param_XferAsset_idx_0#0 0'
debug: Replaced axfer_closeout.ops[18]: 'v-load inner_txn_params%0%%param_XferAsset_idx_0#0' with 'l-load inner_txn_params%0%%param_XferAsset_idx_0#0'
debug: Inserted axfer_closeout.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
debug: Replaced axfer_closeout.ops[23]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
debug: Inserted algo_pay.ops[6]: 'l-store-copy inner_txn_params%0%%param_Amount_idx_0#0 0'
debug: Replaced algo_pay.ops[8]: 'v-load inner_txn_params%0%%param_Amount_idx_0#0' with 'l-load inner_txn_params%0%%param_Amount_idx_0#0'
debug: Inserted algo_pay.ops[4]: 'l-store-copy inner_txn_params%0%%param_Receiver_idx_0#0 0'
debug: Replaced algo_pay.ops[11]: 'v-load inner_txn_params%0%%param_Receiver_idx_0#0' with 'l-load inner_txn_params%0%%param_Receiver_idx_0#0'
debug: Inserted algo_pay.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
debug: Replaced algo_pay.ops[16]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
debug: Inserted max.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced max.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted max.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced max.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted safe_subtract.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced safe_subtract.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[2]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[12]: 'l-store-copy axfer_txn#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[14]: 'v-load axfer_txn#0' with 'l-load axfer_txn#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[21]: 'l-store-copy tmp%1#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[34]: 'l-store-copy tmp%4#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[36]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[41]: 'l-store-copy tmp%5#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[43]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[30]: 'l-store-copy tmp%3#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[33]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[28]: 'l-store-copy tmp%2#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[33]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[15]: 'l-store-copy axfer_txn#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[27]: 'v-load axfer_txn#0' with 'l-load axfer_txn#0'
debug: Inserted smart_contracts.common.validate.axfer.ops[28]: 'l-store-copy axfer_txn#0 0'
debug: Replaced smart_contracts.common.validate.axfer.ops[43]: 'v-load axfer_txn#0' with 'l-load axfer_txn#0'
debug: Inserted axfer_amount_exact.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced axfer_amount_exact.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted axfer_amount_exact.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced axfer_amount_exact.ops[10]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted payment.ops[2]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced payment.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted payment.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced payment.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted payment.ops[12]: 'l-store-copy pay_txn#0 0'
debug: Replaced payment.ops[14]: 'v-load pay_txn#0' with 'l-load pay_txn#0'
debug: Inserted payment.ops[22]: 'l-store-copy tmp%2#0 0'
debug: Replaced payment.ops[24]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted payment.ops[29]: 'l-store-copy tmp%3#0 0'
debug: Replaced payment.ops[31]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted payment.ops[18]: 'l-store-copy tmp%1#0 0'
debug: Replaced payment.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted payment.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced payment.ops[21]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted payment.ops[15]: 'l-store-copy pay_txn#0 0'
debug: Replaced payment.ops[30]: 'v-load pay_txn#0' with 'l-load pay_txn#0'
debug: Inserted payment_amount_exact.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced payment_amount_exact.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted payment_amount_exact.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced payment_amount_exact.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_round_time.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_round_time.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_round_time.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_round_time.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_round_time.ops[18]: 'l-store-copy tmp%2#0 0'
debug: Replaced get_round_time.ops[20]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_round_time.ops[7]: 'l-store-copy first_accessible#0 0'
debug: Replaced get_round_time.ops[16]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
debug: Inserted get_round_time_if_body@1.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced get_round_time_if_body@1.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get_round_time_if_body@1.ops[8]: 'l-store-copy tmp%4#0 0'
debug: Replaced get_round_time_if_body@1.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get_round_time_after_if_else@2.ops[13]: 'l-store-copy ts_delta#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[15]: 'v-load ts_delta#0' with 'l-load ts_delta#0'
debug: Inserted get_round_time_after_if_else@2.ops[9]: 'l-store-copy tmp%6#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[12]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted get_round_time_after_if_else@2.ops[1]: 'l-store-copy last_accessible#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[5]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
debug: Inserted get_round_time_after_if_else@2.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get_round_time_after_if_else@2.ops[3]: 'l-store-copy first_accessible#0 2'
debug: Replaced get_round_time_after_if_else@2.ops[10]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
debug: Inserted get_round_time_after_if_else@2.ops[5]: 'l-store-copy block_delta#0 2'
debug: Replaced get_round_time_after_if_else@2.ops[21]: 'v-load block_delta#0' with 'l-load block_delta#0'
debug: Inserted get_block_rewards.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_block_rewards.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_block_rewards.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_block_rewards.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_block_rewards.ops[14]: 'l-store-copy last_accessible#0 0'
debug: Replaced get_block_rewards.ops[16]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
debug: Inserted get_block_rewards.ops[17]: 'l-store-copy last_accessible#0 0'
debug: Replaced get_block_rewards.ops[21]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
debug: Inserted get_block_rewards.ops[7]: 'l-store-copy first_accessible#0 0'
debug: Replaced get_block_rewards.ops[19]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
debug: Inserted get_block_rewards_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced get_block_rewards_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted get_block_rewards_for_body@2.ops[3]: 'l-store-copy rnd#0 0'
debug: Replaced get_block_rewards_for_body@2.ops[5]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted get_block_rewards_for_body@2.ops[7]: 'l-store-copy tmp%2#0 0'
debug: Replaced get_block_rewards_for_body@2.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_block_rewards_for_body@2.ops[12]: 'l-store-copy tmp%3#0 0'
debug: Replaced get_block_rewards_for_body@2.ops[18]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get_block_rewards_if_body@3.ops[10]: 'l-store-copy sum_payouts#0 0'
debug: Replaced get_block_rewards_if_body@3.ops[12]: 'v-load sum_payouts#0' with 'l-load sum_payouts#0'
debug: Inserted get_block_rewards_if_body@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced get_block_rewards_if_body@3.ops[9]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get_block_rewards_if_body@3.ops[3]: 'l-store-copy num_payouts#0 0'
debug: Replaced get_block_rewards_if_body@3.ops[16]: 'v-load num_payouts#0' with 'l-load num_payouts#0'
debug: Inserted get_block_rewards_after_for@6.ops[3]: 'l-store-copy tmp%5#0 0'
debug: Replaced get_block_rewards_after_for@6.ops[5]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get_block_rewards_ternary_merge@9.ops[1]: 'l-store-copy avg_payout_or_bonus#0 0'
debug: Replaced get_block_rewards_ternary_merge@9.ops[3]: 'v-load avg_payout_or_bonus#0' with 'l-load avg_payout_or_bonus#0'
debug: Inserted __init__.ops[1]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced __init__.ops[4]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted project_apr.ops[4]: 'l-store-copy tuple_assignment%0#0 0'
debug: Replaced project_apr.ops[6]: 'v-load tuple_assignment%0#0' with 'l-load tuple_assignment%0#0'
debug: Inserted project_apr.ops[14]: 'l-store-copy tuple_assignment%2#0 0'
debug: Replaced project_apr.ops[16]: 'v-load tuple_assignment%2#0' with 'l-load tuple_assignment%2#0'
debug: Inserted project_apr.ops[31]: 'l-store-copy tuple_assignment%6#0 0'
debug: Replaced project_apr.ops[33]: 'v-load tuple_assignment%6#0' with 'l-load tuple_assignment%6#0'
debug: Inserted project_apr.ops[23]: 'l-store-copy tuple_assignment%5#0 1'
debug: Replaced project_apr.ops[26]: 'v-load tuple_assignment%5#0' with 'l-load tuple_assignment%5#0'
debug: Inserted project_apr.ops[3]: 'l-store-copy tuple_assignment%1#0 1'
debug: Replaced project_apr.ops[9]: 'v-load tuple_assignment%1#0' with 'l-load tuple_assignment%1#0'
debug: Inserted project_apr.ops[14]: 'l-store-copy tuple_assignment%3#0 1'
debug: Replaced project_apr.ops[20]: 'v-load tuple_assignment%3#0' with 'l-load tuple_assignment%3#0'
debug: Inserted project_apr.ops[33]: 'l-store-copy tuple_assignment%7#0 1'
debug: Replaced project_apr.ops[39]: 'v-load tuple_assignment%7#0' with 'l-load tuple_assignment%7#0'
debug: Inserted project_apr.ops[29]: 'l-store-copy exists1#0 0'
debug: Replaced project_apr.ops[42]: 'v-load exists1#0' with 'l-load exists1#0'
debug: Inserted project_apr_bool_merge@6.ops[18]: 'l-store-copy tmp%0#0 0'
debug: Replaced project_apr_bool_merge@6.ops[20]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted project_apr_bool_merge@6.ops[24]: 'l-store-copy tmp%1#0 0'
debug: Replaced project_apr_bool_merge@6.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted project_apr_bool_merge@6.ops[29]: 'l-store-copy tmp%2#0 0'
debug: Replaced project_apr_bool_merge@6.ops[31]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted project_apr_bool_merge@6.ops[43]: 'l-store-copy tmp%3#0 0'
debug: Replaced project_apr_bool_merge@6.ops[45]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted project_apr_bool_merge@6.ops[52]: 'l-store-copy tmp%4#0 0'
debug: Replaced project_apr_bool_merge@6.ops[54]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted project_apr_bool_merge@6.ops[57]: 'l-store-copy tmp%5#0 0'
debug: Replaced project_apr_bool_merge@6.ops[59]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted project_apr_bool_merge@6.ops[62]: 'l-store-copy tmp%6#0 0'
debug: Replaced project_apr_bool_merge@6.ops[64]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted project_apr_bool_merge@6.ops[73]: 'l-store-copy tmp%8#0 0'
debug: Replaced project_apr_bool_merge@6.ops[75]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted project_apr_bool_merge@6.ops[87]: 'l-store-copy tmp%10#0 0'
debug: Replaced project_apr_bool_merge@6.ops[89]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted project_apr_bool_merge@6.ops[5]: 'l-store-copy check%0#0 1'
debug: Replaced project_apr_bool_merge@6.ops[8]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted project_apr_bool_merge@6.ops[12]: 'l-store-copy check%1#0 1'
debug: Replaced project_apr_bool_merge@6.ops[15]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted project_apr_bool_merge@6.ops[41]: 'l-store-copy rt_fraction.dt#0 0'
debug: Replaced project_apr_bool_merge@6.ops[44]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
debug: Inserted project_apr_bool_merge@6.ops[72]: 'l-store-copy tmp%7#0 0'
debug: Replaced project_apr_bool_merge@6.ops[75]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted project_apr_bool_merge@6.ops[87]: 'l-store-copy tmp%9#0 0'
debug: Replaced project_apr_bool_merge@6.ops[90]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted project_apr_bool_merge@6.ops[96]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced project_apr_bool_merge@6.ops[99]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted project_apr_bool_merge@6.ops[7]: 'l-store-copy value%0#0 1'
debug: Replaced project_apr_bool_merge@6.ops[11]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted project_apr_bool_merge@6.ops[15]: 'l-store-copy value%1#0 1'
debug: Replaced project_apr_bool_merge@6.ops[19]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted project_apr_bool_merge@6.ops[71]: 'l-store-copy global_yearly_blocks_produced#0 0'
debug: Replaced project_apr_bool_merge@6.ops[77]: 'v-load global_yearly_blocks_produced#0' with 'l-load global_yearly_blocks_produced#0'
debug: Inserted project_apr_bool_merge@6.ops[42]: 'l-store-copy rt_fraction.dr#0 1'
debug: Replaced project_apr_bool_merge@6.ops[52]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
debug: Inserted project_apr_bool_merge@6.ops[53]: 'l-store-copy rt_fraction.dr#0 1'
debug: Replaced project_apr_bool_merge@6.ops[62]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
debug: Inserted project_apr_bool_merge@6.ops[48]: 'l-store-copy rt_fraction.dt#0 2'
debug: Replaced project_apr_bool_merge@6.ops[68]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
debug: Inserted project_apr_bool_merge@6.ops[20]: 'l-store-copy balance#0 0'
debug: Replaced project_apr_bool_merge@6.ops[77]: 'v-load balance#0' with 'l-load balance#0'
debug: Inserted project_apr_bool_merge@6.ops[27]: 'l-store-copy total_online_stake#0 1'
debug: Replaced project_apr_bool_merge@6.ops[88]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
debug: Inserted project_apr_if_body@7.ops[6]: 'l-store-copy tmp%12#0 0'
debug: Replaced project_apr_if_body@7.ops[8]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted project_apr_if_body@7.ops[18]: 'l-store-copy tmp%13#0 0'
debug: Replaced project_apr_if_body@7.ops[20]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted project_apr_if_body@7.ops[2]: 'l-store-copy tmp%11#0 0'
debug: Replaced project_apr_if_body@7.ops[5]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted project_apr_if_body@7.ops[11]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced project_apr_if_body@7.ops[14]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted project_apr_if_body@7.ops[13]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced project_apr_if_body@7.ops[17]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted project_apr_after_if_else@8.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced project_apr_after_if_else@8.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted project_apr_ternary_merge@11.ops[5]: 'l-store-copy tmp%15#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[7]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted project_apr_ternary_merge@11.ops[9]: 'l-store-copy tmp%16#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[11]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted project_apr_ternary_merge@11.ops[17]: 'l-store-copy tmp%17#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[19]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted project_apr_ternary_merge@11.ops[53]: 'l-store-copy len_%0#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[55]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[58]: 'l-store-copy no_overflow%0#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[60]: 'v-load no_overflow%0#0' with 'l-load no_overflow%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[71]: 'l-store-copy len_%1#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[73]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted project_apr_ternary_merge@11.ops[76]: 'l-store-copy no_overflow%1#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[78]: 'v-load no_overflow%1#0' with 'l-load no_overflow%1#0'
debug: Inserted project_apr_ternary_merge@11.ops[89]: 'l-store-copy len_%2#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[91]: 'v-load len_%2#0' with 'l-load len_%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[94]: 'l-store-copy no_overflow%2#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[96]: 'v-load no_overflow%2#0' with 'l-load no_overflow%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[108]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[110]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted project_apr_ternary_merge@11.ops[113]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[115]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[118]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[120]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted project_apr_ternary_merge@11.ops[123]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[125]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted project_apr_ternary_merge@11.ops[128]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[130]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted project_apr_ternary_merge@11.ops[133]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[135]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted project_apr_ternary_merge@11.ops[138]: 'l-store-copy encoded_tuple_buffer%7#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[140]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
debug: Inserted project_apr_ternary_merge@11.ops[143]: 'l-store-copy encoded_tuple_buffer%8#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[145]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
debug: Inserted project_apr_ternary_merge@11.ops[148]: 'l-store-copy encoded_tuple_buffer%9#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[150]: 'v-load encoded_tuple_buffer%9#0' with 'l-load encoded_tuple_buffer%9#0'
debug: Inserted project_apr_ternary_merge@11.ops[153]: 'l-store-copy encoded_tuple_buffer%10#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[155]: 'v-load encoded_tuple_buffer%10#0' with 'l-load encoded_tuple_buffer%10#0'
debug: Inserted project_apr_ternary_merge@11.ops[1]: 'l-store-copy farm_amount_algo#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[4]: 'v-load farm_amount_algo#0' with 'l-load farm_amount_algo#0'
debug: Inserted project_apr_ternary_merge@11.ops[26]: 'l-store-copy tmp%19#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[29]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted project_apr_ternary_merge@11.ops[66]: 'l-store-copy b_zeros%0#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[69]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[85]: 'l-store-copy b_zeros%1#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[88]: 'v-load b_zeros%1#0' with 'l-load b_zeros%1#0'
debug: Inserted project_apr_ternary_merge@11.ops[104]: 'l-store-copy b_zeros%2#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[107]: 'v-load b_zeros%2#0' with 'l-load b_zeros%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[23]: 'l-store-copy tmp%18#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[29]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted project_apr_ternary_merge@11.ops[15]: 'l-store-copy rewards#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[22]: 'v-load rewards#0' with 'l-load rewards#0'
debug: Inserted project_apr_ternary_merge@11.ops[27]: 'l-store-copy staked#0 1'
debug: Replaced project_apr_ternary_merge@11.ops[38]: 'v-load staked#0' with 'l-load staked#0'
debug: Inserted project_apr_ternary_merge@11.ops[57]: 'l-store-copy total_online_stake#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[72]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
debug: Inserted project_apr_ternary_merge@11.ops[77]: 'l-store-copy own_yearly_blocks_produced#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[92]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
debug: Inserted project_apr_ternary_merge@11.ops[97]: 'l-store-copy projected_apr_bps#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[112]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
debug: Inserted project_apr_ternary_merge@11.ops[4]: 'l-store-copy current_block_rewards#0 1'
debug: Replaced project_apr_ternary_merge@11.ops[42]: 'v-load current_block_rewards#0' with 'l-load current_block_rewards#0'
debug: Inserted project_apr_ternary_merge@11.ops[116]: 'l-store-copy tmp%22#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[164]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted project_apr_ternary_merge@11.ops[6]: 'l-store-copy farm_amount_algo#0 2'
debug: Replaced project_apr_ternary_merge@11.ops[52]: 'v-load farm_amount_algo#0' with 'l-load farm_amount_algo#0'
debug: Inserted project_apr_ternary_merge@11.ops[97]: 'l-store-copy tmp%21#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[161]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted project_apr_ternary_merge@11.ops[16]: 'l-store-copy own_yearly_blocks_produced#0 3'
debug: Replaced project_apr_ternary_merge@11.ops[79]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
debug: Inserted project_apr_ternary_merge@11.ops[37]: 'l-store-copy projected_apr_bps#0 4'
debug: Replaced project_apr_ternary_merge@11.ops[101]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
debug: Inserted project_apr_ternary_merge@11.ops[79]: 'l-store-copy tmp%20#0 2'
debug: Replaced project_apr_ternary_merge@11.ops[159]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted project_apr_ternary_merge@11.ops[41]: 'l-store-copy val_as_bytes%0#0 5'
debug: Replaced project_apr_ternary_merge@11.ops[125]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[45]: 'l-store-copy val_as_bytes%1#0 5'
debug: Replaced project_apr_ternary_merge@11.ops[131]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted project_apr_ternary_merge@11.ops[49]: 'l-store-copy val_as_bytes%2#0 5'
debug: Replaced project_apr_ternary_merge@11.ops[137]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[53]: 'l-store-copy val_as_bytes%3#0 6'
debug: Replaced project_apr_ternary_merge@11.ops[143]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted project_apr_ternary_merge@11.ops[57]: 'l-store-copy val_as_bytes%4#0 7'
debug: Replaced project_apr_ternary_merge@11.ops[149]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
debug: Inserted project_apr_ternary_merge@11.ops[61]: 'l-store-copy val_as_bytes%5#0 7'
debug: Replaced project_apr_ternary_merge@11.ops[155]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
debug: Inserted project_apr_ternary_merge@11.ops[65]: 'l-store-copy val_as_bytes%6#0 8'
debug: Replaced project_apr_ternary_merge@11.ops[161]: 'v-load val_as_bytes%6#0' with 'l-load val_as_bytes%6#0'
debug: Inserted calculate_algo_cost.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced calculate_algo_cost.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted calculate_algo_cost.ops[6]: 'l-store-copy tmp%2#0 1'
debug: Replaced calculate_algo_cost.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[8]: 'l-store-copy tmp%4#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[20]: 'l-store-copy tmp%5#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[22]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[27]: 'l-store-copy tmp%6#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[29]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[34]: 'l-store-copy tmp%7#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[36]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[43]: 'l-store-copy tmp%8#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[45]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy total_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[50]: 'v-load total_cost#0' with 'l-load total_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[71]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[73]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[76]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[78]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[81]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[83]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[86]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[88]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[91]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[93]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[96]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[98]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[4]: 'l-store-copy tmp%3#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[13]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[18]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[41]: 'l-store-copy platform_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[49]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[34]: 'l-store-copy txn_fee_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[45]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[51]: 'l-store-copy platform_cost#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[64]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[27]: 'l-store-copy ix_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[45]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[58]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[76]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[62]: 'l-store-copy val_as_bytes%1#0 2'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[82]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[66]: 'l-store-copy val_as_bytes%2#0 3'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[88]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[46]: 'l-store-copy ix_cost#0 2'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[72]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[71]: 'l-store-copy val_as_bytes%3#0 4'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[95]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[75]: 'l-store-copy val_as_bytes%4#0 4'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[101]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy txn_fee_cost#0 3'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[78]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[80]: 'l-store-copy val_as_bytes%5#0 5'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[108]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[20]: 'l-store-copy box_mbr#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[67]: 'v-load box_mbr#0' with 'l-load box_mbr#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[1]: 'l-store-copy optin_mbr#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[64]: 'v-load optin_mbr#0' with 'l-load optin_mbr#0'
debug: Inserted get_algo_cost.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_algo_cost.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_algo_cost_and_max_duration.ops[4]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[6]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[38]: 'l-store-copy to_encode%0#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[40]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted get_algo_cost_and_max_duration.ops[46]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[48]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted get_algo_cost_and_max_duration.ops[51]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[53]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted get_algo_cost_and_max_duration.ops[56]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[58]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted get_algo_cost_and_max_duration.ops[61]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[63]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted get_algo_cost_and_max_duration.ops[66]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[68]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted get_algo_cost_and_max_duration.ops[71]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[73]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted get_algo_cost_and_max_duration.ops[76]: 'l-store-copy encoded_tuple_buffer%7#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[78]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
debug: Inserted get_algo_cost_and_max_duration.ops[7]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[12]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[13]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[18]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[19]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[24]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[25]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[30]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[31]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[36]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[47]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[80]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted get_algo_cost_and_max_duration.ops[40]: 'l-store-copy tmp%5#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[76]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get_algo_cost_and_max_duration.ops[35]: 'l-store-copy tmp%4#0 1'
debug: Replaced get_algo_cost_and_max_duration.ops[72]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get_algo_cost_and_max_duration.ops[29]: 'l-store-copy tmp%3#0 1'
debug: Replaced get_algo_cost_and_max_duration.ops[68]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get_algo_cost_and_max_duration.ops[23]: 'l-store-copy tmp%2#0 1'
debug: Replaced get_algo_cost_and_max_duration.ops[64]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_algo_cost_and_max_duration.ops[17]: 'l-store-copy tmp%1#0 1'
debug: Replaced get_algo_cost_and_max_duration.ops[60]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_algo_cost_and_max_duration.ops[11]: 'l-store-copy tmp%0#0 1'
debug: Replaced get_algo_cost_and_max_duration.ops[56]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_max_duration.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_max_duration.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_max_duration.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_max_duration.ops[30]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_max_duration.ops[33]: 'l-store-copy tmp%2#0 0'
debug: Replaced get_max_duration.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_max_duration.ops[38]: 'l-store-copy tmp%3#0 0'
debug: Replaced get_max_duration.ops[40]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get_max_duration.ops[46]: 'l-store-copy tmp%4#0 0'
debug: Replaced get_max_duration.ops[48]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get_max_duration.ops[51]: 'l-store-copy max_duration#0 0'
debug: Replaced get_max_duration.ops[53]: 'v-load max_duration#0' with 'l-load max_duration#0'
debug: Inserted get_max_duration.ops[54]: 'l-store-copy reinterpret_bytes%0#0 0'
debug: Replaced get_max_duration.ops[56]: 'v-load reinterpret_bytes%0#0' with 'l-load reinterpret_bytes%0#0'
debug: Inserted get_max_duration.ops[62]: 'l-store-copy tmp%6#0 0'
debug: Replaced get_max_duration.ops[64]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted get_max_duration.ops[2]: 'l-store-copy check%0#0 1'
debug: Replaced get_max_duration.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted get_max_duration.ops[9]: 'l-store-copy check%1#0 1'
debug: Replaced get_max_duration.ops[12]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted get_max_duration.ops[44]: 'l-store-copy blocks_produced#0 0'
debug: Replaced get_max_duration.ops[47]: 'v-load blocks_produced#0' with 'l-load blocks_produced#0'
debug: Inserted get_max_duration.ops[61]: 'l-store-copy tmp%5#0 0'
debug: Replaced get_max_duration.ops[64]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get_max_duration.ops[4]: 'l-store-copy value%0#0 1'
debug: Replaced get_max_duration.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted get_max_duration.ops[12]: 'l-store-copy value%1#0 1'
debug: Replaced get_max_duration.ops[16]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted get_max_duration.ops[27]: 'l-store-copy rt_fraction.dr#0 1'
debug: Replaced get_max_duration.ops[36]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
debug: Inserted get_max_duration.ops[29]: 'l-store-copy rt_fraction.dt#0 1'
debug: Replaced get_max_duration.ops[42]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
debug: Inserted get_max_duration.ops[18]: 'l-store-copy ds_balance#0 0'
debug: Replaced get_max_duration.ops[51]: 'v-load ds_balance#0' with 'l-load ds_balance#0'
debug: Inserted get_max_duration.ops[25]: 'l-store-copy total_online_stake#0 1'
debug: Replaced get_max_duration.ops[58]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
debug: Inserted validate_duration.ops[2]: 'l-store-copy allowed_duration#0 0'
debug: Replaced validate_duration.ops[4]: 'v-load allowed_duration#0' with 'l-load allowed_duration#0'
debug: Inserted validate_duration.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced validate_duration.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted validate_duration_if_body@1.ops[2]: 'l-store-copy tmp%1#0 0'
debug: Replaced validate_duration_if_body@1.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted create_farm.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced create_farm.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted create_farm.ops[14]: 'l-store-copy tmp%2#0 0'
debug: Replaced create_farm.ops[16]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted create_farm.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced create_farm.ops[22]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted create_farm.ops[25]: 'l-store-copy tmp%4#0 0'
debug: Replaced create_farm.ops[27]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted create_farm.ops[31]: 'l-store-copy tmp%5#0 0'
debug: Replaced create_farm.ops[33]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted create_farm.ops[41]: 'l-store-copy tmp%7#0 0'
debug: Replaced create_farm.ops[43]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted create_farm.ops[47]: 'l-store-copy tmp%8#0 0'
debug: Replaced create_farm.ops[49]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted create_farm.ops[56]: 'l-store-copy tmp%10#0 0'
debug: Replaced create_farm.ops[58]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted create_farm.ops[77]: 'l-store-copy tuple_assignment%0#0 0'
debug: Replaced create_farm.ops[79]: 'v-load tuple_assignment%0#0' with 'l-load tuple_assignment%0#0'
debug: Inserted create_farm.ops[80]: 'l-store-copy recipient_asa_id#0 0'
debug: Replaced create_farm.ops[82]: 'v-load recipient_asa_id#0' with 'l-load recipient_asa_id#0'
debug: Inserted create_farm.ops[85]: 'l-store-copy tmp%13#0 0'
debug: Replaced create_farm.ops[87]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted create_farm.ops[92]: 'l-store-copy tmp%14#0 0'
debug: Replaced create_farm.ops[94]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted create_farm.ops[96]: 'l-store-copy tmp%15#0 0'
debug: Replaced create_farm.ops[98]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted create_farm.ops[101]: 'l-store-copy tmp%16#0 0'
debug: Replaced create_farm.ops[103]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted create_farm.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced create_farm.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted create_farm.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced create_farm.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted create_farm.ops[53]: 'l-store-copy tmp%9#0 0'
debug: Replaced create_farm.ops[56]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted create_farm.ops[109]: 'l-store-copy tmp%18#0 1'
debug: Replaced create_farm.ops[112]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted create_farm.ops[68]: 'l-store-copy tmp%12#0 0'
debug: Replaced create_farm.ops[72]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted create_farm.ops[64]: 'l-store-copy tmp%11#0 0'
debug: Replaced create_farm.ops[71]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted create_farm.ops[38]: 'l-store-copy tmp%6#0 0'
debug: Replaced create_farm.ops[56]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted create_farm_after_if_else@2.ops[10]: 'l-store-copy tmp%19#0 0'
debug: Replaced create_farm_after_if_else@2.ops[12]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted create_farm_after_if_else@2.ops[15]: 'l-store-copy to_encode%0#0 0'
debug: Replaced create_farm_after_if_else@2.ops[17]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted create_farm_after_if_else@2.ops[23]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced create_farm_after_if_else@2.ops[25]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted create_farm_after_if_else@2.ops[28]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced create_farm_after_if_else@2.ops[30]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted create_farm_after_if_else@2.ops[33]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced create_farm_after_if_else@2.ops[35]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted create_farm_after_if_else@2.ops[45]: 'l-store-copy tmp%21#0 0'
debug: Replaced create_farm_after_if_else@2.ops[47]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted create_farm_after_if_else@2.ops[58]: 'l-store-copy tmp%22#0 0'
debug: Replaced create_farm_after_if_else@2.ops[60]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted create_farm_after_if_else@2.ops[41]: 'l-store-copy tmp%20#0 0'
debug: Replaced create_farm_after_if_else@2.ops[44]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted create_farm_after_if_else@2.ops[54]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced create_farm_after_if_else@2.ops[57]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted create_farm_after_if_else@2.ops[65]: 'l-store-copy tmp%23#0 0'
debug: Replaced create_farm_after_if_else@2.ops[68]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted create_farm_after_if_else@2.ops[70]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced create_farm_after_if_else@2.ops[73]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted create_farm_after_if_else@2.ops[78]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced create_farm_after_if_else@2.ops[81]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted create_farm_after_if_else@2.ops[86]: 'l-store-copy new_state_value%1#0 0'
debug: Replaced create_farm_after_if_else@2.ops[89]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
debug: Inserted create_farm_after_if_else@2.ops[80]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced create_farm_after_if_else@2.ops[84]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted create_farm_after_if_else@2.ops[38]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced create_farm_after_if_else@2.ops[50]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted create_farm_after_if_else@2.ops[57]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced create_farm_after_if_else@2.ops[69]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted create_farm_after_if_else@2.ops[19]: 'l-store-copy val_as_bytes%3#0 0'
debug: Replaced create_farm_after_if_else@2.ops[37]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted create_farm_after_if_else@2.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced create_farm_after_if_else@2.ops[23]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted create_farm_after_if_else@2.ops[6]: 'l-store-copy val_as_bytes%1#0 1'
debug: Replaced create_farm_after_if_else@2.ops[29]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted create_farm_after_if_else@2.ops[10]: 'l-store-copy val_as_bytes%2#0 2'
debug: Replaced create_farm_after_if_else@2.ops[35]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted extend_duration_blocks.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced extend_duration_blocks.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted extend_duration_blocks.ops[21]: 'l-store-copy tmp%3#0 0'
debug: Replaced extend_duration_blocks.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted extend_duration_blocks.ops[30]: 'l-store-copy copy%0#0 0'
debug: Replaced extend_duration_blocks.ops[32]: 'v-load copy%0#0' with 'l-load copy%0#0'
debug: Inserted extend_duration_blocks.ops[33]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks.ops[35]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks.ops[39]: 'l-store-copy tmp%4#0 0'
debug: Replaced extend_duration_blocks.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted extend_duration_blocks.ops[45]: 'l-store-copy tmp%5#0 0'
debug: Replaced extend_duration_blocks.ops[47]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted extend_duration_blocks.ops[55]: 'l-store-copy tmp%7#0 0'
debug: Replaced extend_duration_blocks.ops[57]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted extend_duration_blocks.ops[61]: 'l-store-copy tmp%8#0 0'
debug: Replaced extend_duration_blocks.ops[63]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted extend_duration_blocks.ops[70]: 'l-store-copy tmp%10#0 0'
debug: Replaced extend_duration_blocks.ops[72]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted extend_duration_blocks.ops[80]: 'l-store-copy tmp%12#0 0'
debug: Replaced extend_duration_blocks.ops[82]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted extend_duration_blocks.ops[84]: 'l-store-copy tmp%13#0 0'
debug: Replaced extend_duration_blocks.ops[86]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted extend_duration_blocks.ops[98]: 'l-store-copy tmp%15#0 0'
debug: Replaced extend_duration_blocks.ops[100]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted extend_duration_blocks.ops[102]: 'l-store-copy tmp%16#0 0'
debug: Replaced extend_duration_blocks.ops[104]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted extend_duration_blocks.ops[115]: 'l-store-copy tmp%18#0 0'
debug: Replaced extend_duration_blocks.ops[117]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted extend_duration_blocks.ops[119]: 'l-store-copy tmp%19#0 0'
debug: Replaced extend_duration_blocks.ops[121]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted extend_duration_blocks.ops[124]: 'l-store-copy to_encode%0#0 0'
debug: Replaced extend_duration_blocks.ops[126]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted extend_duration_blocks.ops[128]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced extend_duration_blocks.ops[130]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted extend_duration_blocks.ops[136]: 'l-store-copy updated_data%0#0 0'
debug: Replaced extend_duration_blocks.ops[138]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted extend_duration_blocks.ops[139]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks.ops[141]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks.ops[149]: 'l-store-copy tmp%21#0 0'
debug: Replaced extend_duration_blocks.ops[151]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted extend_duration_blocks.ops[162]: 'l-store-copy tmp%22#0 0'
debug: Replaced extend_duration_blocks.ops[164]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted extend_duration_blocks.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced extend_duration_blocks.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted extend_duration_blocks.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced extend_duration_blocks.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted extend_duration_blocks.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced extend_duration_blocks.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted extend_duration_blocks.ops[28]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced extend_duration_blocks.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted extend_duration_blocks.ops[69]: 'l-store-copy tmp%9#0 0'
debug: Replaced extend_duration_blocks.ops[72]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted extend_duration_blocks.ops[112]: 'l-store-copy tmp%17#0 0'
debug: Replaced extend_duration_blocks.ops[115]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted extend_duration_blocks.ops[151]: 'l-store-copy tmp%20#0 0'
debug: Replaced extend_duration_blocks.ops[154]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted extend_duration_blocks.ops[164]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced extend_duration_blocks.ops[167]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted extend_duration_blocks.ops[175]: 'l-store-copy tmp%23#0 0'
debug: Replaced extend_duration_blocks.ops[178]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted extend_duration_blocks.ops[180]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced extend_duration_blocks.ops[183]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted extend_duration_blocks.ops[188]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced extend_duration_blocks.ops[191]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted extend_duration_blocks.ops[196]: 'l-store-copy new_state_value%1#0 0'
debug: Replaced extend_duration_blocks.ops[199]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
debug: Inserted extend_duration_blocks.ops[30]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced extend_duration_blocks.ops[34]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted extend_duration_blocks.ops[95]: 'l-store-copy tmp%14#0 0'
debug: Replaced extend_duration_blocks.ops[99]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted extend_duration_blocks.ops[139]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced extend_duration_blocks.ops[143]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted extend_duration_blocks.ops[193]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced extend_duration_blocks.ops[197]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted extend_duration_blocks.ops[48]: 'l-store-copy farm_asset#0 0'
debug: Replaced extend_duration_blocks.ops[58]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
debug: Inserted extend_duration_blocks.ops[152]: 'l-store-copy copy%1#0 0'
debug: Replaced extend_duration_blocks.ops[164]: 'v-load copy%1#0' with 'l-load copy%1#0'
debug: Inserted extend_duration_blocks.ops[171]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced extend_duration_blocks.ops[183]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted extend_duration_blocks.ops[82]: 'l-store-copy tmp%11#0 0'
debug: Replaced extend_duration_blocks.ops[99]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted extend_duration_blocks.ops[56]: 'l-store-copy tmp%6#0 1'
debug: Replaced extend_duration_blocks.ops[74]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted extend_duration_blocks.ops[105]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks.ops[123]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks.ops[86]: 'l-store-copy state#0 1'
debug: Replaced extend_duration_blocks.ops[105]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks.ops[125]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks.ops[147]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks.ops[60]: 'l-store-copy farm_asset#0 2'
debug: Replaced extend_duration_blocks.ops[103]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
debug: Inserted extend_duration_blocks.ops[41]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks.ops[87]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced extend_amount_per_block.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted extend_amount_per_block.ops[21]: 'l-store-copy tmp%3#0 0'
debug: Replaced extend_amount_per_block.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted extend_amount_per_block.ops[30]: 'l-store-copy copy%0#0 0'
debug: Replaced extend_amount_per_block.ops[32]: 'v-load copy%0#0' with 'l-load copy%0#0'
debug: Inserted extend_amount_per_block.ops[33]: 'l-store-copy state#0 0'
debug: Replaced extend_amount_per_block.ops[35]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block.ops[39]: 'l-store-copy tmp%4#0 0'
debug: Replaced extend_amount_per_block.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted extend_amount_per_block.ops[45]: 'l-store-copy tmp%5#0 0'
debug: Replaced extend_amount_per_block.ops[47]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted extend_amount_per_block.ops[55]: 'l-store-copy tmp%7#0 0'
debug: Replaced extend_amount_per_block.ops[57]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted extend_amount_per_block.ops[72]: 'l-store-copy tmp%10#0 0'
debug: Replaced extend_amount_per_block.ops[74]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted extend_amount_per_block.ops[76]: 'l-store-copy tmp%11#0 0'
debug: Replaced extend_amount_per_block.ops[78]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted extend_amount_per_block.ops[81]: 'l-store-copy to_encode%0#0 0'
debug: Replaced extend_amount_per_block.ops[83]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted extend_amount_per_block.ops[85]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced extend_amount_per_block.ops[87]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted extend_amount_per_block.ops[93]: 'l-store-copy updated_data%0#0 0'
debug: Replaced extend_amount_per_block.ops[95]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted extend_amount_per_block.ops[96]: 'l-store-copy state#0 0'
debug: Replaced extend_amount_per_block.ops[98]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block.ops[106]: 'l-store-copy tmp%13#0 0'
debug: Replaced extend_amount_per_block.ops[108]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted extend_amount_per_block.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced extend_amount_per_block.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted extend_amount_per_block.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced extend_amount_per_block.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted extend_amount_per_block.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced extend_amount_per_block.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted extend_amount_per_block.ops[28]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced extend_amount_per_block.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted extend_amount_per_block.ops[63]: 'l-store-copy tmp%8#0 0'
debug: Replaced extend_amount_per_block.ops[66]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted extend_amount_per_block.ops[107]: 'l-store-copy tmp%12#0 0'
debug: Replaced extend_amount_per_block.ops[110]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted extend_amount_per_block.ops[30]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced extend_amount_per_block.ops[34]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted extend_amount_per_block.ops[69]: 'l-store-copy tmp%9#0 0'
debug: Replaced extend_amount_per_block.ops[73]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted extend_amount_per_block.ops[95]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced extend_amount_per_block.ops[99]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted extend_amount_per_block.ops[107]: 'l-store-copy copy%1#0 0'
debug: Replaced extend_amount_per_block.ops[119]: 'v-load copy%1#0' with 'l-load copy%1#0'
debug: Inserted extend_amount_per_block.ops[55]: 'l-store-copy tmp%6#0 0'
debug: Replaced extend_amount_per_block.ops[72]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted extend_amount_per_block.ops[41]: 'l-store-copy state#0 0'
debug: Replaced extend_amount_per_block.ops[58]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block.ops[59]: 'l-store-copy state#0 1'
debug: Replaced extend_amount_per_block.ops[78]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block.ops[79]: 'l-store-copy state#0 0'
debug: Replaced extend_amount_per_block.ops[101]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block.ops[49]: 'l-store-copy farm_asset#0 1'
debug: Replaced extend_amount_per_block.ops[76]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
debug: Inserted payout.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced payout.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted payout.ops[21]: 'l-store-copy tmp%3#0 0'
debug: Replaced payout.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted payout.ops[30]: 'l-store-copy copy%0#0 0'
debug: Replaced payout.ops[32]: 'v-load copy%0#0' with 'l-load copy%0#0'
debug: Inserted payout.ops[33]: 'l-store-copy state#0 0'
debug: Replaced payout.ops[35]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout.ops[39]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced payout.ops[41]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted payout.ops[44]: 'l-store-copy tmp%4#0 0'
debug: Replaced payout.ops[46]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted payout.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced payout.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted payout.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced payout.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted payout.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced payout.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted payout.ops[28]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced payout.ops[31]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted payout.ops[30]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced payout.ops[34]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted payout_if_body@1.ops[6]: 'l-store-copy tmp%6#0 0'
debug: Replaced payout_if_body@1.ops[8]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted payout_if_body@1.ops[2]: 'l-store-copy tmp%5#0 0'
debug: Replaced payout_if_body@1.ops[5]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted payout_after_if_else@2.ops[11]: 'l-store-copy tmp%8#0 0'
debug: Replaced payout_after_if_else@2.ops[13]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted payout_after_if_else@2.ops[28]: 'l-store-copy tmp%10#0 0'
debug: Replaced payout_after_if_else@2.ops[30]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted payout_after_if_else@2.ops[36]: 'l-store-copy tmp%11#0 0'
debug: Replaced payout_after_if_else@2.ops[38]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted payout_after_if_else@2.ops[7]: 'l-store-copy tmp%7#0 0'
debug: Replaced payout_after_if_else@2.ops[10]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted payout_after_if_else@2.ops[22]: 'l-store-copy check%0#0 1'
debug: Replaced payout_after_if_else@2.ops[25]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted payout_after_if_else@2.ops[4]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced payout_after_if_else@2.ops[10]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted payout_after_if_else@2.ops[25]: 'l-store-copy value%0#0 1'
debug: Replaced payout_after_if_else@2.ops[30]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted payout_after_if_else@2.ops[20]: 'l-store-copy tmp%9#0 0'
debug: Replaced payout_after_if_else@2.ops[30]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted payout_if_body@3.ops[4]: 'l-store-copy inner_txn_params%0%%param_ApplicationID_idx_0#0 0'
debug: Replaced payout_if_body@3.ops[6]: 'v-load inner_txn_params%0%%param_ApplicationID_idx_0#0' with 'l-load inner_txn_params%0%%param_ApplicationID_idx_0#0'
debug: Inserted payout_if_body@3.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
debug: Replaced payout_if_body@3.ops[13]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
debug: Inserted payout_after_if_else@5.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced payout_after_if_else@5.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted payout_after_if_else@5.ops[25]: 'l-store-copy tmp%15#0 0'
debug: Replaced payout_after_if_else@5.ops[27]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted payout_after_if_else@5.ops[67]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced payout_after_if_else@5.ops[69]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted payout_after_if_else@5.ops[75]: 'l-store-copy updated_data%0#0 0'
debug: Replaced payout_after_if_else@5.ops[77]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted payout_after_if_else@5.ops[78]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[80]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[84]: 'l-store-copy tmp%25#0 0'
debug: Replaced payout_after_if_else@5.ops[86]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted payout_after_if_else@5.ops[88]: 'l-store-copy tmp%26#0 0'
debug: Replaced payout_after_if_else@5.ops[90]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted payout_after_if_else@5.ops[93]: 'l-store-copy to_encode%0#0 0'
debug: Replaced payout_after_if_else@5.ops[95]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted payout_after_if_else@5.ops[97]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced payout_after_if_else@5.ops[99]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted payout_after_if_else@5.ops[105]: 'l-store-copy updated_data%1#0 0'
debug: Replaced payout_after_if_else@5.ops[107]: 'v-load updated_data%1#0' with 'l-load updated_data%1#0'
debug: Inserted payout_after_if_else@5.ops[108]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[110]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[114]: 'l-store-copy reinterpret_biguint%3#0 0'
debug: Replaced payout_after_if_else@5.ops[116]: 'v-load reinterpret_biguint%3#0' with 'l-load reinterpret_biguint%3#0'
debug: Inserted payout_after_if_else@5.ops[119]: 'l-store-copy tmp%27#0 0'
debug: Replaced payout_after_if_else@5.ops[121]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted payout_after_if_else@5.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced payout_after_if_else@5.ops[4]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted payout_after_if_else@5.ops[18]: 'l-store-copy check%1#0 1'
debug: Replaced payout_after_if_else@5.ops[21]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted payout_after_if_else@5.ops[40]: 'l-store-copy tmp%18#0 0'
debug: Replaced payout_after_if_else@5.ops[43]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted payout_after_if_else@5.ops[57]: 'l-store-copy tmp%22#0 0'
debug: Replaced payout_after_if_else@5.ops[60]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted payout_after_if_else@5.ops[64]: 'l-store-copy tmp%24#0 0'
debug: Replaced payout_after_if_else@5.ops[67]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted payout_after_if_else@5.ops[51]: 'l-store-copy tmp%21#0 0'
debug: Replaced payout_after_if_else@5.ops[55]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted payout_after_if_else@5.ops[63]: 'l-store-copy tmp%23#0 0'
debug: Replaced payout_after_if_else@5.ops[68]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted payout_after_if_else@5.ops[77]: 'l-store-copy assigned_value%0#0 0'
debug: Replaced payout_after_if_else@5.ops[81]: 'v-load assigned_value%0#0' with 'l-load assigned_value%0#0'
debug: Inserted payout_after_if_else@5.ops[108]: 'l-store-copy assigned_value%1#0 0'
debug: Replaced payout_after_if_else@5.ops[112]: 'v-load assigned_value%1#0' with 'l-load assigned_value%1#0'
debug: Inserted payout_after_if_else@5.ops[33]: 'l-store-copy tmp%17#0 0'
debug: Replaced payout_after_if_else@5.ops[38]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted payout_after_if_else@5.ops[50]: 'l-store-copy tmp%20#0 0'
debug: Replaced payout_after_if_else@5.ops[56]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted payout_after_if_else@5.ops[31]: 'l-store-copy tmp%16#0 0'
debug: Replaced payout_after_if_else@5.ops[38]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted payout_after_if_else@5.ops[49]: 'l-store-copy tmp%19#0 0'
debug: Replaced payout_after_if_else@5.ops[57]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted payout_after_if_else@5.ops[47]: 'l-store-copy txn_fuel_spent#2 0'
debug: Replaced payout_after_if_else@5.ops[65]: 'v-load txn_fuel_spent#2' with 'l-load txn_fuel_spent#2'
debug: Inserted payout_after_if_else@5.ops[8]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[24]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[21]: 'l-store-copy value%1#0 2'
debug: Replaced payout_after_if_else@5.ops[39]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted payout_after_if_else@5.ops[16]: 'l-store-copy tmp%14#0 1'
debug: Replaced payout_after_if_else@5.ops[39]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted payout_after_if_else@5.ops[97]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[119]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[6]: 'l-store-copy txn_fuel_spent#2 0'
debug: Replaced payout_after_if_else@5.ops[48]: 'v-load txn_fuel_spent#2' with 'l-load txn_fuel_spent#2'
debug: Inserted payout_after_if_else@5.ops[28]: 'l-store-copy state#0 3'
debug: Replaced payout_after_if_else@5.ops[89]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_if_body@6.ops[6]: 'l-store-copy tmp%29#0 0'
debug: Replaced payout_if_body@6.ops[8]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted payout_if_body@6.ops[2]: 'l-store-copy tmp%28#0 0'
debug: Replaced payout_if_body@6.ops[5]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted payout_else_body@7.ops[8]: 'l-store-copy tmp%31#0 0'
debug: Replaced payout_else_body@7.ops[10]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted payout_else_body@7.ops[4]: 'l-store-copy tmp%30#0 0'
debug: Replaced payout_else_body@7.ops[7]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted payout_else_body@7.ops[1]: 'l-store-copy copy%1#0 0'
debug: Replaced payout_else_body@7.ops[13]: 'v-load copy%1#0' with 'l-load copy%1#0'
debug: Inserted payout_after_if_else@8.ops[3]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced payout_after_if_else@8.ops[6]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted payout_after_if_else@8.ops[11]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced payout_after_if_else@8.ops[14]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted payout_after_if_else@8.ops[19]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced payout_after_if_else@8.ops[22]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted payout_after_if_else@8.ops[27]: 'l-store-copy new_state_value%1#0 0'
debug: Replaced payout_after_if_else@8.ops[30]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
debug: Inserted payout_after_if_else@8.ops[5]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced payout_after_if_else@8.ops[9]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted payout_after_if_else@8.ops[22]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced payout_after_if_else@8.ops[26]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted withdraw_fees.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced withdraw_fees.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted withdraw_fees.ops[26]: 'l-store-copy locked_balance#0 0'
debug: Replaced withdraw_fees.ops[28]: 'v-load locked_balance#0' with 'l-load locked_balance#0'
debug: Inserted withdraw_fees.ops[33]: 'l-store-copy tmp%4#0 0'
debug: Replaced withdraw_fees.ops[35]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted withdraw_fees.ops[44]: 'l-store-copy tmp%5#0 0'
debug: Replaced withdraw_fees.ops[46]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted withdraw_fees.ops[50]: 'l-store-copy tmp%6#0 0'
debug: Replaced withdraw_fees.ops[52]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted withdraw_fees.ops[6]: 'l-store-copy check%0#0 1'
debug: Replaced withdraw_fees.ops[9]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted withdraw_fees.ops[14]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced withdraw_fees.ops[17]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted withdraw_fees.ops[20]: 'l-store-copy tmp%1#0 0'
debug: Replaced withdraw_fees.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted withdraw_fees.ops[25]: 'l-store-copy tmp%2#0 0'
debug: Replaced withdraw_fees.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted withdraw_fees.ops[41]: 'l-store-copy check%1#0 1'
debug: Replaced withdraw_fees.ops[44]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted withdraw_fees.ops[43]: 'l-store-copy value%1#0 1'
debug: Replaced withdraw_fees.ops[48]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted withdraw_fees.ops[16]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced withdraw_fees.ops[23]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted withdraw_fees.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced withdraw_fees.ops[49]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted withdraw_fees.ops[8]: 'l-store-copy value%0#0 1'
debug: Replaced withdraw_fees.ops[29]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted optout.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced optout.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted optout.ops[13]: 'l-store-copy tmp%3#0 0'
debug: Replaced optout.ops[15]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted optout.ops[25]: 'l-store-copy tmp%4#0 0'
debug: Replaced optout.ops[27]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted optout.ops[7]: 'l-store-copy tmp%2#0 1'
debug: Replaced optout.ops[10]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted optout.ops[19]: 'l-store-copy check%0#0 1'
debug: Replaced optout.ops[22]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted optout.ops[35]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced optout.ops[38]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted optout.ops[21]: 'l-store-copy value%0#0 1'
debug: Replaced optout.ops[25]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted optout.ops[38]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced optout.ops[43]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted get_state.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_state.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_state.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_state.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_state.ops[11]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_state.ops[14]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_state.ops[13]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_state.ops[17]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted log_states_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced log_states_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted log_states_for_body@2.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced log_states_for_body@2.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted log_states_for_body@2.ops[15]: 'l-store-copy box_name#0 0'
debug: Replaced log_states_for_body@2.ops[17]: 'v-load box_name#0' with 'l-load box_name#0'
debug: Inserted log_states_for_body@2.ops[23]: 'l-store-copy tmp%3#0 0'
debug: Replaced log_states_for_body@2.ops[25]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted log_states_for_body@2.ops[6]: 'l-store-copy item_offset%0#0 0'
debug: Replaced log_states_for_body@2.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted log_states_for_body@2.ops[20]: 'l-store-copy tmp%2#0 0'
debug: Replaced log_states_for_body@2.ops[23]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted log_states_for_body@2.ops[29]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced log_states_for_body@2.ops[32]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted log_states_for_body@2.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced log_states_for_body@2.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted log_states_if_body@3.ops[6]: 'l-store-copy tmp%5#0 0'
debug: Replaced log_states_if_body@3.ops[8]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted log_states_if_body@3.ops[2]: 'l-store-copy tmp%4#0 0'
debug: Replaced log_states_if_body@3.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted log_states_if_body@3.ops[11]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced log_states_if_body@3.ops[14]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted log_states_if_body@3.ops[13]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced log_states_if_body@3.ops[17]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted log_block_proposers_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced log_block_proposers_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted log_block_proposers_for_body@2.ops[2]: 'l-store-copy tmp%1#0 0'
debug: Replaced log_block_proposers_for_body@2.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted ensure_manager_caller.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced ensure_manager_caller.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted ensure_manager_caller.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced ensure_manager_caller.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted ensure_manager_caller.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced ensure_manager_caller.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted ensure_manager_caller.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced ensure_manager_caller.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_spend_per_block.ops[7]: 'l-store-copy tmp%2#0 0'
debug: Replaced get_spend_per_block.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_spend_per_block.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_spend_per_block.ops[6]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_spend_per_block.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_spend_per_block.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_ix_rewards_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_ix_rewards_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_ix_rewards_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_ix_rewards_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_ix_rewards_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_ix_rewards_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted get_platform_fee_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_platform_fee_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_platform_fee_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_platform_fee_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_platform_fee_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_platform_fee_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_platform_fee_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_platform_fee_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted get_txn_fee_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_txn_fee_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_txn_fee_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_txn_fee_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_txn_fee_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_txn_fee_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced approval_program_abi_routing@2.ops[18]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted approval_program_project_apr_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted approval_program_project_apr_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted approval_program_project_apr_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted approval_program_project_apr_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted approval_program_project_apr_route@3.ops[21]: 'l-store-copy tmp%7#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[23]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted approval_program_project_apr_route@3.ops[25]: 'l-store-copy tmp%8#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[27]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted approval_program_project_apr_route@3.ops[29]: 'l-store-copy tmp%9#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[31]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted approval_program_project_apr_route@3.ops[37]: 'l-store-copy tmp%11#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[39]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted approval_program_project_apr_route@3.ops[42]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[44]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_project_apr_route@3.ops[33]: 'l-store-copy tmp%10#0 0'
debug: Replaced approval_program_project_apr_route@3.ops[36]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[6]: 'l-store-copy tmp%13#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[8]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[11]: 'l-store-copy tmp%14#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[13]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[16]: 'l-store-copy tmp%15#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[18]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[21]: 'l-store-copy tmp%16#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[23]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[25]: 'l-store-copy tmp%17#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[27]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[31]: 'l-store-copy tmp%19#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[33]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[35]: 'l-store-copy tmp%20#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[37]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[41]: 'l-store-copy tmp%22#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[43]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[54]: 'l-store-copy tmp%25#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[56]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[59]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[61]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[50]: 'l-store-copy tmp%24#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[53]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[45]: 'l-store-copy tmp%23#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[49]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[39]: 'l-store-copy tmp%21#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[49]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted approval_program_get_algo_cost_route@4.ops[29]: 'l-store-copy tmp%18#0 0'
debug: Replaced approval_program_get_algo_cost_route@4.ops[49]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[1]: 'l-store-copy tmp%26#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[3]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[6]: 'l-store-copy tmp%27#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[8]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[11]: 'l-store-copy tmp%28#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[13]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[16]: 'l-store-copy tmp%29#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[18]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[21]: 'l-store-copy tmp%30#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[23]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[25]: 'l-store-copy tmp%31#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[27]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[31]: 'l-store-copy tmp%33#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[33]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[35]: 'l-store-copy tmp%34#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[37]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[41]: 'l-store-copy tmp%36#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[43]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[54]: 'l-store-copy tmp%39#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[56]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[59]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[61]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[50]: 'l-store-copy tmp%38#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[53]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[45]: 'l-store-copy tmp%37#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[49]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[39]: 'l-store-copy tmp%35#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[49]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted approval_program_get_algo_cost_and_max_duration_route@5.ops[29]: 'l-store-copy tmp%32#0 0'
debug: Replaced approval_program_get_algo_cost_and_max_duration_route@5.ops[49]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted approval_program_create_farm_route@6.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted approval_program_create_farm_route@6.ops[6]: 'l-store-copy tmp%41#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[8]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted approval_program_create_farm_route@6.ops[11]: 'l-store-copy tmp%42#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[13]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted approval_program_create_farm_route@6.ops[16]: 'l-store-copy tmp%43#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[18]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted approval_program_create_farm_route@6.ops[21]: 'l-store-copy tmp%44#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[23]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted approval_program_create_farm_route@6.ops[25]: 'l-store-copy tmp%45#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[27]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted approval_program_create_farm_route@6.ops[31]: 'l-store-copy tmp%47#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[33]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted approval_program_create_farm_route@6.ops[35]: 'l-store-copy tmp%48#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[37]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted approval_program_create_farm_route@6.ops[41]: 'l-store-copy tmp%50#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[43]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted approval_program_create_farm_route@6.ops[47]: 'l-store-copy tmp%52#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[49]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted approval_program_create_farm_route@6.ops[58]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[60]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_create_farm_route@6.ops[51]: 'l-store-copy tmp%53#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted approval_program_create_farm_route@6.ops[45]: 'l-store-copy tmp%51#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted approval_program_create_farm_route@6.ops[39]: 'l-store-copy tmp%49#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted approval_program_create_farm_route@6.ops[29]: 'l-store-copy tmp%46#0 0'
debug: Replaced approval_program_create_farm_route@6.ops[56]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[1]: 'l-store-copy tmp%54#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[3]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[6]: 'l-store-copy tmp%55#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[8]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[11]: 'l-store-copy tmp%56#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[13]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[16]: 'l-store-copy tmp%57#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[18]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[21]: 'l-store-copy tmp%58#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[23]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[25]: 'l-store-copy tmp%59#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[27]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[31]: 'l-store-copy tmp%61#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[33]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[40]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[42]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[35]: 'l-store-copy tmp%62#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[38]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted approval_program_extend_duration_blocks_route@7.ops[29]: 'l-store-copy tmp%60#0 0'
debug: Replaced approval_program_extend_duration_blocks_route@7.ops[38]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[1]: 'l-store-copy tmp%63#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[3]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[6]: 'l-store-copy tmp%64#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[8]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[11]: 'l-store-copy tmp%65#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[13]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[16]: 'l-store-copy tmp%66#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[18]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[21]: 'l-store-copy tmp%67#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[23]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[25]: 'l-store-copy tmp%68#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[27]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[31]: 'l-store-copy tmp%70#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[33]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[40]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[42]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[35]: 'l-store-copy tmp%71#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[38]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted approval_program_extend_amount_per_block_route@8.ops[29]: 'l-store-copy tmp%69#0 0'
debug: Replaced approval_program_extend_amount_per_block_route@8.ops[38]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted approval_program_payout_route@9.ops[1]: 'l-store-copy tmp%72#0 0'
debug: Replaced approval_program_payout_route@9.ops[3]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted approval_program_payout_route@9.ops[6]: 'l-store-copy tmp%73#0 0'
debug: Replaced approval_program_payout_route@9.ops[8]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted approval_program_payout_route@9.ops[11]: 'l-store-copy tmp%74#0 0'
debug: Replaced approval_program_payout_route@9.ops[13]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted approval_program_payout_route@9.ops[16]: 'l-store-copy tmp%75#0 0'
debug: Replaced approval_program_payout_route@9.ops[18]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted approval_program_payout_route@9.ops[21]: 'l-store-copy tmp%76#0 0'
debug: Replaced approval_program_payout_route@9.ops[23]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted approval_program_payout_route@9.ops[25]: 'l-store-copy tmp%77#0 0'
debug: Replaced approval_program_payout_route@9.ops[27]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted approval_program_payout_route@9.ops[31]: 'l-store-copy tmp%79#0 0'
debug: Replaced approval_program_payout_route@9.ops[33]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted approval_program_payout_route@9.ops[43]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_payout_route@9.ops[45]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_payout_route@9.ops[37]: 'l-store-copy tmp%81#0 0'
debug: Replaced approval_program_payout_route@9.ops[41]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted approval_program_payout_route@9.ops[35]: 'l-store-copy tmp%80#0 0'
debug: Replaced approval_program_payout_route@9.ops[41]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted approval_program_payout_route@9.ops[29]: 'l-store-copy tmp%78#0 0'
debug: Replaced approval_program_payout_route@9.ops[41]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted approval_program_noop_route@10.ops[1]: 'l-store-copy tmp%82#0 0'
debug: Replaced approval_program_noop_route@10.ops[3]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted approval_program_noop_route@10.ops[6]: 'l-store-copy tmp%83#0 0'
debug: Replaced approval_program_noop_route@10.ops[8]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted approval_program_noop_route@10.ops[11]: 'l-store-copy tmp%84#0 0'
debug: Replaced approval_program_noop_route@10.ops[13]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted approval_program_noop_route@10.ops[16]: 'l-store-copy tmp%85#0 0'
debug: Replaced approval_program_noop_route@10.ops[18]: 'v-load tmp%85#0' with 'l-load tmp%85#0'
debug: Inserted approval_program_noop_route@10.ops[22]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_noop_route@10.ops[24]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_withdraw_fees_route@11.ops[1]: 'l-store-copy tmp%86#0 0'
debug: Replaced approval_program_withdraw_fees_route@11.ops[3]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted approval_program_withdraw_fees_route@11.ops[6]: 'l-store-copy tmp%87#0 0'
debug: Replaced approval_program_withdraw_fees_route@11.ops[8]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted approval_program_withdraw_fees_route@11.ops[11]: 'l-store-copy tmp%88#0 0'
debug: Replaced approval_program_withdraw_fees_route@11.ops[13]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted approval_program_withdraw_fees_route@11.ops[16]: 'l-store-copy tmp%89#0 0'
debug: Replaced approval_program_withdraw_fees_route@11.ops[18]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted approval_program_withdraw_fees_route@11.ops[21]: 'l-store-copy tmp%90#0 0'
debug: Replaced approval_program_withdraw_fees_route@11.ops[23]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted approval_program_withdraw_fees_route@11.ops[25]: 'l-store-copy tmp%91#0 0'
debug: Replaced approval_program_withdraw_fees_route@11.ops[27]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted approval_program_withdraw_fees_route@11.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_withdraw_fees_route@11.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_optout_route@12.ops[1]: 'l-store-copy tmp%92#0 0'
debug: Replaced approval_program_optout_route@12.ops[3]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted approval_program_optout_route@12.ops[6]: 'l-store-copy tmp%93#0 0'
debug: Replaced approval_program_optout_route@12.ops[8]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
debug: Inserted approval_program_optout_route@12.ops[11]: 'l-store-copy tmp%94#0 0'
debug: Replaced approval_program_optout_route@12.ops[13]: 'v-load tmp%94#0' with 'l-load tmp%94#0'
debug: Inserted approval_program_optout_route@12.ops[16]: 'l-store-copy tmp%95#0 0'
debug: Replaced approval_program_optout_route@12.ops[18]: 'v-load tmp%95#0' with 'l-load tmp%95#0'
debug: Inserted approval_program_optout_route@12.ops[21]: 'l-store-copy tmp%96#0 0'
debug: Replaced approval_program_optout_route@12.ops[23]: 'v-load tmp%96#0' with 'l-load tmp%96#0'
debug: Inserted approval_program_optout_route@12.ops[25]: 'l-store-copy tmp%97#0 0'
debug: Replaced approval_program_optout_route@12.ops[27]: 'v-load tmp%97#0' with 'l-load tmp%97#0'
debug: Inserted approval_program_optout_route@12.ops[29]: 'l-store-copy tmp%98#0 0'
debug: Replaced approval_program_optout_route@12.ops[31]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
debug: Inserted approval_program_optout_route@12.ops[34]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_optout_route@12.ops[36]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_update_max_duration_days_route@13.ops[1]: 'l-store-copy tmp%99#0 0'
debug: Replaced approval_program_update_max_duration_days_route@13.ops[3]: 'v-load tmp%99#0' with 'l-load tmp%99#0'
debug: Inserted approval_program_update_max_duration_days_route@13.ops[6]: 'l-store-copy tmp%100#0 0'
debug: Replaced approval_program_update_max_duration_days_route@13.ops[8]: 'v-load tmp%100#0' with 'l-load tmp%100#0'
debug: Inserted approval_program_update_max_duration_days_route@13.ops[11]: 'l-store-copy tmp%101#0 0'
debug: Replaced approval_program_update_max_duration_days_route@13.ops[13]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
debug: Inserted approval_program_update_max_duration_days_route@13.ops[16]: 'l-store-copy tmp%102#0 0'
debug: Replaced approval_program_update_max_duration_days_route@13.ops[18]: 'v-load tmp%102#0' with 'l-load tmp%102#0'
debug: Inserted approval_program_update_max_duration_days_route@13.ops[21]: 'l-store-copy tmp%103#0 0'
debug: Replaced approval_program_update_max_duration_days_route@13.ops[23]: 'v-load tmp%103#0' with 'l-load tmp%103#0'
debug: Inserted approval_program_update_max_duration_days_route@13.ops[25]: 'l-store-copy tmp%104#0 0'
debug: Replaced approval_program_update_max_duration_days_route@13.ops[27]: 'v-load tmp%104#0' with 'l-load tmp%104#0'
debug: Inserted approval_program_update_max_duration_days_route@13.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_update_max_duration_days_route@13.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[1]: 'l-store-copy tmp%105#0 0'
debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[3]: 'v-load tmp%105#0' with 'l-load tmp%105#0'
debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[6]: 'l-store-copy tmp%106#0 0'
debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[8]: 'v-load tmp%106#0' with 'l-load tmp%106#0'
debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[11]: 'l-store-copy tmp%107#0 0'
debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[13]: 'v-load tmp%107#0' with 'l-load tmp%107#0'
debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[16]: 'l-store-copy tmp%108#0 0'
debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[18]: 'v-load tmp%108#0' with 'l-load tmp%108#0'
debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[21]: 'l-store-copy tmp%109#0 0'
debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[23]: 'v-load tmp%109#0' with 'l-load tmp%109#0'
debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[25]: 'l-store-copy tmp%110#0 0'
debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[27]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted approval_program_update_min_duration_blocks_route@14.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_update_min_duration_blocks_route@14.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_get_state_route@15.ops[1]: 'l-store-copy tmp%111#0 0'
debug: Replaced approval_program_get_state_route@15.ops[3]: 'v-load tmp%111#0' with 'l-load tmp%111#0'
debug: Inserted approval_program_get_state_route@15.ops[6]: 'l-store-copy tmp%112#0 0'
debug: Replaced approval_program_get_state_route@15.ops[8]: 'v-load tmp%112#0' with 'l-load tmp%112#0'
debug: Inserted approval_program_get_state_route@15.ops[11]: 'l-store-copy tmp%113#0 0'
debug: Replaced approval_program_get_state_route@15.ops[13]: 'v-load tmp%113#0' with 'l-load tmp%113#0'
debug: Inserted approval_program_get_state_route@15.ops[16]: 'l-store-copy tmp%114#0 0'
debug: Replaced approval_program_get_state_route@15.ops[18]: 'v-load tmp%114#0' with 'l-load tmp%114#0'
debug: Inserted approval_program_get_state_route@15.ops[21]: 'l-store-copy tmp%115#0 0'
debug: Replaced approval_program_get_state_route@15.ops[23]: 'v-load tmp%115#0' with 'l-load tmp%115#0'
debug: Inserted approval_program_get_state_route@15.ops[25]: 'l-store-copy tmp%116#0 0'
debug: Replaced approval_program_get_state_route@15.ops[27]: 'v-load tmp%116#0' with 'l-load tmp%116#0'
debug: Inserted approval_program_get_state_route@15.ops[29]: 'l-store-copy tmp%117#0 0'
debug: Replaced approval_program_get_state_route@15.ops[31]: 'v-load tmp%117#0' with 'l-load tmp%117#0'
debug: Inserted approval_program_get_state_route@15.ops[37]: 'l-store-copy tmp%119#0 0'
debug: Replaced approval_program_get_state_route@15.ops[39]: 'v-load tmp%119#0' with 'l-load tmp%119#0'
debug: Inserted approval_program_get_state_route@15.ops[42]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_get_state_route@15.ops[44]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_get_state_route@15.ops[33]: 'l-store-copy tmp%118#0 0'
debug: Replaced approval_program_get_state_route@15.ops[36]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
debug: Inserted approval_program_log_states_route@16.ops[1]: 'l-store-copy tmp%120#0 0'
debug: Replaced approval_program_log_states_route@16.ops[3]: 'v-load tmp%120#0' with 'l-load tmp%120#0'
debug: Inserted approval_program_log_states_route@16.ops[6]: 'l-store-copy tmp%121#0 0'
debug: Replaced approval_program_log_states_route@16.ops[8]: 'v-load tmp%121#0' with 'l-load tmp%121#0'
debug: Inserted approval_program_log_states_route@16.ops[11]: 'l-store-copy tmp%122#0 0'
debug: Replaced approval_program_log_states_route@16.ops[13]: 'v-load tmp%122#0' with 'l-load tmp%122#0'
debug: Inserted approval_program_log_states_route@16.ops[16]: 'l-store-copy tmp%123#0 0'
debug: Replaced approval_program_log_states_route@16.ops[18]: 'v-load tmp%123#0' with 'l-load tmp%123#0'
debug: Inserted approval_program_log_states_route@16.ops[21]: 'l-store-copy tmp%124#0 0'
debug: Replaced approval_program_log_states_route@16.ops[23]: 'v-load tmp%124#0' with 'l-load tmp%124#0'
debug: Inserted approval_program_log_states_route@16.ops[26]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_log_states_route@16.ops[28]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[1]: 'l-store-copy tmp%125#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[3]: 'v-load tmp%125#0' with 'l-load tmp%125#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[6]: 'l-store-copy tmp%126#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[8]: 'v-load tmp%126#0' with 'l-load tmp%126#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[11]: 'l-store-copy tmp%127#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[13]: 'v-load tmp%127#0' with 'l-load tmp%127#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[16]: 'l-store-copy tmp%128#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[18]: 'v-load tmp%128#0' with 'l-load tmp%128#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[21]: 'l-store-copy tmp%129#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[23]: 'v-load tmp%129#0' with 'l-load tmp%129#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[27]: 'l-store-copy tmp%131#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[29]: 'v-load tmp%131#0' with 'l-load tmp%131#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[36]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[38]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[31]: 'l-store-copy tmp%132#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[34]: 'v-load tmp%132#0' with 'l-load tmp%132#0'
debug: Inserted approval_program_log_block_proposers_route@17.ops[25]: 'l-store-copy tmp%130#0 0'
debug: Replaced approval_program_log_block_proposers_route@17.ops[34]: 'v-load tmp%130#0' with 'l-load tmp%130#0'
debug: Inserted approval_program_bare_routing@20.ops[1]: 'l-store-copy tmp%133#0 0'
debug: Replaced approval_program_bare_routing@20.ops[6]: 'v-load tmp%133#0' with 'l-load tmp%133#0'
debug: Inserted approval_program_update@21.ops[1]: 'l-store-copy tmp%134#0 0'
debug: Replaced approval_program_update@21.ops[3]: 'v-load tmp%134#0' with 'l-load tmp%134#0'
debug: Inserted approval_program_update@21.ops[6]: 'l-store-copy tmp%135#0 0'
debug: Replaced approval_program_update@21.ops[8]: 'v-load tmp%135#0' with 'l-load tmp%135#0'
debug: Inserted approval_program_update@21.ops[12]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_update@21.ops[14]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_delete@22.ops[1]: 'l-store-copy tmp%136#0 0'
debug: Replaced approval_program_delete@22.ops[3]: 'v-load tmp%136#0' with 'l-load tmp%136#0'
debug: Inserted approval_program_delete@22.ops[6]: 'l-store-copy tmp%137#0 0'
debug: Replaced approval_program_delete@22.ops[8]: 'v-load tmp%137#0' with 'l-load tmp%137#0'
debug: Inserted approval_program_delete@22.ops[12]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_delete@22.ops[14]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program___algopy_default_create@23.ops[1]: 'l-store-copy tmp%138#0 0'
debug: Replaced approval_program___algopy_default_create@23.ops[3]: 'v-load tmp%138#0' with 'l-load tmp%138#0'
debug: Inserted approval_program___algopy_default_create@23.ops[6]: 'l-store-copy tmp%139#0 0'
debug: Replaced approval_program___algopy_default_create@23.ops[8]: 'v-load tmp%139#0' with 'l-load tmp%139#0'
debug: Inserted approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25.ops[1]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25.ops[3]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted approval_program_after_if_else@28.ops[1]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_if_else@28.ops[3]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Found 1 edge set/s for smart_contracts.common.send.axfer
debug: Found 1 edge set/s for smart_contracts.common.send.axfer_closeout
debug: Found 1 edge set/s for smart_contracts.common.send.algo_pay
debug: Found 2 edge set/s for smart_contracts.common.math.safe_subtract
debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
debug: shared x-stack for safe_subtract_ternary_true@1 -> safe_subtract_ternary_merge@3: ternary_result%0#0
debug: shared x-stack for safe_subtract_ternary_false@2 -> safe_subtract_ternary_merge@3: ternary_result%0#0
debug: Found 1 edge set/s for smart_contracts.common.custom.ensure
debug: Found 1 edge set/s for smart_contracts.common.round_time.get_round_time
debug: Found 6 edge set/s for smart_contracts.common.round_time.get_block_rewards
debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
debug: shared x-stack for get_block_rewards_ternary_true@7 -> get_block_rewards_ternary_merge@9: ternary_result%0#0
debug: shared x-stack for get_block_rewards_ternary_false@8 -> get_block_rewards_ternary_merge@9: ternary_result%0#0
debug: Found 5 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Allocated 2 variable/s to x-stack: and_result%0#0, ternary_result%0#0
debug: shared x-stack for project_apr_bool_true@4 -> project_apr_bool_merge@6: and_result%0#0
debug: shared x-stack for project_apr_bool_false@5 -> project_apr_bool_merge@6: and_result%0#0
debug: shared x-stack for project_apr_ternary_true@9 -> project_apr_ternary_merge@11: ternary_result%0#0
debug: shared x-stack for project_apr_ternary_false@10 -> project_apr_ternary_merge@11: ternary_result%0#0
debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
debug: shared x-stack for calculate_algo_cost_ternary_true@1 -> calculate_algo_cost_ternary_merge@3: ternary_result%0#0
debug: shared x-stack for calculate_algo_cost_ternary_false@2 -> calculate_algo_cost_ternary_merge@3: ternary_result%0#0
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Found 5 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Found 5 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Found 3 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for approval_program_project_apr_route@3 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_get_algo_cost_route@4 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_get_algo_cost_and_max_duration_route@5 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_create_farm_route@6 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_extend_duration_blocks_route@7 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_extend_amount_per_block_route@8 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_payout_route@9 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_noop_route@10 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_withdraw_fees_route@11 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_optout_route@12 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_update_max_duration_days_route@13 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_update_min_duration_blocks_route@14 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_get_state_route@15 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_log_states_route@16 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_log_block_proposers_route@17 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_update@21 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_delete@22 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: shared x-stack for approval_program_after_if_else@28 -> approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29: tmp%0#0
debug: smart_contracts.common.round_time.get_round_time f-stack entry: []
debug: smart_contracts.common.round_time.get_round_time f-stack on first store: ['first_accessible#0', 'last_accessible#0']
debug: smart_contracts.common.round_time.get_block_rewards f-stack entry: ['num_payouts#9', 'rnd#0', 'sum_payouts#9']
debug: smart_contracts.common.round_time.get_block_rewards f-stack on first store: ['last_accessible#0', 'delta#0', 'bonus#0', 'num_payouts#0', 'sum_payouts#0', 'rnd_delta#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack entry: ['own_yearly_blocks_produced#0', 'total_online_stake#0', 'avg_round_time#0', 'balance#0', 'current_avg_block_payout#0', 'current_block_rewards#0', 'farm_amount#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack on first store: ['tm2_app_id#0', 'exists2#0', 'tm2_lp_addr#0', 'exists3#0', 'staked#0', 'exists4#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack entry: []
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack on first store: ['allowed_duration#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack entry: ['txn_fuel_spent#2']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack on first store: ['state#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack entry: ['box_name#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack on first store: ['tmp%0#0', 'k#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack entry: []
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack on first store: ['tmp%0#0', 'rnd#0']
debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init() -> uint64:
debug: removing explicit jump to fall-through block main_call___init__@1
debug: removing explicit jump to fall-through block main_after_if_else@2
smart_contracts/common/send.py:4 debug: optimizing TEAL subroutine smart_contracts.common.send.optin(asset: uint64, fee: uint64) -> void:
smart_contracts/common/send.py:18 debug: optimizing TEAL subroutine smart_contracts.common.send.axfer(asset: uint64, receiver: bytes, amount: uint64, fee: uint64) -> void:
debug: removing explicit jump to fall-through block axfer_next_txn@1
smart_contracts/common/send.py:26 debug: optimizing TEAL subroutine smart_contracts.common.send.axfer_closeout(asset: uint64, receiver: bytes, fee: uint64) -> void:
debug: removing explicit jump to fall-through block axfer_closeout_next_txn@1
smart_contracts/common/send.py:38 debug: optimizing TEAL subroutine smart_contracts.common.send.algo_pay(receiver: bytes, amount: uint64, fee: uint64) -> void:
debug: removing explicit jump to fall-through block algo_pay_next_txn@1
smart_contracts/common/math.py:7 debug: optimizing TEAL subroutine smart_contracts.common.math.max(a: uint64, b: uint64) -> uint64:
smart_contracts/common/math.py:12 debug: optimizing TEAL subroutine smart_contracts.common.math.safe_subtract(a: uint64, b: uint64, default: uint64) -> uint64:
debug: removing explicit jump to fall-through block safe_subtract_ternary_true@1
debug: removing explicit jump to fall-through block safe_subtract_ternary_merge@3
smart_contracts/common/custom.py:9 debug: optimizing TEAL subroutine smart_contracts.common.custom.ensure(cond: uint64, msg: bytes) -> void:
debug: removing explicit jump to fall-through block ensure_if_body@1
smart_contracts/common/validate.py:15 debug: optimizing TEAL subroutine smart_contracts.common.validate.axfer(axfer_txn_idx: uint64, expected_asset: uint64) -> uint64:
smart_contracts/common/validate.py:26 debug: optimizing TEAL subroutine smart_contracts.common.validate.axfer_amount_exact(axfer_txn_id: uint64, expected_asset: uint64, expected_amount: uint64) -> void:
smart_contracts/common/validate.py:35 debug: optimizing TEAL subroutine smart_contracts.common.validate.payment(txn_idx: uint64) -> uint64:
smart_contracts/common/validate.py:50 debug: optimizing TEAL subroutine smart_contracts.common.validate.payment_amount_exact(payment_txn_idx: uint64, expected_amount: uint64) -> void:
smart_contracts/common/round_time.py:22 debug: optimizing TEAL subroutine smart_contracts.common.round_time.get_round_time(min_round_sample: uint64) -> uint64, uint64:
debug: removing explicit jump to fall-through block get_round_time_if_body@1
debug: removing explicit jump to fall-through block get_round_time_after_if_else@2
smart_contracts/common/round_time.py:38 debug: optimizing TEAL subroutine smart_contracts.common.round_time.get_block_rewards() -> uint64:
debug: removing explicit jump to fall-through block get_block_rewards_for_header@1
debug: removing explicit jump to fall-through block get_block_rewards_for_body@2
debug: removing explicit jump to fall-through block get_block_rewards_if_body@3
debug: removing explicit jump to fall-through block get_block_rewards_after_if_else@4
debug: removing explicit jump to fall-through block get_block_rewards_for_footer@5
debug: removing explicit jump to fall-through block get_block_rewards_ternary_true@7
debug: removing explicit jump to fall-through block get_block_rewards_ternary_merge@9
smart_contracts/dualstakefarm/contract.py:32 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset(tm2_app_id: uint64, tm2_lp_addr: bytes, farm_amount: uint64) -> uint64:
smart_contracts/dualstakefarm/contract.py:104 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__() -> void:
smart_contracts/dualstakefarm/contract.py:117 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update() -> void:
smart_contracts/dualstakefarm/contract.py:121 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete() -> void:
smart_contracts/dualstakefarm/contract.py:125 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr(recipient_app_id: uint64) -> bytes:
debug: removing explicit jump to fall-through block project_apr_and_contd@1
debug: removing explicit jump to fall-through block project_apr_and_contd@2
debug: removing explicit jump to fall-through block project_apr_and_contd@3
debug: removing explicit jump to fall-through block project_apr_bool_true@4
debug: removing explicit jump to fall-through block project_apr_bool_merge@6
debug: removing explicit jump to fall-through block project_apr_if_body@7
debug: removing explicit jump to fall-through block project_apr_after_if_else@8
debug: removing explicit jump to fall-through block project_apr_ternary_true@9
debug: removing explicit jump to fall-through block project_apr_ternary_merge@11
smart_contracts/dualstakefarm/contract.py:184 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost(recipient_app: uint64, farm_asset: uint64, duration_blocks: uint64) -> bytes:
debug: removing explicit jump to fall-through block calculate_algo_cost_ternary_true@1
debug: removing explicit jump to fall-through block calculate_algo_cost_ternary_merge@3
smart_contracts/dualstakefarm/contract.py:211 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost(recipient_app: uint64, farm_asset: uint64, duration_blocks: uint64) -> bytes:
smart_contracts/dualstakefarm/contract.py:217 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration(recipient_app: uint64, farm_asset: uint64, duration_blocks: uint64) -> bytes:
smart_contracts/dualstakefarm/contract.py:232 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration(recipient_app: uint64) -> uint64:
smart_contracts/dualstakefarm/contract.py:256 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration(recipient_app: uint64, duration_blocks: uint64) -> void:
debug: removing explicit jump to fall-through block validate_duration_if_body@1
smart_contracts/dualstakefarm/contract.py:266 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm(recipient_app: uint64, farm_asset: uint64, amount_per_block: uint64, duration_blocks: uint64) -> void:
debug: removing explicit jump to fall-through block create_farm_if_body@1
debug: removing explicit jump to fall-through block create_farm_after_if_else@2
smart_contracts/dualstakefarm/contract.py:320 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks(recipient_app: uint64, duration_blocks: uint64) -> void:
smart_contracts/dualstakefarm/contract.py:361 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block(recipient_app: uint64, amount_per_block: uint64) -> void:
smart_contracts/dualstakefarm/contract.py:385 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout(recipient_app: uint64, block_round: uint64, call_swap: bytes) -> void:
debug: removing explicit jump to fall-through block payout_if_body@1
debug: removing explicit jump to fall-through block payout_if_body@3
debug: removing explicit jump to fall-through block payout_next_txn@4
debug: removing explicit jump to fall-through block payout_after_if_else@5
debug: removing explicit jump to fall-through block payout_if_body@6
debug: removing explicit jump to fall-through block payout_after_if_else@8
smart_contracts/dualstakefarm/contract.py:455 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop() -> void:
smart_contracts/dualstakefarm/contract.py:459 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees(amount: uint64) -> void:
smart_contracts/dualstakefarm/contract.py:475 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout(asset: uint64) -> void:
smart_contracts/dualstakefarm/contract.py:486 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days(max_duration: uint64) -> void:
smart_contracts/dualstakefarm/contract.py:491 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks(min_duration: uint64) -> void:
smart_contracts/dualstakefarm/contract.py:496 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state(recipient_app: uint64) -> bytes:
smart_contracts/dualstakefarm/contract.py:500 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states(box_names: bytes) -> void:
debug: removing explicit jump to fall-through block log_states_for_header@1
debug: removing explicit jump to fall-through block log_states_for_body@2
debug: removing explicit jump to fall-through block log_states_if_body@3
debug: removing explicit jump to fall-through block log_states_after_if_else@5
debug: removing explicit jump to fall-through block log_states_for_footer@6
smart_contracts/dualstakefarm/contract.py:509 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers(start_round: uint64, end_round: uint64) -> void:
debug: removing explicit jump to fall-through block log_block_proposers_for_header@1
debug: removing explicit jump to fall-through block log_block_proposers_for_body@2
debug: removing explicit jump to fall-through block log_block_proposers_for_footer@3
smart_contracts/dualstakefarm/contract.py:514 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller() -> void:
smart_contracts/dualstakefarm/contract.py:526 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block() -> uint64:
smart_contracts/dualstakefarm/contract.py:530 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block() -> uint64:
smart_contracts/dualstakefarm/contract.py:534 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block() -> uint64:
smart_contracts/dualstakefarm/contract.py:538 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block() -> uint64:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block approval_program_block@1
debug: removing explicit jump to fall-through block approval_program_abi_routing@2
debug: removing explicit jump to fall-through block approval_program_switch_case_default@18
debug: removing explicit jump to fall-through block approval_program_switch_case_next@19
debug: removing explicit jump to fall-through block approval_program_after_if_else@28
debug: removing explicit jump to fall-through block approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@29
debug: removing explicit jump to fall-through block approval_program_switch_case_default@26
debug: removing explicit jump to fall-through block approval_program_switch_case_next@27
debug: removing explicit jump to fall-through block approval_program_block@24
debug: removing explicit jump to fall-through block approval_program_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create@25
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
info: Writing smart_contracts/dualstakefarm/DualstakeFarm.arc32.json
info: Writing smart_contracts/dualstakefarm/DualstakeFarm.approval.teal
info: Writing smart_contracts/dualstakefarm/DualstakeFarm.clear.teal
info: Writing smart_contracts/dualstakefarm/DualstakeFarm.approval.puya.map
info: Writing smart_contracts/dualstakefarm/DualstakeFarm.clear.puya.map

