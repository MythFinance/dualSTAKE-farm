{
  "version": 3,
  "sources": [
    "../../common/custom.py",
    "../../common/math.py",
    "../../common/round_time.py",
    "../../common/send.py",
    "../../common/validate.py",
    "../../dualstakefarm/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AKmGQ;;AAAe;;AAAf;AAEA;AAAgB;AAAhB;AACA;AAA+B;AAA/B;AAEA;;AAAyB;;AAAzB;AACA;;AAA2B;AAA3B;AAEA;;AAAa;;AAAb;AACA;;AAAmB;;AAAnB;AACA;;AAAkB;;AAAlB;AAhBR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAicK;;AAAA;AAAA;AAAA;;AAAA;AAjcL;;;AAAA;AAAA;;;AAAA;AAicK;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAxbL;;;AAwbK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AApbL;;;AAAA;AAAA;;AAobK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA/aL;;;AAAA;AA+aK;;;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AA1aL;;;AAAA;AA0aK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA/ZL;;;AAAA;AAAA;;AA+ZK;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AA/YL;;;AAAA;AA+YK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAtEA;;AAAA;AAAA;AAAA;;AAAA;AArUL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAqUK;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AA7SL;;;AAAA;AAAA;;AAAA;;;AAAA;AA6SK;;;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AApQL;;;AAAA;AAAA;;AAAA;;;AAAA;AAoQK;;;AAAA;;AApDA;;AAAA;AAAA;AAAA;;AAAA;AAhNL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AAgNK;;;AAAA;;AAjDA;;AAAA;AAAA;AAAA;;AAAA;AA/JL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA+JK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAzJL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAyJK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAvGA;;AAAA;AAAA;AAAA;;AAAA;AAlDL;;;AAAA;AAAA;;AAAA;;;AAAA;AAkDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlDL;;AAAA;;;;;;;;;;;;;;AAAA;;;AAsBK;;AAAA;AAAA;;;AAAA;;AAJA;;AAAA;AAAA;;;AAAA;;;;;;;;AF9FL;;;AAEI;;;;;;;;;;;;;AAAA;;;;;;;;AAAA;AAGA;AAeJ;;;AAEI;;;;;;;;;AAAA;;;;;;;AAAA;AACA;ACfJ;;;AATgB;;AAAA;;AAAA;;AAAA;AAAA;AACE;;AAAA;;AAAA;;AAAA;AJPX;;;AIOmD;;;;;;;;;;;;;;AJNlD;AACA;AIOA;;AAAA;;AAA4B;;AAA5B;AJTD;;;AIUC;;;;;;;;;;;;;;;AJTA;AACA;AIUG;;AAAA;;AAQH;;AAAA;AJpBD;;;AIoByD;;;;;;;;;;;;;;;AJnBxD;AACA;;AIqCR;;;AAbc;;AAAA;;AAAA;AAAA;AAAA;AAEN;;AAAA;;AAAoB;;AAApB;AJ5BD;;;AI6BC;;;;;;;;;;;;;AJ5BA;AACA;AI6BG;;AAAA;;AAUO;;AAAA;AJzCX;;;AIyCwD;;;;;;;;;;;;;AJxCvD;AACA;;AESR;;;;;AAE0C;;AAA8B;AAA9B;;AAAgB;;;ADVtC;AAAT;;;AAAA;;ACU+C;;;ADV/C;;;ACWW;;AAAkB;AAAlB;AAAlB;;AACG;;AAAmB;AAAnB;AAAP;;;AAEY;;AAAA;;AAAA;AAAA;;AAAA;AFjBL;;;AEkBK;;;;;;;;;;;;;;AFjBJ;AACA;AEkBJ;;AAAA;AAAA;;AAAA;AAAA;;AAAc;AACH;AAAA;;AAA0C;;AAAA;;AAA1C;AAGX;;AAAA;;AAAA;;;;;;;;AG6EJ;;;AAEQ;;;;AAER;;;AAEQ;;;;AAER;;;AAIwB;;AAAA;AAAQ;;AAAA;AAAR;AA/FN;AAAA;;AAAA;AAAoB;;AAApB;AAAP;;AAAA;AAAA;AA+FgC;;AAAA;AAAF;AAAjB;AAAT;AAAP;AAER;;;AAOwB;;AAAA;;AAAoC;;;;;;;;;;;;AAApC;AACF;;AAAA;;AAAoC;;;;;;;;;;;;;;;;;;AAApC;AAAA;;AAAA;AACA;;AAAA;;AAAoC;;;;;;;;;;;;;;;;;;AAApC;AAAA;;AAAA;AACA;;;AAAA;;AAAA;;;AAAA;;AAAA;;;;AL7Hf;;;AK6HgD;;;;;;;;;;;;AL5H/C;AACA;AK6HR;;AAAA;;;AACuB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAL;AAAmD;AAAnD;AAGV;;AAAA;AADe;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAL;AAAmD;AAAnD;;;;;;;;AAGlB;;;;;;AAM8B;;AAA0C;;;;;;;;;;;;AAA1C;AAAA;AACC;;AAAyC;;;;;;;AAAzC;AAAA;AAEL;;AAA0C;;AAA1C;AAAA;;AACA;;AAA0C;;;;;;;;AAA1C;AAAA;;AAAA;AACJ;;;AAAA;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;;;ALhJf;;;AKgJ4D;;;;;;;;;;;;AL/I3D;AACA;AKgJc;AAAd;;AACG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAX;;;AAC0B;;AAAA;AAAA;AAAA;;;AAAA;AAAd;;AAGA;;AAAA;;;AAC6B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAD7B;;AAAA;AAAA;;AAAA;;;;;AAQA;;AAAA;;;AAC6B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAD7B;;AAAA;AAAA;;AAAA;;;AAQM;;AAAA;;AAAA;AAAA;;AAAA;AACmB;AAAR;AAEsB;;AAAkB;AAAlB;AAAnB;;AAGgB;;;AAA1B;;;AACG;;AAAA;;AAAA;AAAjB;;AAAiB;AAEb;;;;;AAAA;;AAAA;AAAA;;AAAA;AAD4B;AAK5B;;AAAA;AAAA;AAAA;;AAAA;AADJ;;AACI;AAGW;;AAAA;AAAf;AAAA;;AAAe;AACA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAf;AAAA;;AAAe;AAEA;;AAAA;AAAf;AAAA;;AAAe;AACA;;AAAA;AAAf;;AAAe;AAES;;AAAA;AAAxB;AAAA;;AAAwB;AACA;;AAAA;AAAxB;;AAAwB;AAUA;;AAAA;AAEC;;AAAA;AANN;;AAAA;AADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEU;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOV;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACS;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAdnB;;AAAA;;AAAA;AAAA;;AAAA;AAOsB;;AAPtB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAAA;AA7BS;;;;AARA;;;;;;;;;;AAsDjB;;;AAMe;;AAAA;;AAAA;;AAAA;;AADH;;;AAAA;AAKa;;AAAA;AAAA;AAAA;;AAAiC;;;;AAA9C;AADJ;;AACI;AAGM;;;AAAV;;AAAU;AACK;;;AAAf;;AAAe;AAgVR;AAAA;;AAAA;AAAA;AAAmB;;AAAnB;AA/UP;;AAAgB;AACH;;AAAA;;AAAA;AAAb;;AAAa;AAGE;AAEA;;AAAA;AADF;;AAAA;AAIK;;AAAA;AADN;;AAAA;AADK;;AAAA;AAJV;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAXS;;;;;AAoBjB;;;AAIe;;AAAA;;AAAA;;AAAA;;;AAAP;AAER;;;AAIQ;;AAAA;;AAAA;;AAAO;;;AAEQ;AAAA;;;AAEA;;AAAA;;;AADF;;AAAA;;;AAIK;;AAAA;;;AADN;;AAAA;;;AADK;;AAAA;;;AAGY;;AAAA;;;AAAZ;AAPV;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AAUR;;;AAM6B;;AAAA;;AAAA;AAAA;;AAAA;AAAR;AACgB;AAAR;AAEmB;;;AAA1B;;;AAGV;;;;;AAAA;AAAA;AAAA;AADc;AAQH;;AAAA;AAAf;AAAe;AAE0B;AAArC;AJxRI;;AAAA;AIwRJ;AJxRD;AAAA;AIuRH;AAIR;;;AAIQ;;AAAmB;;;AAAnB;AACG;;AAAA;AAAX;;;AACgB;;AAAA;AAAJ;AACI;;;;;;;;;;;;;;AAAJ;AACA;;AAEZ;;;AASsB;;AAAA;AAAA;AAAA;AAAA;;AL5Sf;;;AK4SgD;;;;;;;;;;;;AL3S/C;AACA;AK4Sc;;AL9Sf;;;AK8SoC;;;;;;;;;;;;AL7SnC;AACA;AKgTI;;AAAkB;AAAlB;AACA;;AAAA;;AAAA;;AAAA;;;AAAA;;;AAAA;AAFJ;;;AAWI;;AAAkB;AAAlB;AAEA;;AAAA;;AAAA;AAHJ;;AAAA;AAAA;;;AAMA;;AAAA;;AAAA;;;AAG2B;;AAA0C;;AAA1C;AAAA;AACb;;AAAA;ALrUf;;;AKqUkD;;;;;;;;;;;;;ALpUjD;AACA;AKsUO;;AAAA;;AAAA;;AAAA;;AAAJ;;;AF7UP;;AAAa;;AAAoC;AE8UlB;AF9U/B;;;AEkVmB;;AAAA;AACM;;AAAA;AACS;;AAAA;AACE;;AAAe;AAAf;AAAZ;AAJQ;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAA5B;;AAAA;AAAA;AAQgB;AAAA;AAAA;AAAA;AAmNT;;;AAA+B;;;AAA/B;AAnNyB;;AAAA;AAAhB;AAAhB;AAAA;AAAA;AAC+B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA/B;AAAA;AAAA;;AAER;;;AAMsB;;AAAA;AAAA;AAAA;AAAA;;AL7Vf;;;AK6V4C;;AL5V3C;AACA;AK6VQ;;AAAA;AAAA;AAAA;AACW;AAAA;;;AAAA;AAIf;;AAAkB;AAAlB;AACA;;AAAA;;AAAA;;AAAA;;;AAAA;;;AAAA;AAFJ;;;AAQI;;AAAkB;AAAlB;AAEA;;AAAA;;;AAAA;AAAA;;AAAA;AAHJ;AAAA;;AAAA;;;AAOmB;AAAA;;;AAAA;AAAA;;AAAA;AADnB;;AAAA;;AAAA;;;AAKkC;AAAlC;;AAIA;AAGgB;AAAA;AAAA;AAAA;AA2KT;;;AAA+B;;;AAA/B;AA3KyB;;AAAA;AAAhB;AAAhB;AAAA;AAAA;AAE+B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA/B;AAAA;AAAA;;AAER;;;AAMsB;;AAAA;AAAA;AAAA;AAAA;;ALtYf;;;AKsY4C;;ALrY3C;AACA;AKsYQ;;AAAA;AAAA;AAAA;AACW;AAAA;;;AAAA;AAGf;;AAAkB;AAAlB;AAEmB;;AAAA;;;AAAA;AAAnB;;AAAA;AAHJ;AAAA;;AAAA;;;AAQI;AAAA;;;AAAA;AAAA;;AAAA;AADqB;AAAzB;;AAIA;;AAER;;;;;;AAKsB;;AAAA;AAAA;AAAA;AAAA;;AL7Zf;;;AK6Z4C;;AL5Z3C;AACA;AK8ZQ;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIL;;;AAAmC;;AAAnC;AAAX;;;AACY;;AAAA;;AAEI;;;;;;;;;AAAJ;AACA;AAGwB;;AAAA;;;AAAd;;AAAA;AAAA;AAAA;;AAAA;AL3af;;;AK2aoD;;;;;;;;;;AL1anD;AACA;AK6aI;;AAAA;;AAAsC;;AAAA;;AAAA;AAAtC;AL/aL;;;AKgbK;;;;;;;;;;;;;;;;;;AL/aJ;AACA;AKqbG;;AAAA;;;AAAA;AAAX;;;AACY;AAGQ;;;;;;AAHR;;;;;;;;AAAA;;;;;;AAAA;AAO8B;;AAIxB;;AAAA;AAAA;;;AAAA;AACN;;AAAA;;AAAA;AACA;;AAAA;;;AAAA;AACA;;AAJJ;;;AAMkC;;AAAlC;;AAAiB;AAGH;;AAAY;;;AAAiC;;AAA3D;;;AAEqB;;AAAjB;AAAsC;;;AAAtC;AADJ;;AAKA;;AAAA;;AAEI;AAAA;;;AAAA;AAAyC;AAAzC;AAD8B;AAAlC;;AAAA;AAAA;;AAGG;;;AAAmC;;AAAnC;AAAX;;;AACY;;AAAA;;AAKY;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAhB;AAAA;AAAA;AAC+B;AAAA;AAAA;AAAA;AAA+B;AAA/B;AAA/B;AAAA;AAAA;;AAJI;;AAAA;;AAAA;;;;AAUZ;;;AAEQ;;;AACiB;;AAAA;;AAAA;AACb;AAAA;AAAA;AAAA;AAiEG;;;AAA+B;;;AAA/B;AAjEH;AADa;AAIb;;AAAA;AAA2B;;AAAA;;AAAA;AAA3B;ALzeL;;;AK0eK;;;;;;;;;;ALzeJ;AACA;AK2eI;;AADJ;;AAGI;AAHJ;;;;AAMR;;;AAEQ;;;AAEI;;AAAA;;AAAA;;AAAA;;ALtfL;;;AKsf4D;;;;;;;;;;;;;;;ALrf3D;AACA;AKufkB;;AAAd;;AAAA;;AAAA;ALzfL;;;AKyf6D;;;;;;;;;;;;;ALxf5D;AACA;AKyf2B;AAAA;;AAAA;AAAA;AF1e/B;;;;AAGiB;;;;;;;;;AAHjB;;;;AE0e6C;;;AF1e7C;;AE4eJ;;;AAEQ;;;AACA;;AAAA;;AAAA;;AAER;;;AAEQ;;;AACA;;AAAA;;AAAA;;AAER;;;AAEe;;AAAA;AAAA;AAAA;AAAP;AAER;;;;AAEwB;;AAAA;AAAA;AAAP;AAAA;;AAAA;;AAAA;AAAjB;;;AACmC;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AAAA;AAAA;;AAAA;AAAA;;AAAf;;;AACoB;;AAAA;AAAA;AAAJ;AAHC;;AAAA;AAAA;AAAA;;;;;AAKwB;AAAzB;;;;;AAEhB;;;AAEuC;;AAAY;AAAZ;;;AAApB;;AAAA;;AAAA;AAAnB;;;AACgB;;AAAA;AAAA;;AAAJ;AADO;AAAA;AAAA;;;;;;AAGnB;;;AAEsB;;AAAc;AAAA;;AAAA;AAAA;AAAd;AL3hBf;;;AK2hB2C;;;;;;;;;;;;AL1hB1C;AACA;;AKuiBR;;;AAEe;AAAA;;AAAA;AAAA;AAAa;;AAAb;AAAP;AAMR;;;AAEe;AAAA;;AAAA;AAAA;AAAkB;;AAAlB;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 8 30 10000"
    },
    "9": {
      "op": "bytecblock \"global_remaining_blocks\" \"txn_fuel\" 0x151f7c75 0x \"manager\" 0x0000000000000000 \"ERR:NO FARM\" \"max_duration_days\" \"min_duration_blocks\" \"ix_pb\" \"plat_fee_pb\" \"txn_fee_pb\" 0x6173615f6964"
    },
    "153": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "155": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "158": {
      "op": "bytec 4 // \"manager\""
    },
    "160": {
      "op": "txn Sender"
    },
    "162": {
      "op": "app_global_put"
    },
    "163": {
      "op": "bytec_1 // \"txn_fuel\""
    },
    "164": {
      "op": "intc_1 // 0"
    },
    "165": {
      "op": "app_global_put"
    },
    "166": {
      "op": "bytec_0 // \"global_remaining_blocks\""
    },
    "167": {
      "op": "intc_1 // 0"
    },
    "168": {
      "op": "app_global_put"
    },
    "169": {
      "op": "bytec 7 // \"max_duration_days\""
    },
    "171": {
      "op": "pushint 45 // 45"
    },
    "173": {
      "op": "app_global_put"
    },
    "174": {
      "op": "bytec 8 // \"min_duration_blocks\""
    },
    "176": {
      "op": "intc_3 // 30"
    },
    "177": {
      "op": "app_global_put"
    },
    "178": {
      "op": "bytec 9 // \"ix_pb\""
    },
    "180": {
      "op": "pushint 100 // 100"
    },
    "182": {
      "op": "app_global_put"
    },
    "183": {
      "op": "bytec 10 // \"plat_fee_pb\""
    },
    "185": {
      "op": "pushint 97 // 97"
    },
    "187": {
      "op": "app_global_put"
    },
    "188": {
      "op": "bytec 11 // \"txn_fee_pb\""
    },
    "190": {
      "op": "pushint 3 // 3"
    },
    "192": {
      "op": "app_global_put"
    },
    "193": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "195": {
      "op": "bz main_bare_routing@20",
      "stack_out": []
    },
    "198": {
      "op": "pushbytess 0xf3db04d9 0x08362178 0x5d64cbd0 0x74585dce 0x0290b820 0x092897d3 0x9a14a84f 0xe83a87ab 0x0d131751 0x7ccbe726 0xe9d827cc 0xe08048fc 0x15d69efc 0xc8a0654b 0xd299f2a0 // method \"project_apr(application,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64)\", method \"get_algo_cost(application,asset,uint64)(uint64,uint64,uint64,uint64,uint64,uint64)\", method \"get_algo_cost_and_max_duration(application,asset,uint64)(uint64,uint64,uint64,uint64,uint64,uint64,uint64)\", method \"create_farm(application,asset,uint64,uint64)void\", method \"extend_duration_blocks(application,uint64)void\", method \"extend_amount_per_block(application,uint64)void\", method \"payout(application,uint64,bool)void\", method \"noop()void\", method \"withdraw_fees(uint64)void\", method \"optout(asset)void\", method \"update_max_duration_days(uint64)void\", method \"update_min_duration_blocks(uint64)void\", method \"get_state(application)(uint64,uint64,uint64,uint64)\", method \"log_states(uint64[])void\", method \"log_block_proposers(uint64,uint64)void\""
    },
    "275": {
      "op": "txna ApplicationArgs 0"
    },
    "278": {
      "op": "match main_project_apr_route@5 main_get_algo_cost_route@6 main_get_algo_cost_and_max_duration_route@7 main_create_farm_route@8 main_extend_duration_blocks_route@9 main_extend_amount_per_block_route@10 main_payout_route@11 main_noop_route@12 main_withdraw_fees_route@13 main_optout_route@14 main_update_max_duration_days_route@15 main_update_min_duration_blocks_route@16 main_get_state_route@17 main_log_states_route@18 main_log_block_proposers_route@19"
    },
    "310": {
      "block": "main_after_if_else@24",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "311": {
      "op": "return"
    },
    "312": {
      "block": "main_log_block_proposers_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%127#0"
      ]
    },
    "314": {
      "op": "!",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "315": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "316": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "318": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "319": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "322": {
      "op": "btoi",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "323": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%132#0",
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%132#0",
        "tmp%133#0"
      ]
    },
    "326": {
      "op": "btoi",
      "defined_out": [
        "tmp%132#0",
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%132#0",
        "tmp%134#0"
      ]
    },
    "327": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers",
      "op": "callsub log_block_proposers",
      "stack_out": []
    },
    "330": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "331": {
      "op": "return"
    },
    "332": {
      "block": "main_log_states_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "334": {
      "op": "!",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "335": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "336": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "338": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "339": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "342": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states",
      "op": "callsub log_states",
      "stack_out": []
    },
    "345": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "346": {
      "op": "return"
    },
    "347": {
      "block": "main_get_state_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "349": {
      "op": "!",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "350": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "351": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "353": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "354": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "357": {
      "op": "btoi",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "358": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "360": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state",
      "op": "callsub get_state",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "363": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0",
        "0x151f7c75"
      ]
    },
    "364": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%120#0"
      ]
    },
    "365": {
      "op": "concat",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "366": {
      "op": "log",
      "stack_out": []
    },
    "367": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "368": {
      "op": "return"
    },
    "369": {
      "block": "main_update_min_duration_blocks_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "371": {
      "op": "!",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "372": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "373": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "375": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "376": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "379": {
      "op": "btoi",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "380": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks",
      "op": "callsub update_min_duration_blocks",
      "stack_out": []
    },
    "383": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "384": {
      "op": "return"
    },
    "385": {
      "block": "main_update_max_duration_days_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "387": {
      "op": "!",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "388": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "389": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "391": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "392": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "395": {
      "op": "btoi",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "396": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days",
      "op": "callsub update_max_duration_days",
      "stack_out": []
    },
    "399": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "400": {
      "op": "return"
    },
    "401": {
      "block": "main_optout_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "403": {
      "op": "!",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "404": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "405": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "407": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "408": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "411": {
      "op": "btoi",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "412": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "414": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.optout",
      "op": "callsub optout",
      "stack_out": []
    },
    "417": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "418": {
      "op": "return"
    },
    "419": {
      "block": "main_withdraw_fees_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "421": {
      "op": "!",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "422": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "423": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "425": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "426": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "429": {
      "op": "btoi",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "430": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees",
      "op": "callsub withdraw_fees",
      "stack_out": []
    },
    "433": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "434": {
      "op": "return"
    },
    "435": {
      "block": "main_noop_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "437": {
      "op": "!",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "438": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "439": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "441": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "442": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "443": {
      "op": "return"
    },
    "444": {
      "block": "main_payout_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "446": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "447": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "448": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "450": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "451": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "454": {
      "op": "btoi",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "455": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "457": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%80#0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0"
      ]
    },
    "460": {
      "op": "btoi",
      "defined_out": [
        "tmp%80#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%82#0"
      ]
    },
    "461": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%80#0",
        "tmp%82#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%82#0",
        "tmp%83#0"
      ]
    },
    "464": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.payout",
      "op": "callsub payout",
      "stack_out": []
    },
    "467": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "468": {
      "op": "return"
    },
    "469": {
      "block": "main_extend_amount_per_block_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "471": {
      "op": "!",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "472": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "473": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "475": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "476": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "479": {
      "op": "btoi",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "480": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "482": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%71#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%72#0"
      ]
    },
    "485": {
      "op": "btoi",
      "defined_out": [
        "tmp%71#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%73#0"
      ]
    },
    "486": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block",
      "op": "callsub extend_amount_per_block",
      "stack_out": []
    },
    "489": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "490": {
      "op": "return"
    },
    "491": {
      "block": "main_extend_duration_blocks_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "493": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "494": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "495": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "497": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "498": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "501": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "502": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "504": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%62#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%63#0"
      ]
    },
    "507": {
      "op": "btoi",
      "defined_out": [
        "tmp%62#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0"
      ]
    },
    "508": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks",
      "op": "callsub extend_duration_blocks",
      "stack_out": []
    },
    "511": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "512": {
      "op": "return"
    },
    "513": {
      "block": "main_create_farm_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "515": {
      "op": "!",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "516": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "517": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "519": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "520": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "523": {
      "op": "btoi",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "524": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "526": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "529": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%50#0"
      ]
    },
    "530": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%48#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%51#0"
      ]
    },
    "532": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%52#0"
      ]
    },
    "535": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%53#0"
      ]
    },
    "536": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%53#0",
        "tmp%54#0"
      ]
    },
    "539": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%53#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%51#0",
        "tmp%53#0",
        "tmp%55#0"
      ]
    },
    "540": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm",
      "op": "callsub create_farm",
      "stack_out": []
    },
    "543": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "544": {
      "op": "return"
    },
    "545": {
      "block": "main_get_algo_cost_and_max_duration_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "547": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "548": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "549": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "551": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "552": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "555": {
      "op": "btoi",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "556": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "558": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "561": {
      "op": "btoi",
      "defined_out": [
        "tmp%34#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%36#0"
      ]
    },
    "562": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%34#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%37#0"
      ]
    },
    "564": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%34#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "567": {
      "op": "btoi",
      "defined_out": [
        "tmp%34#0",
        "tmp%37#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "tmp%37#0",
        "tmp%39#0"
      ]
    },
    "568": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration",
      "op": "callsub get_algo_cost_and_max_duration",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "571": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "0x151f7c75"
      ]
    },
    "572": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%40#0"
      ]
    },
    "573": {
      "op": "concat",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "574": {
      "op": "log",
      "stack_out": []
    },
    "575": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "576": {
      "op": "return"
    },
    "577": {
      "block": "main_get_algo_cost_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "579": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "580": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "581": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "583": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "584": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "587": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "588": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "590": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "593": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "594": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%23#0"
      ]
    },
    "596": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "599": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "600": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost",
      "op": "callsub get_algo_cost",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "603": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "0x151f7c75"
      ]
    },
    "604": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%26#0"
      ]
    },
    "605": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "606": {
      "op": "log",
      "stack_out": []
    },
    "607": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "608": {
      "op": "return"
    },
    "609": {
      "block": "main_project_apr_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "611": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "612": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "613": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "615": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "616": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "619": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "620": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "622": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "625": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "626": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr",
      "op": "callsub project_apr",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "629": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "630": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%12#0"
      ]
    },
    "631": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "632": {
      "op": "log",
      "stack_out": []
    },
    "633": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "634": {
      "op": "return"
    },
    "635": {
      "block": "main_bare_routing@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "637": {
      "op": "switch main___algopy_default_create@23 main_after_if_else@24 main_after_if_else@24 main_after_if_else@24 main_update@21 main_delete@22",
      "stack_out": []
    },
    "651": {
      "op": "b main_after_if_else@24"
    },
    "654": {
      "block": "main_delete@22",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "656": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "657": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.delete",
      "op": "callsub delete"
    },
    "660": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "661": {
      "op": "return"
    },
    "662": {
      "block": "main_update@21",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "664": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "665": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.update",
      "op": "callsub update"
    },
    "668": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "669": {
      "op": "return"
    },
    "670": {
      "block": "main___algopy_default_create@23",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "672": {
      "op": "!",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "673": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "674": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "675": {
      "op": "return"
    },
    "676": {
      "subroutine": "smart_contracts.common.send.axfer",
      "params": {
        "asset#0": "uint64",
        "receiver#0": "bytes",
        "amount#0": "uint64",
        "fee#0": "uint64"
      },
      "block": "axfer",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "679": {
      "op": "itxn_begin"
    },
    "680": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "682": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "684": {
      "op": "frame_dig -3",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "686": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "688": {
      "op": "frame_dig -4",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "690": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "692": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "694": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "696": {
      "op": "frame_dig -1",
      "defined_out": [
        "fee#0 (copy)"
      ],
      "stack_out": [
        "fee#0 (copy)"
      ]
    },
    "698": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "700": {
      "op": "itxn_submit"
    },
    "701": {
      "retsub": true,
      "op": "retsub"
    },
    "702": {
      "subroutine": "smart_contracts.common.send.algo_pay",
      "params": {
        "receiver#0": "bytes",
        "amount#0": "uint64",
        "fee#0": "uint64"
      },
      "block": "algo_pay",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "705": {
      "op": "itxn_begin"
    },
    "706": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "708": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "710": {
      "op": "frame_dig -3",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "712": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "714": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "715": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "717": {
      "op": "frame_dig -1",
      "defined_out": [
        "fee#0 (copy)"
      ],
      "stack_out": [
        "fee#0 (copy)"
      ]
    },
    "719": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "721": {
      "op": "itxn_submit"
    },
    "722": {
      "retsub": true,
      "op": "retsub"
    },
    "723": {
      "subroutine": "smart_contracts.common.validate.axfer_amount_exact",
      "params": {
        "axfer_txn_id#0": "uint64",
        "expected_asset#0": "uint64",
        "expected_amount#0": "uint64"
      },
      "block": "axfer_amount_exact",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "726": {
      "op": "frame_dig -3",
      "defined_out": [
        "axfer_txn_id#0 (copy)"
      ],
      "stack_out": [
        "axfer_txn_id#0 (copy)"
      ]
    },
    "728": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_type%0#0"
      ]
    },
    "730": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_type%0#0",
        "axfer"
      ]
    },
    "732": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_type_matches%0#0"
      ]
    },
    "733": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": []
    },
    "734": {
      "op": "frame_dig -3",
      "stack_out": [
        "axfer_txn_id#0 (copy)"
      ]
    },
    "736": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "738": {
      "op": "frame_dig -2",
      "defined_out": [
        "expected_asset#0 (copy)",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "expected_asset#0 (copy)"
      ]
    },
    "740": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "741": {
      "op": "bnz axfer_amount_exact_after_if_else@3",
      "stack_out": []
    },
    "744": {
      "op": "pushbytes \"ERR:AXFER ID\""
    },
    "758": {
      "op": "log"
    },
    "759": {
      "op": "err"
    },
    "760": {
      "block": "axfer_amount_exact_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "axfer_txn_id#0 (copy)"
      ],
      "stack_out": [
        "axfer_txn_id#0 (copy)"
      ]
    },
    "762": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "764": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "766": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "767": {
      "op": "bnz axfer_amount_exact_after_if_else@7",
      "stack_out": []
    },
    "770": {
      "op": "pushbytes \"ERR:AXFER RCV\""
    },
    "785": {
      "op": "log"
    },
    "786": {
      "op": "err"
    },
    "787": {
      "block": "axfer_amount_exact_after_if_else@7",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "axfer_txn_id#0 (copy)"
      ],
      "stack_out": [
        "axfer_txn_id#0 (copy)"
      ]
    },
    "789": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "791": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected_amount#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "expected_amount#0 (copy)"
      ]
    },
    "793": {
      "op": ">=",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "794": {
      "op": "bnz axfer_amount_exact_after_if_else@11",
      "stack_out": []
    },
    "797": {
      "op": "pushbytes \"ERR:AXFER AMT\""
    },
    "812": {
      "op": "log"
    },
    "813": {
      "op": "err"
    },
    "814": {
      "block": "axfer_amount_exact_after_if_else@11",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "815": {
      "subroutine": "smart_contracts.common.validate.payment_amount_exact",
      "params": {
        "payment_txn_idx#0": "uint64",
        "expected_amount#0": "uint64"
      },
      "block": "payment_amount_exact",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "818": {
      "op": "frame_dig -2",
      "defined_out": [
        "payment_txn_idx#0 (copy)"
      ],
      "stack_out": [
        "payment_txn_idx#0 (copy)"
      ]
    },
    "820": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_type%0#0"
      ]
    },
    "822": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "823": {
      "op": "==",
      "defined_out": [
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_type_matches%0#0"
      ]
    },
    "824": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": []
    },
    "825": {
      "op": "frame_dig -2",
      "stack_out": [
        "payment_txn_idx#0 (copy)"
      ]
    },
    "827": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "829": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "831": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "832": {
      "op": "bnz payment_amount_exact_after_if_else@3",
      "stack_out": []
    },
    "835": {
      "op": "pushbytes \"ERR:PAY RCV\""
    },
    "848": {
      "op": "log"
    },
    "849": {
      "op": "err"
    },
    "850": {
      "block": "payment_amount_exact_after_if_else@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "payment_txn_idx#0 (copy)"
      ],
      "stack_out": [
        "payment_txn_idx#0 (copy)"
      ]
    },
    "852": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "854": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected_amount#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "expected_amount#0 (copy)"
      ]
    },
    "856": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "857": {
      "op": "bnz payment_amount_exact_after_if_else@7",
      "stack_out": []
    },
    "860": {
      "op": "pushbytes \"ERR:PAY AMT\""
    },
    "873": {
      "op": "log"
    },
    "874": {
      "op": "err"
    },
    "875": {
      "block": "payment_amount_exact_after_if_else@7",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "876": {
      "subroutine": "smart_contracts.common.round_time.get_round_time",
      "params": {
        "min_round_sample#0": "uint64"
      },
      "block": "get_round_time",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "879": {
      "op": "bytec_3 // \"\""
    },
    "880": {
      "op": "dup"
    },
    "881": {
      "op": "txn LastValid"
    },
    "883": {
      "op": "intc_0 // 1"
    },
    "884": {
      "op": "txn LastValid"
    },
    "886": {
      "op": "pushint 1001 // 1001",
      "defined_out": [
        "1001",
        "a#0",
        "default#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "a#0",
        "1001"
      ]
    },
    "889": {
      "op": ">",
      "defined_out": [
        "a#0",
        "default#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "tmp%0#1"
      ]
    },
    "890": {
      "op": "bz get_round_time_ternary_false@5",
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0"
      ]
    },
    "893": {
      "op": "frame_dig 2"
    },
    "895": {
      "op": "pushint 1001 // 1001"
    },
    "898": {
      "op": "-"
    },
    "899": {
      "op": "frame_bury 0"
    },
    "901": {
      "block": "get_round_time_ternary_merge@6",
      "stack_in": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0"
      ],
      "op": "txn FirstValid",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "tmp%1#0"
      ]
    },
    "903": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%1#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "tmp%1#0",
        "1"
      ]
    },
    "904": {
      "op": "-",
      "defined_out": [
        "last_accessible#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "last_accessible#0"
      ]
    },
    "905": {
      "op": "frame_bury 1",
      "defined_out": [
        "last_accessible#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0"
      ]
    },
    "907": {
      "op": "frame_dig 0",
      "defined_out": [
        "first_accessible#0",
        "last_accessible#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "first_accessible#0"
      ]
    },
    "909": {
      "op": "intc_0 // 1",
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "first_accessible#0",
        "1"
      ]
    },
    "910": {
      "op": ">",
      "defined_out": [
        "first_accessible#0",
        "last_accessible#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "tmp%2#0"
      ]
    },
    "911": {
      "op": "bz get_round_time_after_if_else@2",
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0"
      ]
    },
    "914": {
      "op": "frame_dig 1"
    },
    "916": {
      "op": "frame_dig 0"
    },
    "918": {
      "op": "-"
    },
    "919": {
      "op": "frame_dig -1"
    },
    "921": {
      "op": ">="
    },
    "922": {
      "op": "bnz get_round_time_after_if_else@2"
    },
    "925": {
      "op": "pushbytes \"ERR:BLK RNGE\""
    },
    "939": {
      "op": "log"
    },
    "940": {
      "op": "err"
    },
    "941": {
      "block": "get_round_time_after_if_else@2",
      "stack_in": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "last_accessible#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "last_accessible#0"
      ]
    },
    "943": {
      "op": "dup",
      "defined_out": [
        "last_accessible#0",
        "last_accessible#0 (copy)"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "last_accessible#0",
        "last_accessible#0 (copy)"
      ]
    },
    "944": {
      "op": "frame_dig 0",
      "defined_out": [
        "first_accessible#0",
        "last_accessible#0",
        "last_accessible#0 (copy)"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "last_accessible#0",
        "last_accessible#0 (copy)",
        "first_accessible#0"
      ]
    },
    "946": {
      "op": "dup",
      "defined_out": [
        "first_accessible#0",
        "first_accessible#0 (copy)",
        "last_accessible#0",
        "last_accessible#0 (copy)"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "last_accessible#0",
        "last_accessible#0 (copy)",
        "first_accessible#0 (copy)",
        "first_accessible#0 (copy)"
      ]
    },
    "947": {
      "op": "cover 3",
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "first_accessible#0",
        "last_accessible#0",
        "last_accessible#0 (copy)",
        "first_accessible#0 (copy)"
      ]
    },
    "949": {
      "op": "-",
      "defined_out": [
        "block_delta#0",
        "first_accessible#0",
        "last_accessible#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "first_accessible#0",
        "last_accessible#0",
        "block_delta#0"
      ]
    },
    "950": {
      "op": "swap",
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "first_accessible#0",
        "block_delta#0",
        "last_accessible#0"
      ]
    },
    "951": {
      "op": "block BlkTimestamp",
      "defined_out": [
        "block_delta#0",
        "first_accessible#0",
        "last_accessible#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "first_accessible#0",
        "block_delta#0",
        "tmp%5#0"
      ]
    },
    "953": {
      "op": "uncover 2",
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "block_delta#0",
        "tmp%5#0",
        "first_accessible#0"
      ]
    },
    "955": {
      "op": "block BlkTimestamp",
      "defined_out": [
        "block_delta#0",
        "first_accessible#0",
        "last_accessible#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "block_delta#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "957": {
      "op": "-",
      "defined_out": [
        "block_delta#0",
        "first_accessible#0",
        "last_accessible#0",
        "ts_delta#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "block_delta#0",
        "ts_delta#0"
      ]
    },
    "958": {
      "op": "frame_bury 0"
    },
    "960": {
      "op": "frame_bury 1",
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "ts_delta#0",
        "block_delta#0"
      ]
    },
    "962": {
      "retsub": true,
      "op": "retsub"
    },
    "963": {
      "block": "get_round_time_ternary_false@5",
      "stack_in": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "first_accessible#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0",
        "first_accessible#0"
      ]
    },
    "965": {
      "op": "frame_bury 0",
      "defined_out": [
        "first_accessible#0"
      ],
      "stack_out": [
        "first_accessible#0",
        "last_accessible#0",
        "a#0",
        "default#0"
      ]
    },
    "967": {
      "op": "b get_round_time_ternary_merge@6"
    },
    "970": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.update",
      "params": {},
      "block": "update",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "973": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller",
      "op": "callsub ensure_manager_caller"
    },
    "976": {
      "retsub": true,
      "op": "retsub"
    },
    "977": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.delete",
      "params": {},
      "block": "delete",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "980": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller",
      "op": "callsub ensure_manager_caller"
    },
    "983": {
      "retsub": true,
      "op": "retsub"
    },
    "984": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calc_tm_denom",
      "params": {
        "a1#0": "uint64",
        "a2#0": "uint64",
        "v#0": "uint64",
        "amount#0": "uint64"
      },
      "block": "calc_tm_denom",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "987": {
      "op": "frame_dig -4",
      "defined_out": [
        "a1#0 (copy)"
      ],
      "stack_out": [
        "a1#0 (copy)"
      ]
    },
    "989": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "990": {
      "op": "frame_dig -3",
      "defined_out": [
        "a2#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "a2#0 (copy)"
      ]
    },
    "992": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "993": {
      "op": "b*",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "994": {
      "op": "intc_3 // 30",
      "defined_out": [
        "30",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "30"
      ]
    },
    "995": {
      "op": "frame_dig -1",
      "defined_out": [
        "30",
        "amount#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "30",
        "amount#0 (copy)"
      ]
    },
    "997": {
      "op": "*",
      "defined_out": [
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#1"
      ]
    },
    "998": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#1",
        "10000"
      ]
    },
    "1000": {
      "op": "/",
      "defined_out": [
        "tmp%1#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#1"
      ]
    },
    "1001": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "tmp%1#1",
        "amount#0 (copy)"
      ]
    },
    "1003": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "amount#0 (copy)",
        "tmp%1#1"
      ]
    },
    "1004": {
      "op": "-",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#1"
      ]
    },
    "1005": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#1",
        "v#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#1",
        "v#0 (copy)"
      ]
    },
    "1007": {
      "op": "+",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1008": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "1009": {
      "op": "b/",
      "defined_out": [
        "reinterpret_bytes%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes%0#0"
      ]
    },
    "1010": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1011": {
      "retsub": true,
      "op": "retsub"
    },
    "1012": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_tinyman_algo_price_for_asset",
      "params": {
        "tm2#0": "uint64",
        "tma#0": "bytes",
        "farm_amount#0": "uint64"
      },
      "block": "get_tinyman_algo_price_for_asset",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1015": {
      "op": "frame_dig -2",
      "defined_out": [
        "tma#0 (copy)"
      ],
      "stack_out": [
        "tma#0 (copy)"
      ]
    },
    "1017": {
      "op": "frame_dig -3",
      "defined_out": [
        "tm2#0 (copy)",
        "tma#0 (copy)"
      ],
      "stack_out": [
        "tma#0 (copy)",
        "tm2#0 (copy)"
      ]
    },
    "1019": {
      "op": "pushbytes 0x61737365745f315f6964",
      "defined_out": [
        "0x61737365745f315f6964",
        "tm2#0 (copy)",
        "tma#0 (copy)"
      ],
      "stack_out": [
        "tma#0 (copy)",
        "tm2#0 (copy)",
        "0x61737365745f315f6964"
      ]
    },
    "1031": {
      "op": "app_local_get_ex",
      "defined_out": [
        "aid1#0",
        "exists1#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists1#0"
      ]
    },
    "1032": {
      "op": "frame_dig -2",
      "stack_out": [
        "aid1#0",
        "exists1#0",
        "tma#0 (copy)"
      ]
    },
    "1034": {
      "op": "frame_dig -3",
      "stack_out": [
        "aid1#0",
        "exists1#0",
        "tma#0 (copy)",
        "tm2#0 (copy)"
      ]
    },
    "1036": {
      "op": "pushbytes 0x61737365745f315f7265736572766573",
      "defined_out": [
        "0x61737365745f315f7265736572766573",
        "aid1#0",
        "exists1#0",
        "tm2#0 (copy)",
        "tma#0 (copy)"
      ],
      "stack_out": [
        "aid1#0",
        "exists1#0",
        "tma#0 (copy)",
        "tm2#0 (copy)",
        "0x61737365745f315f7265736572766573"
      ]
    },
    "1054": {
      "op": "app_local_get_ex",
      "defined_out": [
        "a1#0",
        "aid1#0",
        "exists1#0",
        "exists2#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists1#0",
        "a1#0",
        "exists2#0"
      ]
    },
    "1055": {
      "op": "cover 2",
      "defined_out": [
        "a1#0",
        "aid1#0",
        "exists1#0",
        "exists2#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "exists1#0",
        "a1#0"
      ]
    },
    "1057": {
      "op": "swap",
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists1#0"
      ]
    },
    "1058": {
      "op": "frame_dig -2",
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists1#0",
        "tma#0 (copy)"
      ]
    },
    "1060": {
      "op": "frame_dig -3",
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists1#0",
        "tma#0 (copy)",
        "tm2#0 (copy)"
      ]
    },
    "1062": {
      "op": "pushbytes 0x61737365745f325f7265736572766573",
      "defined_out": [
        "0x61737365745f325f7265736572766573",
        "a1#0",
        "aid1#0",
        "exists1#0",
        "exists2#0",
        "tm2#0 (copy)",
        "tma#0 (copy)"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists1#0",
        "tma#0 (copy)",
        "tm2#0 (copy)",
        "0x61737365745f325f7265736572766573"
      ]
    },
    "1080": {
      "op": "app_local_get_ex",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aid1#0",
        "exists1#0",
        "exists2#0",
        "exists3#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists1#0",
        "a2#0",
        "exists3#0"
      ]
    },
    "1081": {
      "op": "cover 2",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aid1#0",
        "exists1#0",
        "exists2#0",
        "exists3#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "exists1#0",
        "a2#0"
      ]
    },
    "1083": {
      "op": "swap",
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "exists1#0"
      ]
    },
    "1084": {
      "op": "bz get_tinyman_algo_price_for_asset_bool_false@4",
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0"
      ]
    },
    "1087": {
      "op": "frame_dig 1"
    },
    "1089": {
      "op": "bz get_tinyman_algo_price_for_asset_bool_false@4"
    },
    "1092": {
      "op": "frame_dig 3"
    },
    "1094": {
      "op": "bz get_tinyman_algo_price_for_asset_bool_false@4"
    },
    "1097": {
      "op": "intc_0 // 1"
    },
    "1098": {
      "block": "get_tinyman_algo_price_for_asset_bool_merge@5",
      "stack_in": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "cond#0"
      ],
      "op": "bnz get_tinyman_algo_price_for_asset_after_if_else@11",
      "defined_out": [],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0"
      ]
    },
    "1101": {
      "op": "pushbytes \"ERR:TM STT\""
    },
    "1113": {
      "op": "log"
    },
    "1114": {
      "op": "err"
    },
    "1115": {
      "block": "get_tinyman_algo_price_for_asset_after_if_else@11",
      "stack_in": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "aid1#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "aid1#0"
      ]
    },
    "1117": {
      "op": "bz get_tinyman_algo_price_for_asset_else_body@7",
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0"
      ]
    },
    "1120": {
      "op": "frame_dig 2"
    },
    "1122": {
      "op": "dup"
    },
    "1123": {
      "op": "frame_dig 4"
    },
    "1125": {
      "op": "dup"
    },
    "1126": {
      "op": "cover 3"
    },
    "1128": {
      "op": "uncover 2"
    },
    "1130": {
      "op": "frame_dig -1"
    },
    "1132": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calc_tm_denom",
      "op": "callsub calc_tm_denom"
    },
    "1135": {
      "op": "-"
    },
    "1136": {
      "op": "intc_0 // 1"
    },
    "1137": {
      "op": "-"
    },
    "1138": {
      "block": "get_tinyman_algo_price_for_asset_after_if_else@8",
      "stack_in": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "ret#1"
      ],
      "op": "frame_bury 0",
      "defined_out": [
        "ret#1"
      ]
    },
    "1140": {
      "retsub": true,
      "op": "retsub"
    },
    "1141": {
      "block": "get_tinyman_algo_price_for_asset_else_body@7",
      "stack_in": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "a1#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "a1#0"
      ]
    },
    "1143": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "a1#0",
        "a1#0 (copy)"
      ]
    },
    "1144": {
      "op": "frame_dig 4",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "a1#0",
        "a1#0 (copy)",
        "a2#0"
      ]
    },
    "1146": {
      "op": "dup",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0",
        "a2#0 (copy)"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "a1#0",
        "a1#0 (copy)",
        "a2#0 (copy)",
        "a2#0"
      ]
    },
    "1147": {
      "op": "frame_dig -1",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0",
        "a2#0 (copy)",
        "farm_amount#0 (copy)"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "a1#0",
        "a1#0 (copy)",
        "a2#0 (copy)",
        "a2#0",
        "farm_amount#0 (copy)"
      ]
    },
    "1149": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calc_tm_denom",
      "op": "callsub calc_tm_denom",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "a1#0",
        "tmp%3#0"
      ]
    },
    "1152": {
      "op": "-",
      "defined_out": [
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "tmp%4#0"
      ]
    },
    "1153": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a1#0",
        "a2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "tmp%4#0",
        "1"
      ]
    },
    "1154": {
      "op": "-",
      "defined_out": [
        "a1#0",
        "a2#0",
        "ret#1"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "ret#1"
      ]
    },
    "1155": {
      "op": "b get_tinyman_algo_price_for_asset_after_if_else@8"
    },
    "1158": {
      "block": "get_tinyman_algo_price_for_asset_bool_false@4",
      "stack_in": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "aid1#0",
        "exists2#0",
        "a1#0",
        "exists3#0",
        "a2#0",
        "cond#0"
      ]
    },
    "1159": {
      "op": "b get_tinyman_algo_price_for_asset_bool_merge@5"
    },
    "1162": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr",
      "params": {
        "recipient_app#0": "uint64",
        "override_farm_amount#0": "uint64"
      },
      "block": "project_apr",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1165": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1166": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0"
      ]
    },
    "1167": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0"
      ]
    },
    "1168": {
      "op": "frame_dig -2",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1170": {
      "op": "pushbytes 0x746d325f6170705f6964",
      "defined_out": [
        "0x746d325f6170705f6964",
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "recipient_app#0 (copy)",
        "0x746d325f6170705f6964"
      ]
    },
    "1182": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists2#0",
        "tm2_app_id#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "tm2_app_id#0",
        "exists2#0"
      ]
    },
    "1183": {
      "op": "swap",
      "defined_out": [
        "exists2#0",
        "tm2_app_id#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0"
      ]
    },
    "1184": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1186": {
      "op": "pushbytes 0x6c705f6964",
      "defined_out": [
        "0x6c705f6964",
        "exists2#0",
        "recipient_app#0 (copy)",
        "tm2_app_id#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "recipient_app#0 (copy)",
        "0x6c705f6964"
      ]
    },
    "1193": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists2#0",
        "exists3#0",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "tm2_lp_addr#0",
        "exists3#0"
      ]
    },
    "1194": {
      "op": "swap",
      "defined_out": [
        "exists2#0",
        "exists3#0",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0"
      ]
    },
    "1195": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1197": {
      "op": "bytec 12 // 0x6173615f6964",
      "defined_out": [
        "0x6173615f6964",
        "exists2#0",
        "exists3#0",
        "recipient_app#0 (copy)",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "recipient_app#0 (copy)",
        "0x6173615f6964"
      ]
    },
    "1199": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asa_id#0",
        "exists1#0",
        "exists2#0",
        "exists3#0",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "asa_id#0",
        "exists1#0"
      ]
    },
    "1200": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists1#0"
      ]
    },
    "1202": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists1#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1204": {
      "op": "pushbytes 0x7374616b6564",
      "defined_out": [
        "0x7374616b6564",
        "exists1#0",
        "exists2#0",
        "exists3#0",
        "recipient_app#0 (copy)",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists1#0",
        "recipient_app#0 (copy)",
        "0x7374616b6564"
      ]
    },
    "1212": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists1#0",
        "exists2#0",
        "exists3#0",
        "exists4#0",
        "staked#0",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists1#0",
        "staked#0",
        "exists4#0"
      ]
    },
    "1213": {
      "op": "cover 2",
      "defined_out": [
        "exists1#0",
        "exists2#0",
        "exists3#0",
        "exists4#0",
        "staked#0",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "exists1#0",
        "staked#0"
      ]
    },
    "1215": {
      "op": "swap",
      "defined_out": [
        "exists1#0",
        "exists2#0",
        "exists3#0",
        "exists4#0",
        "staked#0",
        "tm2_app_id#0",
        "tm2_lp_addr#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "exists1#0"
      ]
    },
    "1216": {
      "op": "bz project_apr_bool_false@5",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ]
    },
    "1219": {
      "op": "frame_dig 3"
    },
    "1221": {
      "op": "bz project_apr_bool_false@5"
    },
    "1224": {
      "op": "frame_dig 5"
    },
    "1226": {
      "op": "bz project_apr_bool_false@5"
    },
    "1229": {
      "op": "frame_dig 7"
    },
    "1231": {
      "op": "bz project_apr_bool_false@5"
    },
    "1234": {
      "op": "intc_0 // 1"
    },
    "1235": {
      "block": "project_apr_bool_merge@6",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "cond#0"
      ],
      "op": "bnz project_apr_after_if_else@17",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ]
    },
    "1238": {
      "op": "pushbytes \"ERR:DS STT\""
    },
    "1250": {
      "op": "log"
    },
    "1251": {
      "op": "err"
    },
    "1252": {
      "block": "project_apr_after_if_else@17",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "farm_amount#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "farm_amount#0"
      ]
    },
    "1253": {
      "op": "frame_bury 1",
      "defined_out": [
        "farm_amount#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ]
    },
    "1255": {
      "op": "frame_dig -2",
      "defined_out": [
        "farm_amount#0",
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1257": {
      "op": "itob",
      "defined_out": [
        "farm_amount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%0#0"
      ]
    },
    "1258": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1259": {
      "op": "frame_bury 0",
      "defined_out": [
        "farm_amount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%0#0"
      ]
    },
    "1261": {
      "op": "box_len",
      "defined_out": [
        "farm_amount#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1262": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "maybe_exists%0#0"
      ]
    },
    "1264": {
      "op": "bz project_apr_after_if_else@8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ]
    },
    "1267": {
      "op": "frame_dig 0"
    },
    "1269": {
      "op": "box_get"
    },
    "1270": {
      "error": "check self.farms entry exists",
      "op": "assert // check self.farms entry exists"
    },
    "1271": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds"
    },
    "1274": {
      "op": "btoi"
    },
    "1275": {
      "op": "frame_bury 1"
    },
    "1277": {
      "block": "project_apr_after_if_else@8",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "farm_amount#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "farm_amount#0"
      ]
    },
    "1279": {
      "op": "bz project_apr_ternary_false@10",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ]
    },
    "1282": {
      "op": "frame_dig 6"
    },
    "1284": {
      "op": "dup"
    },
    "1285": {
      "op": "len"
    },
    "1286": {
      "op": "pushint 32 // 32"
    },
    "1288": {
      "op": "=="
    },
    "1289": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes"
    },
    "1290": {
      "op": "frame_dig 4"
    },
    "1292": {
      "op": "swap"
    },
    "1293": {
      "op": "frame_dig 1"
    },
    "1295": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_tinyman_algo_price_for_asset",
      "op": "callsub get_tinyman_algo_price_for_asset"
    },
    "1298": {
      "op": "frame_bury 2"
    },
    "1300": {
      "block": "project_apr_ternary_merge@11",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "override_farm_amount#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount#0 (copy)"
      ]
    },
    "1302": {
      "op": "bz project_apr_ternary_false@13",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ]
    },
    "1305": {
      "op": "frame_dig 6"
    },
    "1307": {
      "op": "dup"
    },
    "1308": {
      "op": "len"
    },
    "1309": {
      "op": "pushint 32 // 32"
    },
    "1311": {
      "op": "=="
    },
    "1312": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes"
    },
    "1313": {
      "op": "frame_dig 4"
    },
    "1315": {
      "op": "swap"
    },
    "1316": {
      "op": "frame_dig -1"
    },
    "1318": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_tinyman_algo_price_for_asset",
      "op": "callsub get_tinyman_algo_price_for_asset"
    },
    "1321": {
      "block": "project_apr_ternary_merge@14",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1323": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "1325": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "value%0#0"
      ]
    },
    "1326": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "balance#0",
        "check%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "check%1#0"
      ]
    },
    "1328": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0"
      ]
    },
    "1329": {
      "op": "online_stake",
      "defined_out": [
        "balance#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "tmp%11#0"
      ]
    },
    "1330": {
      "op": "itob",
      "defined_out": [
        "balance#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0"
      ]
    },
    "1331": {
      "op": "txn FirstValid",
      "defined_out": [
        "balance#0",
        "tmp%12#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "tmp%12#0"
      ]
    },
    "1333": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "balance#0",
        "tmp%12#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "tmp%12#0",
        "1"
      ]
    },
    "1334": {
      "op": "-",
      "defined_out": [
        "balance#0",
        "tmp%13#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "tmp%13#0"
      ]
    },
    "1335": {
      "op": "block BlkBonus",
      "defined_out": [
        "balance#0",
        "current_block_rewards#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0"
      ]
    },
    "1337": {
      "op": "pushint 500 // 500",
      "defined_out": [
        "500",
        "balance#0",
        "current_block_rewards#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "500"
      ]
    },
    "1340": {
      "callsub": "smart_contracts.common.round_time.get_round_time",
      "op": "callsub get_round_time",
      "defined_out": [
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0"
      ]
    },
    "1343": {
      "op": "intc 4 // 10000",
      "defined_out": [
        "10000",
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0",
        "10000"
      ]
    },
    "1345": {
      "op": "dig 2",
      "defined_out": [
        "10000",
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "rt_fraction.dt#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0",
        "10000",
        "rt_fraction.dt#0 (copy)"
      ]
    },
    "1347": {
      "op": "*",
      "defined_out": [
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "tmp%14#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0",
        "tmp%14#0"
      ]
    },
    "1348": {
      "op": "dig 1",
      "defined_out": [
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dr#0",
        "rt_fraction.dr#0 (copy)",
        "rt_fraction.dt#0",
        "tmp%14#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0",
        "tmp%14#0",
        "rt_fraction.dr#0 (copy)"
      ]
    },
    "1350": {
      "op": "/",
      "defined_out": [
        "avg_round_time#0",
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0",
        "avg_round_time#0"
      ]
    },
    "1351": {
      "op": "pushint 31536000 // 31536000",
      "defined_out": [
        "31536000",
        "avg_round_time#0",
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0",
        "avg_round_time#0",
        "31536000"
      ]
    },
    "1356": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "avg_round_time#0",
        "31536000",
        "rt_fraction.dr#0"
      ]
    },
    "1358": {
      "op": "*",
      "defined_out": [
        "avg_round_time#0",
        "balance#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "tmp%16#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "rt_fraction.dt#0",
        "avg_round_time#0",
        "tmp%16#0"
      ]
    },
    "1359": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "tmp%16#0",
        "rt_fraction.dt#0"
      ]
    },
    "1361": {
      "op": "/",
      "defined_out": [
        "avg_round_time#0",
        "balance#0",
        "current_block_rewards#0",
        "tmp%17#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "tmp%17#0"
      ]
    },
    "1362": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "balance#0",
        "current_block_rewards#0",
        "global_yearly_blocks_produced#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "balance#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "global_yearly_blocks_produced#0"
      ]
    },
    "1363": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "global_yearly_blocks_produced#0",
        "balance#0"
      ]
    },
    "1365": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "current_block_rewards#0",
        "global_yearly_blocks_produced#0",
        "tmp%18#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "global_yearly_blocks_produced#0",
        "tmp%18#0"
      ]
    },
    "1366": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "tmp%18#0",
        "global_yearly_blocks_produced#0"
      ]
    },
    "1367": {
      "op": "dig 1",
      "defined_out": [
        "avg_round_time#0",
        "current_block_rewards#0",
        "global_yearly_blocks_produced#0",
        "tmp%18#0",
        "tmp%18#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "tmp%18#0",
        "global_yearly_blocks_produced#0",
        "tmp%18#0 (copy)"
      ]
    },
    "1369": {
      "op": "b*",
      "defined_out": [
        "avg_round_time#0",
        "current_block_rewards#0",
        "tmp%18#0",
        "tmp%19#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "1370": {
      "op": "dig 4",
      "defined_out": [
        "avg_round_time#0",
        "current_block_rewards#0",
        "tmp%18#0",
        "tmp%19#0",
        "total_online_stake#0",
        "total_online_stake#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "tmp%18#0",
        "tmp%19#0",
        "total_online_stake#0 (copy)"
      ]
    },
    "1372": {
      "op": "b/",
      "defined_out": [
        "avg_round_time#0",
        "current_block_rewards#0",
        "own_yearly_blocks_produced#0",
        "tmp%18#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "current_block_rewards#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0"
      ]
    },
    "1373": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "current_block_rewards#0"
      ]
    },
    "1375": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "own_yearly_blocks_produced#0",
        "tmp%18#0",
        "tmp%20#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0"
      ]
    },
    "1376": {
      "op": "dup",
      "defined_out": [
        "avg_round_time#0",
        "own_yearly_blocks_produced#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "1377": {
      "op": "dig 2",
      "defined_out": [
        "avg_round_time#0",
        "own_yearly_blocks_produced#0",
        "own_yearly_blocks_produced#0 (copy)",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "own_yearly_blocks_produced#0 (copy)"
      ]
    },
    "1379": {
      "op": "b*",
      "defined_out": [
        "avg_round_time#0",
        "base_rewards#0",
        "own_yearly_blocks_produced#0",
        "tmp%18#0",
        "tmp%20#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "base_rewards#0"
      ]
    },
    "1380": {
      "op": "intc 4 // 10000",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "base_rewards#0",
        "10000"
      ]
    },
    "1382": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "base_rewards#0",
        "own_yearly_blocks_produced#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "base_rewards#0",
        "tmp%21#0"
      ]
    },
    "1383": {
      "op": "dup",
      "defined_out": [
        "avg_round_time#0",
        "base_rewards#0",
        "own_yearly_blocks_produced#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%21#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "base_rewards#0",
        "tmp%21#0",
        "tmp%21#0 (copy)"
      ]
    },
    "1384": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%21#0 (copy)",
        "base_rewards#0"
      ]
    },
    "1386": {
      "op": "b*",
      "defined_out": [
        "avg_round_time#0",
        "own_yearly_blocks_produced#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1387": {
      "op": "frame_dig 8",
      "defined_out": [
        "avg_round_time#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "staked#0"
      ]
    },
    "1389": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "1390": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%22#0"
      ]
    },
    "1391": {
      "op": "dig 1",
      "defined_out": [
        "avg_round_time#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1393": {
      "op": "b/",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0"
      ]
    },
    "1394": {
      "op": "frame_dig 2",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "farm_amount_algo#0"
      ]
    },
    "1396": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0"
      ]
    },
    "1397": {
      "op": "dup",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%24#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "tmp%24#0 (copy)"
      ]
    },
    "1398": {
      "op": "dig 6",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "tmp%24#0 (copy)",
        "own_yearly_blocks_produced#0 (copy)"
      ]
    },
    "1400": {
      "op": "b*",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_rewards#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_rewards#0"
      ]
    },
    "1401": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_rewards#0",
        "tmp%21#0 (copy)"
      ]
    },
    "1403": {
      "op": "b*",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%26#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "1404": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1406": {
      "op": "b/",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0"
      ]
    },
    "1407": {
      "op": "uncover 10",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_amount_algo#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "override_farm_amount_algo#0"
      ]
    },
    "1409": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0"
      ]
    },
    "1410": {
      "op": "dup",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%28#0 (copy)",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "tmp%28#0 (copy)"
      ]
    },
    "1411": {
      "op": "dig 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "tmp%28#0 (copy)",
        "own_yearly_blocks_produced#0 (copy)"
      ]
    },
    "1413": {
      "op": "b*",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_rewards#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_rewards#0"
      ]
    },
    "1414": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_rewards#0",
        "tmp%21#0"
      ]
    },
    "1416": {
      "op": "b*",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%30#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "tmp%30#0"
      ]
    },
    "1417": {
      "op": "dig 5",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "tmp%30#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1419": {
      "op": "b/",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0"
      ]
    },
    "1420": {
      "op": "frame_dig 1",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "farm_amount#0"
      ]
    },
    "1422": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0"
      ]
    },
    "1423": {
      "op": "frame_dig -1",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_amount#0 (copy)",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "override_farm_amount#0 (copy)"
      ]
    },
    "1425": {
      "op": "itob",
      "defined_out": [
        "avg_round_time#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "avg_round_time#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ]
    },
    "1426": {
      "op": "uncover 11",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "avg_round_time#0"
      ]
    },
    "1428": {
      "op": "itob",
      "defined_out": [
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ]
    },
    "1429": {
      "op": "dig 12",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "total_online_stake#0 (copy)"
      ]
    },
    "1431": {
      "op": "len",
      "defined_out": [
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "len_%0#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "len_%0#0"
      ]
    },
    "1432": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "len_%0#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "len_%0#0",
        "8"
      ]
    },
    "1433": {
      "op": "<=",
      "defined_out": [
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "no_overflow%0#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "no_overflow%0#0"
      ]
    },
    "1434": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ]
    },
    "1435": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "8"
      ]
    },
    "1436": {
      "op": "bzero",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "total_online_stake#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0"
      ]
    },
    "1437": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "total_online_stake#0"
      ]
    },
    "1439": {
      "op": "dig 1",
      "defined_out": [
        "b_zeros%0#0",
        "b_zeros%0#0 (copy)",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "total_online_stake#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "total_online_stake#0",
        "b_zeros%0#0 (copy)"
      ]
    },
    "1441": {
      "op": "b|",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0"
      ]
    },
    "1442": {
      "op": "dig 12",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "own_yearly_blocks_produced#0 (copy)"
      ]
    },
    "1444": {
      "op": "len",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "len_%1#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "len_%1#0"
      ]
    },
    "1445": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "len_%1#0",
        "8"
      ]
    },
    "1446": {
      "op": "<=",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "no_overflow%1#0",
        "override_farm_apr_bps#0",
        "own_yearly_blocks_produced#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "no_overflow%1#0"
      ]
    },
    "1447": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "own_yearly_blocks_produced#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0"
      ]
    },
    "1448": {
      "op": "uncover 12",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "own_yearly_blocks_produced#0"
      ]
    },
    "1450": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "own_yearly_blocks_produced#0",
        "b_zeros%0#0 (copy)"
      ]
    },
    "1452": {
      "op": "b|",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "1453": {
      "op": "dig 10",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "base_apr_bps#0 (copy)",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "base_apr_bps#0 (copy)"
      ]
    },
    "1455": {
      "op": "len",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "len_%2#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "len_%2#0"
      ]
    },
    "1456": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "len_%2#0",
        "8"
      ]
    },
    "1457": {
      "op": "<=",
      "defined_out": [
        "b_zeros%0#0",
        "base_apr_bps#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "no_overflow%2#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "no_overflow%2#0"
      ]
    },
    "1458": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "base_apr_bps#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "1459": {
      "op": "uncover 10",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "base_apr_bps#0"
      ]
    },
    "1461": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "base_apr_bps#0",
        "b_zeros%0#0 (copy)"
      ]
    },
    "1463": {
      "op": "b|",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "1464": {
      "op": "dig 9",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "farm_apr_bps#0 (copy)",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "farm_apr_bps#0 (copy)"
      ]
    },
    "1466": {
      "op": "len",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "len_%3#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "len_%3#0"
      ]
    },
    "1467": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "len_%3#0",
        "8"
      ]
    },
    "1468": {
      "op": "<=",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "farm_apr_bps#0",
        "no_overflow%3#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "no_overflow%3#0"
      ]
    },
    "1469": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "farm_apr_bps#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "1470": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "farm_apr_bps#0"
      ]
    },
    "1472": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "farm_apr_bps#0",
        "b_zeros%0#0 (copy)"
      ]
    },
    "1474": {
      "op": "b|",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "1475": {
      "op": "dig 8",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "override_farm_apr_bps#0",
        "override_farm_apr_bps#0 (copy)",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "override_farm_apr_bps#0 (copy)"
      ]
    },
    "1477": {
      "op": "len",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "len_%4#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "len_%4#0"
      ]
    },
    "1478": {
      "op": "intc_2 // 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "len_%4#0",
        "8"
      ]
    },
    "1479": {
      "op": "<=",
      "defined_out": [
        "b_zeros%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "no_overflow%4#0",
        "override_farm_apr_bps#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "no_overflow%4#0"
      ]
    },
    "1480": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "override_farm_apr_bps#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "1481": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "b_zeros%0#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "override_farm_apr_bps#0"
      ]
    },
    "1483": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "override_farm_apr_bps#0",
        "b_zeros%0#0"
      ]
    },
    "1485": {
      "op": "b|",
      "defined_out": [
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%18#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ]
    },
    "1486": {
      "op": "uncover 12",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%20#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%18#0"
      ]
    },
    "1488": {
      "op": "uncover 11",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%20#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%18#0",
        "tmp%23#0"
      ]
    },
    "1490": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%20#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%20#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1491": {
      "op": "uncover 11",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%2#0",
        "tmp%20#0"
      ]
    },
    "1493": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1494": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%3#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%3#0",
        "0x0000000000000000"
      ]
    },
    "1496": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1497": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%3#0"
      ]
    },
    "1499": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%24#0",
        "tmp%28#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1500": {
      "op": "uncover 9",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%28#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%5#0",
        "tmp%24#0"
      ]
    },
    "1502": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%28#0",
        "val_as_bytes%5#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1503": {
      "op": "uncover 7",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%28#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%5#0"
      ]
    },
    "1505": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%28#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%28#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1506": {
      "op": "uncover 7",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%7#0",
        "tmp%28#0"
      ]
    },
    "1508": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "val_as_bytes%7#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "1509": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%8#0",
        "val_as_bytes%7#0"
      ]
    },
    "1511": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "1512": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%9#0",
        "tmp%32#0"
      ]
    },
    "1514": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "1515": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%10#0",
        "tmp%33#0"
      ]
    },
    "1517": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "1518": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%11#0",
        "tmp%34#0"
      ]
    },
    "1520": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%35#0",
        "tmp%36#0",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "1521": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%36#0",
        "encoded_tuple_buffer%12#0",
        "tmp%35#0"
      ]
    },
    "1523": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%13#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "tmp%36#0",
        "encoded_tuple_buffer%13#0"
      ]
    },
    "1524": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "encoded_tuple_buffer%13#0",
        "tmp%36#0"
      ]
    },
    "1525": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%14#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "staked#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "encoded_tuple_buffer%14#0"
      ]
    },
    "1526": {
      "op": "frame_bury 0"
    },
    "1528": {
      "retsub": true,
      "op": "retsub"
    },
    "1529": {
      "block": "project_apr_ternary_false@13",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "override_farm_amount_algo#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "override_farm_amount_algo#0"
      ]
    },
    "1530": {
      "op": "b project_apr_ternary_merge@14"
    },
    "1533": {
      "block": "project_apr_ternary_false@10",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "farm_amount_algo#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "farm_amount_algo#0"
      ]
    },
    "1534": {
      "op": "frame_bury 2",
      "defined_out": [
        "farm_amount_algo#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ]
    },
    "1536": {
      "op": "b project_apr_ternary_merge@11"
    },
    "1539": {
      "block": "project_apr_bool_false@5",
      "stack_in": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_amount#0",
        "farm_amount_algo#0",
        "exists2#0",
        "tm2_app_id#0",
        "exists3#0",
        "tm2_lp_addr#0",
        "exists4#0",
        "staked#0",
        "cond#0"
      ]
    },
    "1540": {
      "op": "b project_apr_bool_merge@6"
    },
    "1543": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost",
      "params": {
        "recipient_app#0": "uint64",
        "farm_asset#0": "uint64",
        "duration_blocks#0": "uint64"
      },
      "block": "calculate_algo_cost",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1546": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1548": {
      "op": "frame_dig -2",
      "defined_out": [
        "farm_asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_asset#0 (copy)"
      ]
    },
    "1550": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1552": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1554": {
      "op": "bz calculate_algo_cost_ternary_false@2",
      "stack_out": []
    },
    "1557": {
      "op": "intc_1 // 0"
    },
    "1558": {
      "block": "calculate_algo_cost_ternary_merge@3",
      "stack_in": [
        "optin_mbr#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "optin_mbr#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1560": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "tmp%3#0"
      ]
    },
    "1561": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1562": {
      "op": "bury 1",
      "stack_out": [
        "optin_mbr#0",
        "maybe_exists%0#0"
      ]
    },
    "1564": {
      "op": "pushint 18500 // 18500",
      "defined_out": [
        "18500",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "maybe_exists%0#0",
        "18500"
      ]
    },
    "1568": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "18500",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "maybe_exists%0#0",
        "18500",
        "0"
      ]
    },
    "1569": {
      "op": "uncover 2",
      "stack_out": [
        "optin_mbr#0",
        "18500",
        "0",
        "maybe_exists%0#0"
      ]
    },
    "1571": {
      "op": "select",
      "defined_out": [
        "box_mbr#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0"
      ]
    },
    "1572": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block",
      "op": "callsub get_ix_rewards_per_block",
      "defined_out": [
        "box_mbr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "tmp%5#0"
      ]
    },
    "1575": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_mbr#0",
        "duration_blocks#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "tmp%5#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "1577": {
      "op": "*",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0"
      ]
    },
    "1578": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block",
      "op": "callsub get_txn_fee_per_block",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "tmp%6#0"
      ]
    },
    "1581": {
      "op": "frame_dig -1",
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "tmp%6#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "1583": {
      "op": "*",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0"
      ]
    },
    "1584": {
      "op": "intc_1 // 0",
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "0"
      ]
    },
    "1585": {
      "op": "bytec 10 // \"plat_fee_pb\"",
      "defined_out": [
        "\"plat_fee_pb\"",
        "0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "0",
        "\"plat_fee_pb\""
      ]
    },
    "1587": {
      "op": "app_global_get_ex",
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1588": {
      "error": "check self.plat_fee_pb exists",
      "op": "assert // check self.plat_fee_pb exists",
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "maybe_value%0#0"
      ]
    },
    "1589": {
      "op": "global MinTxnFee",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "maybe_value%0#0",
        "tmp%0#1",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ]
    },
    "1591": {
      "op": "*",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "tmp%1#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "tmp%1#0"
      ]
    },
    "1592": {
      "op": "frame_dig -1",
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "tmp%1#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "1594": {
      "op": "*",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "platform_cost#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0"
      ]
    },
    "1595": {
      "op": "dig 2",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "ix_cost#0 (copy)",
        "platform_cost#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "ix_cost#0 (copy)"
      ]
    },
    "1597": {
      "op": "dig 2",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "ix_cost#0 (copy)",
        "platform_cost#0",
        "txn_fee_cost#0",
        "txn_fee_cost#0 (copy)"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "ix_cost#0 (copy)",
        "txn_fee_cost#0 (copy)"
      ]
    },
    "1599": {
      "op": "+",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "platform_cost#0",
        "tmp%8#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "tmp%8#0"
      ]
    },
    "1600": {
      "op": "dig 1",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "platform_cost#0",
        "platform_cost#0 (copy)",
        "tmp%8#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "tmp%8#0",
        "platform_cost#0 (copy)"
      ]
    },
    "1602": {
      "op": "+",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "platform_cost#0",
        "total_cost#0",
        "txn_fee_cost#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "total_cost#0"
      ]
    },
    "1603": {
      "op": "itob",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "platform_cost#0",
        "txn_fee_cost#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "optin_mbr#0",
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "val_as_bytes%0#0"
      ]
    },
    "1604": {
      "op": "uncover 5",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "optin_mbr#0",
        "platform_cost#0",
        "txn_fee_cost#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "val_as_bytes%0#0",
        "optin_mbr#0"
      ]
    },
    "1606": {
      "op": "itob",
      "defined_out": [
        "box_mbr#0",
        "ix_cost#0",
        "platform_cost#0",
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "box_mbr#0",
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1607": {
      "op": "uncover 5",
      "stack_out": [
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "box_mbr#0"
      ]
    },
    "1609": {
      "op": "itob",
      "defined_out": [
        "ix_cost#0",
        "platform_cost#0",
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "ix_cost#0",
        "txn_fee_cost#0",
        "platform_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "1610": {
      "op": "uncover 3",
      "stack_out": [
        "ix_cost#0",
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "platform_cost#0"
      ]
    },
    "1612": {
      "op": "itob",
      "defined_out": [
        "ix_cost#0",
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "ix_cost#0",
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1613": {
      "op": "uncover 5",
      "stack_out": [
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "ix_cost#0"
      ]
    },
    "1615": {
      "op": "itob",
      "defined_out": [
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "txn_fee_cost#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "1616": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "txn_fee_cost#0"
      ]
    },
    "1618": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "1619": {
      "op": "uncover 5"
    },
    "1621": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1623": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1624": {
      "op": "uncover 4",
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "1626": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1627": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "1629": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1630": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%4#0"
      ]
    },
    "1632": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1633": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%5#0"
      ]
    },
    "1634": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1635": {
      "retsub": true,
      "op": "retsub"
    },
    "1636": {
      "block": "calculate_algo_cost_ternary_false@2",
      "stack_in": [],
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "optin_mbr#0"
      ],
      "stack_out": [
        "optin_mbr#0"
      ]
    },
    "1638": {
      "op": "b calculate_algo_cost_ternary_merge@3"
    },
    "1641": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost",
      "params": {
        "recipient_app#0": "uint64",
        "farm_asset#0": "uint64",
        "duration_blocks#0": "uint64"
      },
      "block": "get_algo_cost",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1644": {
      "op": "frame_dig -3",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "1646": {
      "op": "frame_dig -2",
      "defined_out": [
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)"
      ]
    },
    "1648": {
      "op": "frame_dig -1",
      "defined_out": [
        "duration_blocks#0 (copy)",
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)",
        "duration_blocks#0 (copy)"
      ]
    },
    "1650": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost",
      "op": "callsub calculate_algo_cost",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1653": {
      "retsub": true,
      "op": "retsub"
    },
    "1654": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration",
      "params": {
        "recipient_app#0": "uint64",
        "farm_asset#0": "uint64",
        "duration_blocks#0": "uint64"
      },
      "block": "get_algo_cost_and_max_duration",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1657": {
      "op": "frame_dig -3",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "1659": {
      "op": "frame_dig -2",
      "defined_out": [
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)"
      ]
    },
    "1661": {
      "op": "frame_dig -1",
      "defined_out": [
        "duration_blocks#0 (copy)",
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)",
        "duration_blocks#0 (copy)"
      ]
    },
    "1663": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost",
      "op": "callsub calculate_algo_cost",
      "defined_out": [
        "cost#0"
      ],
      "stack_out": [
        "cost#0"
      ]
    },
    "1666": {
      "op": "dup",
      "defined_out": [
        "cost#0",
        "cost#0 (copy)"
      ],
      "stack_out": [
        "cost#0",
        "cost#0 (copy)"
      ]
    },
    "1667": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "cost#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "cost#0",
        "tmp%0#0"
      ]
    },
    "1670": {
      "op": "dig 1",
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "cost#0 (copy)"
      ]
    },
    "1672": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1675": {
      "op": "dig 2",
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "cost#0 (copy)"
      ]
    },
    "1677": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1680": {
      "op": "dig 3",
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "cost#0 (copy)"
      ]
    },
    "1682": {
      "error": "Index access is out of bounds",
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1685": {
      "op": "dig 4",
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "cost#0 (copy)"
      ]
    },
    "1687": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "cost#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1690": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "cost#0"
      ]
    },
    "1692": {
      "error": "Index access is out of bounds",
      "op": "extract 40 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1695": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1697": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration",
      "op": "callsub get_max_duration",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "to_encode%0#0"
      ]
    },
    "1700": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ]
    },
    "1701": {
      "op": "uncover 6"
    },
    "1703": {
      "op": "uncover 6",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1705": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1706": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ]
    },
    "1708": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1709": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%3#0",
        "tmp%3#0"
      ]
    },
    "1711": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1712": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%4#0",
        "tmp%4#0"
      ]
    },
    "1714": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "1715": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%5#0",
        "tmp%5#0"
      ]
    },
    "1717": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "1718": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "1719": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%7#0"
      ]
    },
    "1720": {
      "retsub": true,
      "op": "retsub"
    },
    "1721": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration",
      "params": {
        "recipient_app#0": "uint64"
      },
      "block": "get_max_duration",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1724": {
      "op": "frame_dig -1",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "1726": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "1728": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "1729": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "check%1#0"
      ]
    },
    "1731": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%1#0"
      ]
    },
    "1732": {
      "op": "itob",
      "defined_out": [
        "ds_balance#0"
      ],
      "stack_out": [
        "ds_balance#0"
      ]
    },
    "1733": {
      "op": "online_stake",
      "defined_out": [
        "ds_balance#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "tmp%0#0"
      ]
    },
    "1734": {
      "op": "itob",
      "defined_out": [
        "ds_balance#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0"
      ]
    },
    "1735": {
      "op": "pushint 500 // 500",
      "defined_out": [
        "500",
        "ds_balance#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0",
        "500"
      ]
    },
    "1738": {
      "callsub": "smart_contracts.common.round_time.get_round_time",
      "op": "callsub get_round_time",
      "defined_out": [
        "ds_balance#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0"
      ]
    },
    "1741": {
      "op": "pushint 3888000 // 3888000",
      "defined_out": [
        "3888000",
        "ds_balance#0",
        "rt_fraction.dr#0",
        "rt_fraction.dt#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0",
        "rt_fraction.dt#0",
        "rt_fraction.dr#0",
        "3888000"
      ]
    },
    "1746": {
      "op": "*",
      "defined_out": [
        "ds_balance#0",
        "rt_fraction.dt#0",
        "tmp%2#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0",
        "rt_fraction.dt#0",
        "tmp%2#0"
      ]
    },
    "1747": {
      "op": "swap",
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0",
        "tmp%2#0",
        "rt_fraction.dt#0"
      ]
    },
    "1748": {
      "op": "/",
      "defined_out": [
        "ds_balance#0",
        "tmp%3#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0",
        "tmp%3#0"
      ]
    },
    "1749": {
      "op": "itob",
      "defined_out": [
        "blocks_produced#0",
        "ds_balance#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "ds_balance#0",
        "total_online_stake#0",
        "blocks_produced#0"
      ]
    },
    "1750": {
      "op": "uncover 2",
      "stack_out": [
        "total_online_stake#0",
        "blocks_produced#0",
        "ds_balance#0"
      ]
    },
    "1752": {
      "op": "b*",
      "defined_out": [
        "tmp%4#0",
        "total_online_stake#0"
      ],
      "stack_out": [
        "total_online_stake#0",
        "tmp%4#0"
      ]
    },
    "1753": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "total_online_stake#0"
      ]
    },
    "1754": {
      "op": "b/",
      "defined_out": [
        "max_duration#0"
      ],
      "stack_out": [
        "max_duration#0"
      ]
    },
    "1755": {
      "op": "btoi",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "b#0"
      ]
    },
    "1756": {
      "op": "intc_3 // 30",
      "defined_out": [
        "30",
        "b#0"
      ],
      "stack_out": [
        "b#0",
        "30"
      ]
    },
    "1757": {
      "op": "dig 1",
      "defined_out": [
        "30",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "b#0",
        "30",
        "b#0 (copy)"
      ]
    },
    "1759": {
      "op": ">",
      "defined_out": [
        "b#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "b#0",
        "tmp%0#1"
      ]
    },
    "1760": {
      "op": "intc_3 // 30"
    },
    "1761": {
      "op": "swap",
      "stack_out": [
        "b#0",
        "30",
        "tmp%0#1"
      ]
    },
    "1762": {
      "op": "select",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1763": {
      "retsub": true,
      "op": "retsub"
    },
    "1764": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration",
      "params": {
        "recipient_app#0": "uint64",
        "duration_blocks#0": "uint64"
      },
      "block": "validate_duration",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1767": {
      "op": "frame_dig -2",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "1769": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration",
      "op": "callsub get_max_duration",
      "defined_out": [
        "allowed_duration#0"
      ],
      "stack_out": [
        "allowed_duration#0"
      ]
    },
    "1772": {
      "op": "dup",
      "defined_out": [
        "allowed_duration#0"
      ],
      "stack_out": [
        "allowed_duration#0",
        "allowed_duration#0"
      ]
    },
    "1773": {
      "op": "frame_dig -1",
      "defined_out": [
        "allowed_duration#0",
        "duration_blocks#0 (copy)"
      ],
      "stack_out": [
        "allowed_duration#0",
        "allowed_duration#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "1775": {
      "op": "<",
      "defined_out": [
        "allowed_duration#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "allowed_duration#0",
        "tmp%0#0"
      ]
    },
    "1776": {
      "op": "bz validate_duration_after_if_else@2",
      "stack_out": [
        "allowed_duration#0"
      ]
    },
    "1779": {
      "op": "frame_dig 0"
    },
    "1781": {
      "op": "itob"
    },
    "1782": {
      "op": "log"
    },
    "1783": {
      "op": "pushbytes \"ERR:DURATION\""
    },
    "1797": {
      "op": "log"
    },
    "1798": {
      "op": "err"
    },
    "1799": {
      "block": "validate_duration_after_if_else@2",
      "stack_in": [
        "allowed_duration#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1800": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm",
      "params": {
        "recipient_app#0": "uint64",
        "farm_asset#0": "uint64",
        "amount_per_block#0": "uint64",
        "duration_blocks#0": "uint64"
      },
      "block": "create_farm",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "1803": {
      "op": "frame_dig -4",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "1805": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1806": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1807": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1808": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1810": {
      "op": "bz create_farm_after_if_else@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1813": {
      "op": "pushbytes \"ERR:EXISTS\""
    },
    "1825": {
      "op": "log"
    },
    "1826": {
      "op": "err"
    },
    "1827": {
      "block": "create_farm_after_if_else@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "1829": {
      "op": "bnz create_farm_after_if_else@11",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1832": {
      "op": "pushbytes \"ERR:NO PAY\""
    },
    "1844": {
      "op": "log"
    },
    "1845": {
      "op": "err"
    },
    "1846": {
      "block": "create_farm_after_if_else@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "1848": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "1"
      ]
    },
    "1849": {
      "op": "-",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "1850": {
      "op": "frame_dig -4",
      "defined_out": [
        "recipient_app#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1852": {
      "op": "frame_dig -3",
      "defined_out": [
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0",
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)"
      ]
    },
    "1854": {
      "op": "frame_dig -1",
      "defined_out": [
        "duration_blocks#0 (copy)",
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0",
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)",
        "duration_blocks#0 (copy)"
      ]
    },
    "1856": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost",
      "op": "callsub calculate_algo_cost",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1859": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1862": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "1863": {
      "callsub": "smart_contracts.common.validate.payment_amount_exact",
      "op": "callsub payment_amount_exact",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1866": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "1868": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0",
        "1"
      ]
    },
    "1869": {
      "op": "+",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "1870": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount_per_block#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "amount_per_block#0 (copy)"
      ]
    },
    "1872": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "amount_per_block#0 (copy)",
        "duration_blocks#0 (copy)"
      ]
    },
    "1874": {
      "op": "*",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1875": {
      "op": "frame_dig -3"
    },
    "1877": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "farm_asset#0 (copy)",
        "tmp%12#0"
      ]
    },
    "1878": {
      "callsub": "smart_contracts.common.validate.axfer_amount_exact",
      "op": "callsub axfer_amount_exact",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1881": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%0#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1883": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "recipient_app#0 (copy)",
        "duration_blocks#0 (copy)"
      ]
    },
    "1885": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration",
      "op": "callsub validate_duration",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1888": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%0#0",
        "recipient_app#0 (copy)"
      ]
    },
    "1890": {
      "op": "bytec 12 // 0x6173615f6964",
      "defined_out": [
        "0x6173615f6964",
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "recipient_app#0 (copy)",
        "0x6173615f6964"
      ]
    },
    "1892": {
      "op": "app_global_get_ex",
      "defined_out": [
        "exists#0",
        "recipient_asa_id#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "recipient_asa_id#0",
        "exists#0"
      ]
    },
    "1893": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "recipient_asa_id#0"
      ]
    },
    "1894": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%0#0",
        "recipient_asa_id#0",
        "farm_asset#0 (copy)"
      ]
    },
    "1896": {
      "op": "==",
      "defined_out": [
        "cond#2"
      ],
      "stack_out": [
        "tmp%0#0",
        "cond#2"
      ]
    },
    "1897": {
      "op": "bnz create_farm_after_if_else@15",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1900": {
      "op": "pushbytes \"ERR:APP ASA\""
    },
    "1913": {
      "op": "log"
    },
    "1914": {
      "op": "err"
    },
    "1915": {
      "block": "create_farm_after_if_else@15",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "1917": {
      "op": "frame_dig -3",
      "defined_out": [
        "farm_asset#0 (copy)",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0",
        "farm_asset#0 (copy)"
      ]
    },
    "1919": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1921": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "1923": {
      "op": "bnz create_farm_after_if_else@2",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1926": {
      "op": "frame_dig -3"
    },
    "1928": {
      "op": "global CurrentApplicationAddress"
    },
    "1930": {
      "op": "intc_1 // 0"
    },
    "1931": {
      "op": "dup"
    },
    "1932": {
      "callsub": "smart_contracts.common.send.axfer",
      "op": "callsub axfer"
    },
    "1935": {
      "block": "create_farm_after_if_else@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "farm_asset#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "farm_asset#0 (copy)"
      ]
    },
    "1937": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1938": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount_per_block#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "amount_per_block#0 (copy)"
      ]
    },
    "1940": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1941": {
      "op": "frame_dig -1",
      "defined_out": [
        "duration_blocks#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "1943": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "1944": {
      "op": "global Round",
      "defined_out": [
        "tmp%17#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%17#0"
      ]
    },
    "1946": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%17#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "tmp%17#0",
        "1"
      ]
    },
    "1947": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "to_encode%0#0"
      ]
    },
    "1948": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "1949": {
      "op": "uncover 3"
    },
    "1951": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1953": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1954": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "1956": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1957": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "1958": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1959": {
      "op": "frame_dig 0",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_tuple_buffer%4#0",
        "tmp%0#0"
      ]
    },
    "1961": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1962": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1963": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1964": {
      "op": "bytec_1 // \"txn_fuel\"",
      "defined_out": [
        "\"txn_fuel\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"txn_fuel\""
      ]
    },
    "1965": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1966": {
      "error": "check self.txn_fuel exists",
      "op": "assert // check self.txn_fuel exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "1967": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block",
      "op": "callsub get_txn_fee_per_block",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%0#2"
      ]
    },
    "1970": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block",
      "op": "callsub get_ix_rewards_per_block",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%0#2",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%0#2",
        "tmp%1#0"
      ]
    },
    "1973": {
      "op": "+",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%2#1"
      ]
    },
    "1974": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%2#1",
        "duration_blocks#0 (copy)"
      ]
    },
    "1976": {
      "op": "*",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%21#0"
      ]
    },
    "1977": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "new_state_value%0#0"
      ]
    },
    "1978": {
      "op": "bytec_1 // \"txn_fuel\"",
      "stack_out": [
        "tmp%0#0",
        "new_state_value%0#0",
        "\"txn_fuel\""
      ]
    },
    "1979": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "\"txn_fuel\"",
        "new_state_value%0#0"
      ]
    },
    "1980": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1981": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1982": {
      "op": "bytec_0 // \"global_remaining_blocks\"",
      "defined_out": [
        "\"global_remaining_blocks\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"global_remaining_blocks\""
      ]
    },
    "1983": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1984": {
      "error": "check self.global_remaining_blocks exists",
      "op": "assert // check self.global_remaining_blocks exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0"
      ]
    },
    "1985": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "1987": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "new_state_value%1#0"
      ]
    },
    "1988": {
      "op": "bytec_0 // \"global_remaining_blocks\"",
      "stack_out": [
        "tmp%0#0",
        "new_state_value%1#0",
        "\"global_remaining_blocks\""
      ]
    },
    "1989": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "\"global_remaining_blocks\"",
        "new_state_value%1#0"
      ]
    },
    "1990": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1991": {
      "retsub": true,
      "op": "retsub"
    },
    "1992": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks",
      "params": {
        "recipient_app#0": "uint64",
        "duration_blocks#0": "uint64"
      },
      "block": "extend_duration_blocks",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1995": {
      "op": "frame_dig -2",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "1997": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1998": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1999": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "2000": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "cond#0"
      ]
    },
    "2002": {
      "op": "bnz extend_duration_blocks_after_if_else@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2005": {
      "op": "bytec 6 // \"ERR:NO FARM\""
    },
    "2007": {
      "op": "log"
    },
    "2008": {
      "op": "err"
    },
    "2009": {
      "block": "extend_duration_blocks_after_if_else@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2011": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2012": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "maybe_exists%1#0"
      ]
    },
    "2013": {
      "error": "check self.farms entry exists",
      "op": "assert // check self.farms entry exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2014": {
      "op": "dup",
      "defined_out": [
        "state#0",
        "state#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "state#0 (copy)"
      ]
    },
    "2015": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%4#0"
      ]
    },
    "2018": {
      "op": "btoi",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0"
      ]
    },
    "2019": {
      "op": "txn GroupIndex",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%5#0"
      ]
    },
    "2021": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%5#0",
        "1"
      ]
    },
    "2022": {
      "op": "-",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0"
      ]
    },
    "2023": {
      "op": "frame_dig -2",
      "defined_out": [
        "farm_asset#0",
        "recipient_app#0 (copy)",
        "state#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "recipient_app#0 (copy)"
      ]
    },
    "2025": {
      "op": "dig 2",
      "defined_out": [
        "farm_asset#0",
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)",
        "state#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)"
      ]
    },
    "2027": {
      "op": "frame_dig -1",
      "defined_out": [
        "duration_blocks#0 (copy)",
        "farm_asset#0",
        "farm_asset#0 (copy)",
        "recipient_app#0 (copy)",
        "state#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "recipient_app#0 (copy)",
        "farm_asset#0 (copy)",
        "duration_blocks#0 (copy)"
      ]
    },
    "2029": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost",
      "op": "callsub calculate_algo_cost",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2032": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2035": {
      "op": "btoi",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "2036": {
      "callsub": "smart_contracts.common.validate.payment_amount_exact",
      "op": "callsub payment_amount_exact",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0"
      ]
    },
    "2039": {
      "op": "txn GroupIndex",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%10#0"
      ]
    },
    "2041": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%10#0",
        "1"
      ]
    },
    "2042": {
      "op": "+",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%11#0"
      ]
    },
    "2043": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%11#0",
        "state#0 (copy)"
      ]
    },
    "2045": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2048": {
      "op": "btoi",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2049": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%11#0",
        "tmp%13#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "2051": {
      "op": "*",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "2052": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%14#0",
        "tmp%11#0"
      ]
    },
    "2053": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%11#0",
        "farm_asset#0",
        "tmp%14#0"
      ]
    },
    "2055": {
      "callsub": "smart_contracts.common.validate.axfer_amount_exact",
      "op": "callsub axfer_amount_exact",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2058": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "state#0 (copy)"
      ]
    },
    "2059": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%15#0"
      ]
    },
    "2062": {
      "op": "btoi",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%16#0"
      ]
    },
    "2063": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%16#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "2065": {
      "op": "+",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%17#0"
      ]
    },
    "2066": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%17#0",
        "recipient_app#0 (copy)"
      ]
    },
    "2068": {
      "op": "dig 1",
      "defined_out": [
        "recipient_app#0 (copy)",
        "state#0",
        "tmp%0#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%17#0",
        "recipient_app#0 (copy)",
        "tmp%17#0 (copy)"
      ]
    },
    "2070": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration",
      "op": "callsub validate_duration",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%17#0"
      ]
    },
    "2073": {
      "op": "itob",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "val_as_bytes%0#0"
      ]
    },
    "2074": {
      "op": "replace2 16",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2076": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2077": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2078": {
      "op": "bytec_1 // \"txn_fuel\"",
      "defined_out": [
        "\"txn_fuel\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"txn_fuel\""
      ]
    },
    "2079": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2080": {
      "error": "check self.txn_fuel exists",
      "op": "assert // check self.txn_fuel exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0"
      ]
    },
    "2081": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block",
      "op": "callsub get_txn_fee_per_block",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "tmp%0#1"
      ]
    },
    "2084": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block",
      "op": "callsub get_ix_rewards_per_block",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "tmp%0#1",
        "tmp%1#0"
      ]
    },
    "2087": {
      "op": "+",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ]
    },
    "2088": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "tmp%2#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "2090": {
      "op": "*",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%2#0",
        "tmp%23#0"
      ]
    },
    "2091": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "new_state_value%0#0"
      ]
    },
    "2092": {
      "op": "bytec_1 // \"txn_fuel\"",
      "stack_out": [
        "tmp%0#0",
        "new_state_value%0#0",
        "\"txn_fuel\""
      ]
    },
    "2093": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "\"txn_fuel\"",
        "new_state_value%0#0"
      ]
    },
    "2094": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2095": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2096": {
      "op": "bytec_0 // \"global_remaining_blocks\"",
      "defined_out": [
        "\"global_remaining_blocks\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"global_remaining_blocks\""
      ]
    },
    "2097": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2098": {
      "error": "check self.global_remaining_blocks exists",
      "op": "assert // check self.global_remaining_blocks exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%3#0"
      ]
    },
    "2099": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%3#0",
        "duration_blocks#0 (copy)"
      ]
    },
    "2101": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "new_state_value%1#0"
      ]
    },
    "2102": {
      "op": "bytec_0 // \"global_remaining_blocks\"",
      "stack_out": [
        "tmp%0#0",
        "new_state_value%1#0",
        "\"global_remaining_blocks\""
      ]
    },
    "2103": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "\"global_remaining_blocks\"",
        "new_state_value%1#0"
      ]
    },
    "2104": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2105": {
      "retsub": true,
      "op": "retsub"
    },
    "2106": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block",
      "params": {
        "recipient_app#0": "uint64",
        "amount_per_block#0": "uint64"
      },
      "block": "extend_amount_per_block",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2109": {
      "op": "frame_dig -2",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "2111": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2112": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2113": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "2114": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "cond#0"
      ]
    },
    "2116": {
      "op": "bnz extend_amount_per_block_after_if_else@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2119": {
      "op": "bytec 6 // \"ERR:NO FARM\""
    },
    "2121": {
      "op": "log"
    },
    "2122": {
      "op": "err"
    },
    "2123": {
      "block": "extend_amount_per_block_after_if_else@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2125": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2126": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "maybe_exists%1#0"
      ]
    },
    "2127": {
      "error": "check self.farms entry exists",
      "op": "assert // check self.farms entry exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2128": {
      "op": "dup",
      "defined_out": [
        "state#0",
        "state#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "state#0 (copy)"
      ]
    },
    "2129": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%4#0"
      ]
    },
    "2132": {
      "op": "btoi",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0"
      ]
    },
    "2133": {
      "op": "txn GroupIndex",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%5#0"
      ]
    },
    "2135": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%5#0",
        "1"
      ]
    },
    "2136": {
      "op": "+",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0"
      ]
    },
    "2137": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "state#0 (copy)"
      ]
    },
    "2139": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2142": {
      "op": "btoi",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2143": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount_per_block#0 (copy)",
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "tmp%8#0",
        "amount_per_block#0 (copy)"
      ]
    },
    "2145": {
      "op": "*",
      "defined_out": [
        "farm_asset#0",
        "state#0",
        "tmp%0#0",
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "2146": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "farm_asset#0",
        "tmp%9#0",
        "tmp%6#0"
      ]
    },
    "2147": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%6#0",
        "farm_asset#0",
        "tmp%9#0"
      ]
    },
    "2149": {
      "callsub": "smart_contracts.common.validate.axfer_amount_exact",
      "op": "callsub axfer_amount_exact",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2152": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "state#0 (copy)"
      ]
    },
    "2153": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%10#0"
      ]
    },
    "2156": {
      "op": "btoi",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%11#0"
      ]
    },
    "2157": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "tmp%11#0",
        "amount_per_block#0 (copy)"
      ]
    },
    "2159": {
      "op": "+",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "to_encode%0#0"
      ]
    },
    "2160": {
      "op": "itob",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0",
        "val_as_bytes%0#0"
      ]
    },
    "2161": {
      "op": "replace2 8",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2163": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2164": {
      "retsub": true,
      "op": "retsub"
    },
    "2165": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.payout",
      "params": {
        "recipient_app#0": "uint64",
        "block_round#0": "uint64",
        "call_swap#0": "bytes"
      },
      "block": "payout",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2168": {
      "op": "intc_1 // 0",
      "stack_out": [
        "state#0"
      ]
    },
    "2169": {
      "op": "dup",
      "stack_out": [
        "state#0",
        "tmp%7#0"
      ]
    },
    "2170": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ]
    },
    "2171": {
      "op": "frame_dig -3",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "recipient_app#0 (copy)"
      ]
    },
    "2173": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2174": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2175": {
      "op": "box_len",
      "defined_out": [
        "cond#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_value%0#0",
        "cond#0"
      ]
    },
    "2176": {
      "op": "bury 1",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "cond#0"
      ]
    },
    "2178": {
      "op": "bnz payout_after_if_else@19",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2181": {
      "op": "bytec 6 // \"ERR:NO FARM\""
    },
    "2183": {
      "op": "log"
    },
    "2184": {
      "op": "err"
    },
    "2185": {
      "block": "payout_after_if_else@19",
      "stack_in": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2187": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "maybe_exists%1#0"
      ]
    },
    "2188": {
      "op": "swap",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_exists%1#0",
        "state#0"
      ]
    },
    "2189": {
      "op": "dup",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_exists%1#0",
        "state#0",
        "state#0 (copy)"
      ]
    },
    "2190": {
      "op": "cover 2",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "maybe_exists%1#0",
        "state#0"
      ]
    },
    "2192": {
      "op": "frame_bury 0",
      "defined_out": [
        "maybe_exists%1#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "maybe_exists%1#0"
      ]
    },
    "2194": {
      "error": "check self.farms entry exists",
      "op": "assert // check self.farms entry exists",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2195": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2198": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "reinterpret_biguint%0#0",
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "2200": {
      "op": "b==",
      "defined_out": [
        "state#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "2201": {
      "op": "bz payout_after_if_else@2",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2204": {
      "op": "frame_dig 3"
    },
    "2206": {
      "op": "box_del"
    },
    "2207": {
      "op": "pop"
    },
    "2208": {
      "op": "pushbytes \"expired\""
    },
    "2217": {
      "op": "log"
    },
    "2218": {
      "retsub": true,
      "op": "retsub"
    },
    "2219": {
      "block": "payout_after_if_else@2",
      "stack_in": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "state#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2221": {
      "error": "Index access is out of bounds",
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "state#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "2224": {
      "op": "frame_dig -2",
      "defined_out": [
        "block_round#0 (copy)",
        "reinterpret_biguint%2#0",
        "state#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%2#0",
        "block_round#0 (copy)"
      ]
    },
    "2226": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "state#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%2#0",
        "tmp%7#0"
      ]
    },
    "2227": {
      "op": "dup",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%2#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "2228": {
      "op": "frame_bury 1",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "state#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%2#0",
        "tmp%7#0"
      ]
    },
    "2230": {
      "op": "b<",
      "defined_out": [
        "cond#0",
        "state#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "cond#0"
      ]
    },
    "2231": {
      "op": "bnz payout_after_if_else@11",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2234": {
      "op": "pushbytes \"ERR:PAST\""
    },
    "2244": {
      "op": "log"
    },
    "2245": {
      "op": "err"
    },
    "2246": {
      "block": "payout_after_if_else@11",
      "stack_in": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "block_round#0 (copy)"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "block_round#0 (copy)"
      ]
    },
    "2248": {
      "op": "block BlkProposer",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "2250": {
      "op": "frame_dig -3",
      "defined_out": [
        "recipient_app#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%9#0",
        "recipient_app#0 (copy)"
      ]
    },
    "2252": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "tmp%9#0",
        "value%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%9#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2254": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%9#0",
        "value%0#0"
      ]
    },
    "2255": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "cond#0"
      ]
    },
    "2256": {
      "op": "bnz payout_after_if_else@15",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2259": {
      "op": "pushbytes \"ERR:NOT BLK PROP\""
    },
    "2277": {
      "op": "log"
    },
    "2278": {
      "op": "err"
    },
    "2279": {
      "block": "payout_after_if_else@15",
      "stack_in": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "call_swap#0 (copy)"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "call_swap#0 (copy)"
      ]
    },
    "2281": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "call_swap#0 (copy)"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "call_swap#0 (copy)",
        "0x00"
      ]
    },
    "2284": {
      "op": "!=",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "2285": {
      "op": "bz payout_after_if_else@5",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2288": {
      "op": "itxn_begin"
    },
    "2289": {
      "op": "global MinTxnFee"
    },
    "2291": {
      "op": "frame_dig -3"
    },
    "2293": {
      "op": "itxn_field ApplicationID"
    },
    "2295": {
      "op": "pushbytes 0x93239802 // method \"swap_or_fail()void\""
    },
    "2301": {
      "op": "itxn_field ApplicationArgs"
    },
    "2303": {
      "op": "pushint 6 // appl"
    },
    "2305": {
      "op": "itxn_field TypeEnum"
    },
    "2307": {
      "op": "itxn_field Fee"
    },
    "2309": {
      "op": "itxn_submit"
    },
    "2310": {
      "block": "payout_after_if_else@5",
      "stack_in": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ],
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "2312": {
      "op": "frame_dig 0",
      "defined_out": [
        "state#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0"
      ]
    },
    "2314": {
      "op": "dup",
      "defined_out": [
        "state#0",
        "state#0 (copy)",
        "tmp%12#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "state#0 (copy)"
      ]
    },
    "2315": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "state#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%13#0"
      ]
    },
    "2318": {
      "op": "btoi",
      "defined_out": [
        "state#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0"
      ]
    },
    "2319": {
      "op": "frame_dig -3",
      "defined_out": [
        "recipient_app#0 (copy)",
        "state#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0",
        "recipient_app#0 (copy)"
      ]
    },
    "2321": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "state#0",
        "tmp%12#0",
        "tmp%14#0",
        "value%1#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2323": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0",
        "value%1#0"
      ]
    },
    "2324": {
      "op": "dig 2",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0",
        "value%1#0",
        "state#0 (copy)"
      ]
    },
    "2326": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "state#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "value%1#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0",
        "value%1#0",
        "tmp%15#0"
      ]
    },
    "2329": {
      "op": "btoi",
      "defined_out": [
        "state#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0",
        "value%1#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0",
        "value%1#0",
        "tmp%16#0"
      ]
    },
    "2330": {
      "op": "global MinTxnFee",
      "defined_out": [
        "state#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%16#0",
        "tmp%17#0",
        "value%1#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%14#0",
        "value%1#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "2332": {
      "callsub": "smart_contracts.common.send.axfer",
      "op": "callsub axfer",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0"
      ]
    },
    "2335": {
      "op": "global MinTxnFee",
      "defined_out": [
        "state#0",
        "tmp%12#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%12#0",
        "state#0",
        "tmp%18#0"
      ]
    },
    "2337": {
      "op": "uncover 2",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "tmp%18#0",
        "tmp%12#0"
      ]
    },
    "2339": {
      "op": "+",
      "defined_out": [
        "state#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "txn_fuel_spent#3"
      ]
    },
    "2340": {
      "op": "txn Sender",
      "defined_out": [
        "state#0",
        "tmp%19#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "txn_fuel_spent#3",
        "tmp%19#0"
      ]
    },
    "2342": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block",
      "op": "callsub get_ix_rewards_per_block",
      "defined_out": [
        "state#0",
        "tmp%19#0",
        "tmp%20#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "txn_fuel_spent#3",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "2345": {
      "op": "global MinTxnFee",
      "defined_out": [
        "state#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "txn_fuel_spent#3",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "2347": {
      "callsub": "smart_contracts.common.send.algo_pay",
      "op": "callsub algo_pay",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "txn_fuel_spent#3"
      ]
    },
    "2350": {
      "op": "global MinTxnFee",
      "defined_out": [
        "state#0",
        "tmp%22#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "txn_fuel_spent#3",
        "tmp%22#0"
      ]
    },
    "2352": {
      "op": "+",
      "defined_out": [
        "state#0",
        "tmp%23#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "tmp%23#0"
      ]
    },
    "2353": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block",
      "op": "callsub get_ix_rewards_per_block",
      "defined_out": [
        "state#0",
        "tmp%23#0",
        "tmp%24#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "2356": {
      "op": "+",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "txn_fuel_spent#3"
      ]
    },
    "2357": {
      "op": "frame_bury 2",
      "defined_out": [
        "state#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2359": {
      "op": "frame_dig 1",
      "defined_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "tmp%7#0"
      ]
    },
    "2361": {
      "op": "replace2 24",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2363": {
      "op": "dup",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "state#0 (copy)"
      ]
    },
    "2364": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "state#0",
        "tmp%25#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "tmp%25#0"
      ]
    },
    "2367": {
      "op": "btoi",
      "defined_out": [
        "state#0",
        "tmp%26#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "tmp%26#0"
      ]
    },
    "2368": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "state#0",
        "tmp%26#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "tmp%26#0",
        "1"
      ]
    },
    "2369": {
      "op": "-",
      "defined_out": [
        "state#0",
        "tmp%7#0",
        "to_encode%0#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "to_encode%0#0"
      ]
    },
    "2370": {
      "op": "itob",
      "defined_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "val_as_bytes%1#0"
      ]
    },
    "2371": {
      "op": "replace2 16",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2373": {
      "op": "dup",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0",
        "state#0"
      ]
    },
    "2374": {
      "op": "frame_bury 0",
      "defined_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2376": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%3#0",
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%3#0"
      ]
    },
    "2379": {
      "op": "bytec 5 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "reinterpret_biguint%3#0",
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "reinterpret_biguint%3#0",
        "0x0000000000000000"
      ]
    },
    "2381": {
      "op": "b==",
      "defined_out": [
        "state#0",
        "tmp%27#0",
        "tmp%7#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%27#0"
      ]
    },
    "2382": {
      "op": "bz payout_else_body@7",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2385": {
      "op": "frame_dig 3"
    },
    "2387": {
      "op": "box_del"
    },
    "2388": {
      "op": "pop"
    },
    "2389": {
      "block": "payout_after_if_else@8",
      "stack_in": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "0"
      ]
    },
    "2390": {
      "op": "bytec_1 // \"txn_fuel\"",
      "defined_out": [
        "\"txn_fuel\"",
        "0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "0",
        "\"txn_fuel\""
      ]
    },
    "2391": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2392": {
      "error": "check self.txn_fuel exists",
      "op": "assert // check self.txn_fuel exists",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_value%2#0"
      ]
    },
    "2393": {
      "op": "frame_dig 2",
      "defined_out": [
        "maybe_value%2#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_value%2#0",
        "txn_fuel_spent#3"
      ]
    },
    "2395": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "new_state_value%0#0"
      ]
    },
    "2396": {
      "op": "bytec_1 // \"txn_fuel\"",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "new_state_value%0#0",
        "\"txn_fuel\""
      ]
    },
    "2397": {
      "op": "swap",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "\"txn_fuel\"",
        "new_state_value%0#0"
      ]
    },
    "2398": {
      "op": "app_global_put",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2399": {
      "op": "intc_1 // 0",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "0"
      ]
    },
    "2400": {
      "op": "bytec_0 // \"global_remaining_blocks\"",
      "defined_out": [
        "\"global_remaining_blocks\"",
        "0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "0",
        "\"global_remaining_blocks\""
      ]
    },
    "2401": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2402": {
      "error": "check self.global_remaining_blocks exists",
      "op": "assert // check self.global_remaining_blocks exists",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_value%3#0"
      ]
    },
    "2403": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "2404": {
      "op": "-",
      "defined_out": [
        "new_state_value%1#0",
        "txn_fuel_spent#3"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "new_state_value%1#0"
      ]
    },
    "2405": {
      "op": "bytec_0 // \"global_remaining_blocks\"",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "new_state_value%1#0",
        "\"global_remaining_blocks\""
      ]
    },
    "2406": {
      "op": "swap",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "\"global_remaining_blocks\"",
        "new_state_value%1#0"
      ]
    },
    "2407": {
      "op": "app_global_put",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2408": {
      "retsub": true,
      "op": "retsub"
    },
    "2409": {
      "block": "payout_else_body@7",
      "stack_in": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2411": {
      "op": "frame_dig 0",
      "defined_out": [
        "state#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0",
        "tmp%0#0",
        "state#0"
      ]
    },
    "2413": {
      "op": "box_put",
      "stack_out": [
        "state#0",
        "tmp%7#0",
        "txn_fuel_spent#3",
        "tmp%0#0"
      ]
    },
    "2414": {
      "op": "b payout_after_if_else@8"
    },
    "2417": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees",
      "params": {
        "amount#0": "uint64"
      },
      "block": "withdraw_fees",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2420": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller",
      "op": "callsub ensure_manager_caller"
    },
    "2423": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2425": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2427": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2428": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "0"
      ]
    },
    "2429": {
      "op": "bytec_0 // \"global_remaining_blocks\"",
      "defined_out": [
        "\"global_remaining_blocks\"",
        "0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "0",
        "\"global_remaining_blocks\""
      ]
    },
    "2430": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2431": {
      "error": "check self.global_remaining_blocks exists",
      "op": "assert // check self.global_remaining_blocks exists",
      "stack_out": [
        "value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2432": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block",
      "op": "callsub get_txn_fee_per_block",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#1",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "maybe_value%0#0",
        "tmp%0#1"
      ]
    },
    "2435": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block",
      "op": "callsub get_ix_rewards_per_block",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#1",
        "tmp%1#1",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "maybe_value%0#0",
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "2438": {
      "op": "+",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "2439": {
      "op": "*",
      "stack_out": [
        "value%0#0",
        "tmp%2#0"
      ]
    },
    "2440": {
      "op": "+",
      "defined_out": [
        "locked_balance#0"
      ],
      "stack_out": [
        "locked_balance#0"
      ]
    },
    "2441": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "locked_balance#0"
      ],
      "stack_out": [
        "locked_balance#0",
        "amount#0 (copy)"
      ]
    },
    "2443": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2444": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2446": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%1#0",
        "tmp%3#0",
        "value%1#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2448": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "tmp%3#0",
        "value%1#0"
      ]
    },
    "2449": {
      "op": "<=",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "2450": {
      "op": "bnz withdraw_fees_after_if_else@5",
      "stack_out": []
    },
    "2453": {
      "op": "pushbytes \"ERR:OVER\""
    },
    "2463": {
      "op": "log"
    },
    "2464": {
      "op": "err"
    },
    "2465": {
      "block": "withdraw_fees_after_if_else@5",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2467": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "amount#0 (copy)"
      ]
    },
    "2469": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "amount#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "amount#0 (copy)",
        "0"
      ]
    },
    "2470": {
      "callsub": "smart_contracts.common.send.algo_pay",
      "op": "callsub algo_pay",
      "stack_out": []
    },
    "2473": {
      "retsub": true,
      "op": "retsub"
    },
    "2474": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.optout",
      "params": {
        "asset#0": "uint64"
      },
      "block": "optout",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2477": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller",
      "op": "callsub ensure_manager_caller"
    },
    "2480": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2482": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "2484": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "cond#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "cond#0"
      ]
    },
    "2486": {
      "op": "bury 1",
      "stack_out": [
        "cond#0"
      ]
    },
    "2488": {
      "op": "bnz optout_after_if_else@3",
      "stack_out": []
    },
    "2491": {
      "op": "pushbytes \"ERR:NOT OPTED\""
    },
    "2506": {
      "op": "log"
    },
    "2507": {
      "op": "err"
    },
    "2508": {
      "block": "optout_after_if_else@3",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2510": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "asset#0 (copy)"
      ]
    },
    "2512": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "2514": {
      "error": "account opted into asset",
      "op": "assert // account opted into asset",
      "stack_out": [
        "value%0#0"
      ]
    },
    "2515": {
      "op": "bz optout_after_if_else@7",
      "stack_out": []
    },
    "2518": {
      "op": "pushbytes \"ERR:BALANCE\""
    },
    "2531": {
      "op": "log"
    },
    "2532": {
      "op": "err"
    },
    "2533": {
      "block": "optout_after_if_else@7",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2534": {
      "op": "bytec 4 // \"manager\"",
      "defined_out": [
        "\"manager\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"manager\""
      ]
    },
    "2536": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "receiver#0"
      ],
      "stack_out": [
        "receiver#0",
        "maybe_exists%0#0"
      ]
    },
    "2537": {
      "error": "check self.manager exists",
      "op": "assert // check self.manager exists",
      "stack_out": [
        "receiver#0"
      ]
    },
    "2538": {
      "op": "itxn_begin"
    },
    "2539": {
      "op": "dup",
      "defined_out": [
        "receiver#0",
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0",
        "receiver#0 (copy)"
      ]
    },
    "2540": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "receiver#0"
      ]
    },
    "2542": {
      "op": "intc_1 // 0",
      "stack_out": [
        "receiver#0",
        "0"
      ]
    },
    "2543": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "receiver#0"
      ]
    },
    "2545": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "2547": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "2549": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "2551": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "2553": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2555": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2556": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2558": {
      "op": "itxn_submit"
    },
    "2559": {
      "retsub": true,
      "op": "retsub"
    },
    "2560": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days",
      "params": {
        "max_duration#0": "uint64"
      },
      "block": "update_max_duration_days",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2563": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller",
      "op": "callsub ensure_manager_caller"
    },
    "2566": {
      "op": "bytec 7 // \"max_duration_days\"",
      "defined_out": [
        "\"max_duration_days\""
      ],
      "stack_out": [
        "\"max_duration_days\""
      ]
    },
    "2568": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"max_duration_days\"",
        "max_duration#0 (copy)"
      ],
      "stack_out": [
        "\"max_duration_days\"",
        "max_duration#0 (copy)"
      ]
    },
    "2570": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2571": {
      "retsub": true,
      "op": "retsub"
    },
    "2572": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks",
      "params": {
        "min_duration#0": "uint64"
      },
      "block": "update_min_duration_blocks",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2575": {
      "callsub": "smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller",
      "op": "callsub ensure_manager_caller"
    },
    "2578": {
      "op": "bytec 8 // \"min_duration_blocks\"",
      "defined_out": [
        "\"min_duration_blocks\""
      ],
      "stack_out": [
        "\"min_duration_blocks\""
      ]
    },
    "2580": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"min_duration_blocks\"",
        "min_duration#0 (copy)"
      ],
      "stack_out": [
        "\"min_duration_blocks\"",
        "min_duration#0 (copy)"
      ]
    },
    "2582": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2583": {
      "retsub": true,
      "op": "retsub"
    },
    "2584": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state",
      "params": {
        "recipient_app#0": "uint64"
      },
      "block": "get_state",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2587": {
      "op": "frame_dig -1",
      "defined_out": [
        "recipient_app#0 (copy)"
      ],
      "stack_out": [
        "recipient_app#0 (copy)"
      ]
    },
    "2589": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2590": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2591": {
      "error": "check self.farms entry exists",
      "op": "assert // check self.farms entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2592": {
      "retsub": true,
      "op": "retsub"
    },
    "2593": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states",
      "params": {
        "box_names#0": "bytes"
      },
      "block": "log_states",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2596": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2597": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_names#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "box_names#0 (copy)"
      ]
    },
    "2599": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_names#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "box_names#0 (copy)",
        "0"
      ]
    },
    "2600": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "2601": {
      "op": "intc_1 // 0",
      "defined_out": [
        "k#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ]
    },
    "2602": {
      "block": "log_states_for_header@1",
      "stack_in": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "k#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0",
        "k#0"
      ]
    },
    "2604": {
      "op": "frame_dig 1",
      "defined_out": [
        "k#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0",
        "k#0",
        "tmp%0#0"
      ]
    },
    "2606": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "k#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0",
        "continue_looping%0#0"
      ]
    },
    "2607": {
      "op": "bz log_states_after_for@7",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ]
    },
    "2610": {
      "op": "frame_dig -1"
    },
    "2612": {
      "op": "extract 2 0"
    },
    "2615": {
      "op": "frame_dig 2"
    },
    "2617": {
      "op": "intc_2 // 8"
    },
    "2618": {
      "op": "*"
    },
    "2619": {
      "op": "intc_2 // 8"
    },
    "2620": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds"
    },
    "2621": {
      "op": "btoi"
    },
    "2622": {
      "op": "itob"
    },
    "2623": {
      "op": "dup"
    },
    "2624": {
      "op": "frame_bury 0"
    },
    "2626": {
      "op": "box_len"
    },
    "2627": {
      "op": "bury 1"
    },
    "2629": {
      "op": "bz log_states_else_body@4"
    },
    "2632": {
      "op": "frame_dig 0"
    },
    "2634": {
      "op": "box_get"
    },
    "2635": {
      "error": "check self.farms entry exists",
      "op": "assert // check self.farms entry exists"
    },
    "2636": {
      "op": "log"
    },
    "2637": {
      "block": "log_states_after_if_else@5",
      "stack_in": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "k#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0",
        "k#0"
      ]
    },
    "2639": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "k#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0",
        "k#0",
        "1"
      ]
    },
    "2640": {
      "op": "+",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0",
        "k#0"
      ]
    },
    "2641": {
      "op": "frame_bury 2",
      "defined_out": [
        "k#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ]
    },
    "2643": {
      "op": "b log_states_for_header@1"
    },
    "2646": {
      "block": "log_states_else_body@4",
      "stack_in": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ],
      "op": "bytec_3 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0",
        "0x"
      ]
    },
    "2647": {
      "op": "log",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ]
    },
    "2648": {
      "op": "b log_states_after_if_else@5"
    },
    "2651": {
      "block": "log_states_after_for@7",
      "stack_in": [
        "tmp%2#0",
        "tmp%0#0",
        "k#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2652": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers",
      "params": {
        "start_round#0": "uint64",
        "end_round#0": "uint64"
      },
      "block": "log_block_proposers",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2655": {
      "op": "frame_dig -1",
      "defined_out": [
        "end_round#0 (copy)"
      ],
      "stack_out": [
        "end_round#0 (copy)"
      ]
    },
    "2657": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "end_round#0 (copy)"
      ],
      "stack_out": [
        "end_round#0 (copy)",
        "1"
      ]
    },
    "2658": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2659": {
      "op": "frame_dig -2",
      "defined_out": [
        "rnd#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "rnd#1"
      ]
    },
    "2661": {
      "block": "log_block_proposers_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "rnd#1"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "rnd#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "rnd#1",
        "rnd#1"
      ]
    },
    "2663": {
      "op": "frame_dig 0",
      "defined_out": [
        "rnd#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "rnd#1",
        "rnd#1",
        "tmp%0#0"
      ]
    },
    "2665": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "rnd#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "rnd#1",
        "continue_looping%0#0"
      ]
    },
    "2666": {
      "op": "bz log_block_proposers_after_for@4",
      "stack_out": [
        "tmp%0#0",
        "rnd#1"
      ]
    },
    "2669": {
      "op": "frame_dig 1"
    },
    "2671": {
      "op": "dup"
    },
    "2672": {
      "op": "block BlkProposer"
    },
    "2674": {
      "op": "log"
    },
    "2675": {
      "op": "intc_0 // 1"
    },
    "2676": {
      "op": "+"
    },
    "2677": {
      "op": "frame_bury 1"
    },
    "2679": {
      "op": "b log_block_proposers_for_header@1"
    },
    "2682": {
      "block": "log_block_proposers_after_for@4",
      "stack_in": [
        "tmp%0#0",
        "rnd#1"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2683": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller",
      "params": {},
      "block": "ensure_manager_caller",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2686": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2688": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2689": {
      "op": "bytec 4 // \"manager\"",
      "defined_out": [
        "\"manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"manager\""
      ]
    },
    "2691": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2692": {
      "error": "check self.manager exists",
      "op": "assert // check self.manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2693": {
      "op": "==",
      "defined_out": [
        "cond#0"
      ],
      "stack_out": [
        "cond#0"
      ]
    },
    "2694": {
      "op": "bnz ensure_manager_caller_after_if_else@3",
      "stack_out": []
    },
    "2697": {
      "op": "pushbytes \"ERR:UNAUTH\""
    },
    "2709": {
      "op": "log"
    },
    "2710": {
      "op": "err"
    },
    "2711": {
      "block": "ensure_manager_caller_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "2712": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block",
      "params": {},
      "block": "get_ix_rewards_per_block",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2715": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2716": {
      "op": "bytec 9 // \"ix_pb\"",
      "defined_out": [
        "\"ix_pb\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"ix_pb\""
      ]
    },
    "2718": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2719": {
      "error": "check self.ix_pb exists",
      "op": "assert // check self.ix_pb exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2720": {
      "op": "global MinTxnFee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "2722": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2723": {
      "retsub": true,
      "op": "retsub"
    },
    "2724": {
      "subroutine": "smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block",
      "params": {},
      "block": "get_txn_fee_per_block",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "2727": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2728": {
      "op": "bytec 11 // \"txn_fee_pb\"",
      "defined_out": [
        "\"txn_fee_pb\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"txn_fee_pb\""
      ]
    },
    "2730": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2731": {
      "error": "check self.txn_fee_pb exists",
      "op": "assert // check self.txn_fee_pb exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2732": {
      "op": "global MinTxnFee",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "2734": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2735": {
      "retsub": true,
      "op": "retsub"
    }
  }
}