Version prompt disabled
Running 'poetry run puyapy --version' in '/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts'
poetry: puyapy 4.3.3
Running 'poetry run puyapy /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/smart_contracts/dualstakefarm/contract.py --log-level debug' in '/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts'
poetry: debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=False, output_memory_ir=False, output_bytecode=False, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/smart_contracts/dualstakefarm/contract.py'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
poetry: info: Found python prefix: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv
poetry: debug: Using python executable: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/bin/python3
poetry: debug: Using python site-packages: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages
poetry: debug: Found algopy: 2.6.0
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/sys/__init__.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/builtins.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_collections_abc.pyi
poetry: debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_typeshed/__init__.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing_extensions.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/types.pyi
poetry: debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/abc.pyi
poetry: debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/__init__.pyi
poetry: debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/abc.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_template_variables.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_hints.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_primitives.pyi
poetry: debug: Discovered user module smart_contracts at smart_contracts/__init__.py
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_contract.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_box.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/gtxn.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/itxn.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_state.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_unsigned_builtins.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_util.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_transaction.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_reference.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/arc4.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_logic_sig.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/__init__.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/op.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_compiled.pyi
poetry: debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_constants.pyi
poetry: debug: Discovered user module smart_contracts.common.send at smart_contracts/common/send.py
poetry: debug: Discovered user module smart_contracts.common.math at smart_contracts/common/math.py
poetry: debug: Discovered user module smart_contracts.common.custom at smart_contracts/common/custom.py
poetry: debug: Discovered user module smart_contracts.common.validate at smart_contracts/common/validate.py
poetry: debug: Discovered user module smart_contracts.common.round_time at smart_contracts/common/round_time.py
poetry: debug: Discovered user module smart_contracts.dualstakefarm.contract at smart_contracts/dualstakefarm/contract.py
poetry: debug: Building AWST for module smart_contracts
poetry: debug: Building AWST for module smart_contracts.common.send
poetry: debug: Building AWST for module smart_contracts.common.math
poetry: debug: Building AWST for module smart_contracts.common.custom
poetry: debug: Building AWST for module smart_contracts.common.validate
poetry: debug: Building AWST for module smart_contracts.common.round_time
poetry: debug: Building AWST for module smart_contracts.dualstakefarm.contract
poetry: debug: Building IR for function _puya_lib.util.ensure_budget
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@1
poetry: debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
poetry: debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
poetry: debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
poetry: debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
poetry: debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
poetry: debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
poetry: debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
poetry: debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
poetry: debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
poetry: debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
poetry: debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
poetry: debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
poetry: debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
poetry: debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
poetry: debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Building IR for function _puya_lib.bytes_.is_substring
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
poetry: debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
poetry: debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@1
poetry: debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
poetry: debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
poetry: debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
poetry: debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
poetry: debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
poetry: debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
poetry: debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
poetry: debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
poetry: debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
poetry: debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
poetry: debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
poetry: debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
poetry: debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
poetry: debug: Sealing block@4
poetry: debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
poetry: debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
poetry: debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
poetry: debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
poetry: debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
poetry: debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
poetry: debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
poetry: debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
poetry: debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
poetry: debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
poetry: debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
poetry: debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
poetry: debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
poetry: debug: Terminated block@4
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
poetry: debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
poetry: debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
poetry: debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
poetry: debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
poetry: debug: Terminated block@2
poetry: debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
poetry: debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
poetry: debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
poetry: debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
poetry: debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
poetry: debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
poetry: debug: Terminated block@4
poetry: debug: Sealing block@3
poetry: debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
poetry: debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
poetry: debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
poetry: debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
poetry: debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
poetry: debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
poetry: debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
poetry: debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
poetry: debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
poetry: debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
poetry: debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
poetry: debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
poetry: debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
poetry: debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
poetry: debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
poetry: debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
poetry: debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
poetry: debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
poetry: debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
poetry: debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
poetry: debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
poetry: debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
poetry: debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
poetry: debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
poetry: debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
poetry: debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
poetry: debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
poetry: debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
poetry: debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
poetry: debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
poetry: debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
poetry: debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
poetry: debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
poetry: debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
poetry: debug: Sealing block@4
poetry: debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
poetry: debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
poetry: debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
poetry: debug: Terminated block@4
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
poetry: debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
poetry: debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
poetry: debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@5
poetry: debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
poetry: debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
poetry: debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
poetry: debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
poetry: debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
poetry: debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
poetry: debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
poetry: debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
poetry: debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
poetry: debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
poetry: debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
poetry: debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
poetry: debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
poetry: debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
poetry: debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
poetry: debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
poetry: debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
poetry: debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
poetry: debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
poetry: debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
poetry: debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
poetry: debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
poetry: debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
poetry: debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
poetry: debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
poetry: debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
poetry: debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
poetry: debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
poetry: debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
poetry: debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
poetry: debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
poetry: debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
poetry: debug: Terminated block@8
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
poetry: debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
poetry: debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
poetry: debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
poetry: debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
poetry: debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
poetry: debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
poetry: debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
poetry: debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
poetry: debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
poetry: debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
poetry: debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
poetry: debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
poetry: debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
poetry: debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
poetry: debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Building IR for function smart_contracts.common.send.optin
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.send.send
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Building IR for function smart_contracts.common.send.axfer
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.send.axfer_closeout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.send.algo_pay
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.send.algo_closeout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Building IR for function smart_contracts.common.math.max
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.math.safe_subtract
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
poetry: debug: Terminated block@3
poetry: debug: Building IR for function smart_contracts.common.custom.ensure
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.common.validate.asset
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.axfer
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.payment
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.payment_amount_min
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.validate.payment_amount_exact
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.common.round_time.get_round_time
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@2
poetry: debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
poetry: debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0
poetry: debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let first_accessible#1: uint64 = undefined while trying to resolve 'first_accessible' in block@2
poetry: debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0) in block@0
poetry: debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0
poetry: debug: Deleting Phi assignment: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0 in current definition for 1 blocks
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.common.round_time.get_block_rewards
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'rnd_delta' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let rnd_delta#1: uint64 = undefined while trying to resolve 'rnd_delta' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'last_accessible' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Looking for 'num_payouts' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let num_payouts#1: uint64 = undefined while trying to resolve 'num_payouts' in block@1
poetry: debug: Looking for 'sum_payouts' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let sum_payouts#1: uint64 = undefined while trying to resolve 'sum_payouts' in block@1
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@1
poetry: debug: Added rnd_delta#0 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0) in block@0
poetry: debug: Added rnd_delta#2 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0, rnd_delta#2 <- block@5) in block@5
poetry: debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let last_accessible#2: uint64 = undefined while trying to resolve 'last_accessible' in block@4
poetry: debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2) in block@2
poetry: debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1
poetry: debug: Deleting Phi assignment: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1 in current definition for 1 blocks
poetry: debug: Added last_accessible#1 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0
poetry: debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0 in current definition for 5 blocks
poetry: debug: Added num_payouts#0 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let num_payouts#3: uint64 = undefined while trying to resolve 'num_payouts' in block@4
poetry: debug: Added num_payouts#1 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2) in block@2
poetry: debug: Added num_payouts#2 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2, num_payouts#2 <- block@3) in block@3
poetry: debug: Added num_payouts#3 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0, num_payouts#3 <- block@5) in block@5
poetry: debug: Added sum_payouts#0 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let sum_payouts#3: uint64 = undefined while trying to resolve 'sum_payouts' in block@4
poetry: debug: Added sum_payouts#1 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2) in block@2
poetry: debug: Added sum_payouts#2 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2, sum_payouts#2 <- block@3) in block@3
poetry: debug: Added sum_payouts#3 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0, sum_payouts#3 <- block@5) in block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let bonus#1: uint64 = undefined while trying to resolve 'bonus' in block@1
poetry: debug: Added bonus#0 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let bonus#2: uint64 = undefined while trying to resolve 'bonus' in block@4
poetry: debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2) in block@2
poetry: debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1
poetry: debug: Deleting Phi assignment: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3)
poetry: debug: Replaced trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1 in current definition for 1 blocks
poetry: debug: Added bonus#1 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0
poetry: debug: Deleting Phi assignment: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5)
poetry: debug: Replaced trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0 in current definition for 5 blocks
poetry: debug: Terminated block@8
poetry: debug: Sealing block@9
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@9
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7) in block@7
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7, ternary_result%0#1 <- block@8) in block@8
poetry: debug: Terminated block@9
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: Sealing block@0
poetry: smart_contracts/dualstakefarm/contract.py:39:19 debug: encountered already materialized expression (tm2_lp_addr), reusing result: tm2_lp_addr#0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@5
poetry: debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@3) in block@3
poetry: debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@3, and_result%0#1 <- block@4) in block@4
poetry: debug: Created Phi assignment: let aid1#1: uint64 = undefined while trying to resolve 'aid1' in block@5
poetry: debug: Added aid1#0 to Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3) in block@3
poetry: debug: Created Phi assignment: let aid1#2: uint64 = undefined while trying to resolve 'aid1' in block@4
poetry: debug: Added aid1#0 to Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0) in block@0
poetry: debug: Added aid1#0 to Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1) in block@1
poetry: debug: Added aid1#0 to Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2) (aid1#2) with aid1#0
poetry: debug: Deleting Phi assignment: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2) (aid1#2) with aid1#0 in current definition for 1 blocks
poetry: debug: Added aid1#0 to Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4) (aid1#1) with aid1#0
poetry: debug: Deleting Phi assignment: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4) (aid1#1) with aid1#0 in current definition for 1 blocks
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Created Phi assignment: let a2#1: uint64 = undefined while trying to resolve 'a2' in block@5
poetry: debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@3) in block@3
poetry: debug: Created Phi assignment: let a2#2: uint64 = undefined while trying to resolve 'a2' in block@4
poetry: debug: Added a2#0 to Phi node: let a2#2: uint64 = φ(a2#0 <- block@0) in block@0
poetry: debug: Added a2#0 to Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1) in block@1
poetry: debug: Added a2#0 to Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2) (a2#2) with a2#0
poetry: debug: Deleting Phi assignment: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2) (a2#2) with a2#0 in current definition for 1 blocks
poetry: debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) (a2#1) with a2#0
poetry: debug: Deleting Phi assignment: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) (a2#1) with a2#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let a1#1: uint64 = undefined while trying to resolve 'a1' in block@5
poetry: debug: Added a1#0 to Phi node: let a1#1: uint64 = φ(a1#0 <- block@3) in block@3
poetry: debug: Created Phi assignment: let a1#2: uint64 = undefined while trying to resolve 'a1' in block@4
poetry: debug: Added a1#0 to Phi node: let a1#2: uint64 = φ(a1#0 <- block@0) in block@0
poetry: debug: Added a1#0 to Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1) in block@1
poetry: debug: Added a1#0 to Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2) (a1#2) with a1#0
poetry: debug: Deleting Phi assignment: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2) (a1#2) with a1#0 in current definition for 1 blocks
poetry: debug: Added a1#0 to Phi node: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4) (a1#1) with a1#0
poetry: debug: Deleting Phi assignment: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4) (a1#1) with a1#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let farm_amount#1: uint64 = undefined while trying to resolve 'farm_amount' in block@5
poetry: debug: Added farm_amount#0 to Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3) in block@3
poetry: debug: Created Phi assignment: let farm_amount#2: uint64 = undefined while trying to resolve 'farm_amount' in block@4
poetry: debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0) in block@0
poetry: debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1) in block@1
poetry: debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2) (farm_amount#2) with farm_amount#0
poetry: debug: Deleting Phi assignment: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2) (farm_amount#2) with farm_amount#0 in current definition for 1 blocks
poetry: debug: Added farm_amount#0 to Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4) (farm_amount#1) with farm_amount#0
poetry: debug: Deleting Phi assignment: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4) (farm_amount#1) with farm_amount#0 in current definition for 1 blocks
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Terminated block@8
poetry: debug: Sealing block@9
poetry: debug: Terminated block@9
poetry: debug: Sealing block@10
poetry: debug: Terminated block@10
poetry: debug: Sealing block@11
poetry: debug: Terminated block@11
poetry: debug: Sealing block@12
poetry: debug: Terminated block@12
poetry: debug: Sealing block@13
poetry: debug: Terminated block@13
poetry: debug: Sealing block@14
poetry: debug: Terminated block@14
poetry: debug: Sealing block@15
poetry: debug: Terminated block@15
poetry: debug: Sealing block@16
poetry: debug: Terminated block@16
poetry: debug: Sealing block@17
poetry: debug: Terminated block@17
poetry: debug: Sealing block@18
poetry: debug: Terminated block@18
poetry: debug: Sealing block@19
poetry: debug: Terminated block@19
poetry: debug: Sealing block@20
poetry: debug: Terminated block@20
poetry: debug: Sealing block@21
poetry: debug: Terminated block@21
poetry: debug: Sealing block@22
poetry: debug: Terminated block@22
poetry: debug: Sealing block@23
poetry: debug: Terminated block@23
poetry: debug: Sealing block@24
poetry: debug: Terminated block@24
poetry: debug: Sealing block@25
poetry: debug: Terminated block@25
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@6
poetry: debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4) in block@4
poetry: debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4, and_result%0#1 <- block@5) in block@5
poetry: debug: Created Phi assignment: let recipient_app_id#1: uint64 = undefined while trying to resolve 'recipient_app_id' in block@6
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let recipient_app_id#2: uint64 = undefined while trying to resolve 'recipient_app_id' in block@5
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0) in block@0
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1) in block@1
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2) in block@2
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0
poetry: debug: Deleting Phi assignment: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0 in current definition for 1 blocks
poetry: debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0
poetry: debug: Deleting Phi assignment: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0 in current definition for 1 blocks
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let farm_amount#2: uint64 = undefined while trying to resolve 'farm_amount' in block@8
poetry: debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6) in block@6
poetry: debug: Added farm_amount#1 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6, farm_amount#1 <- block@7) in block@7
poetry: debug: Terminated block@8
poetry: debug: Sealing block@9
poetry: debug: Created Phi assignment: let tm2_app_id#1: uint64 = undefined while trying to resolve 'tm2_app_id' in block@8
poetry: debug: Created Phi assignment: let tm2_app_id#2: uint64 = undefined while trying to resolve 'tm2_app_id' in block@6
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let tm2_app_id#3: uint64 = undefined while trying to resolve 'tm2_app_id' in block@5
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0) in block@0
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1) in block@1
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2) in block@2
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0
poetry: debug: Deleting Phi assignment: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0 in current definition for 1 blocks
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0
poetry: debug: Deleting Phi assignment: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0 in current definition for 1 blocks
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6) in block@6
poetry: debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0
poetry: debug: Deleting Phi assignment: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let tm2_lp_addr#1: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@8
poetry: debug: Created Phi assignment: let tm2_lp_addr#2: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@6
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let tm2_lp_addr#3: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@5
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0) in block@0
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1) in block@1
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2) in block@2
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0
poetry: debug: Deleting Phi assignment: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0 in current definition for 1 blocks
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0
poetry: debug: Deleting Phi assignment: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0 in current definition for 1 blocks
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6) in block@6
poetry: debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0
poetry: debug: Deleting Phi assignment: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0 in current definition for 1 blocks
poetry: debug: Terminated block@9
poetry: debug: Sealing block@10
poetry: debug: Terminated block@10
poetry: debug: Sealing block@11
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@11
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9) in block@9
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9, ternary_result%0#1 <- block@10) in block@10
poetry: debug: Created Phi assignment: let current_block_rewards#1: uint64 = undefined while trying to resolve 'current_block_rewards' in block@11
poetry: debug: Created Phi assignment: let current_block_rewards#2: uint64 = undefined while trying to resolve 'current_block_rewards' in block@8
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6) in block@6
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0
poetry: debug: Deleting Phi assignment: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0 in current definition for 1 blocks
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9) in block@9
poetry: debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0
poetry: debug: Deleting Phi assignment: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let own_yearly_blocks_produced#1: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@11
poetry: debug: Created Phi assignment: let own_yearly_blocks_produced#2: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@8
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6) in block@6
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0
poetry: debug: Deleting Phi assignment: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0 in current definition for 1 blocks
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9) in block@9
poetry: debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0
poetry: debug: Deleting Phi assignment: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let staked#1: uint64 = undefined while trying to resolve 'staked' in block@11
poetry: debug: Created Phi assignment: let staked#2: uint64 = undefined while trying to resolve 'staked' in block@8
poetry: debug: Created Phi assignment: let staked#3: uint64 = undefined while trying to resolve 'staked' in block@6
poetry: debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4) in block@4
poetry: debug: Created Phi assignment: let staked#4: uint64 = undefined while trying to resolve 'staked' in block@5
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0) in block@0
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1) in block@1
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2) in block@2
poetry: debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) in block@3
poetry: debug: Replacing trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0
poetry: debug: Deleting Phi assignment: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3)
poetry: debug: Replaced trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0 in current definition for 1 blocks
poetry: debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) in block@5
poetry: debug: Replacing trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0
poetry: debug: Deleting Phi assignment: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5)
poetry: debug: Replaced trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0 in current definition for 1 blocks
poetry: debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6) in block@6
poetry: debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0
poetry: debug: Deleting Phi assignment: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0 in current definition for 1 blocks
poetry: debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9) in block@9
poetry: debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0
poetry: debug: Deleting Phi assignment: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let balance#1: uint64 = undefined while trying to resolve 'balance' in block@11
poetry: debug: Created Phi assignment: let balance#2: uint64 = undefined while trying to resolve 'balance' in block@8
poetry: debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6) in block@6
poetry: debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0
poetry: debug: Deleting Phi assignment: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0 in current definition for 1 blocks
poetry: debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9) in block@9
poetry: debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0
poetry: debug: Deleting Phi assignment: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let current_avg_block_payout#1: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@11
poetry: debug: Created Phi assignment: let current_avg_block_payout#2: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@8
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6) in block@6
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0
poetry: debug: Deleting Phi assignment: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0 in current definition for 1 blocks
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9) in block@9
poetry: debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0
poetry: debug: Deleting Phi assignment: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let farm_amount#3: uint64 = undefined while trying to resolve 'farm_amount' in block@11
poetry: debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9) in block@9
poetry: debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2
poetry: debug: Deleting Phi assignment: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10)
poetry: debug: Replaced trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let avg_round_time#1: uint64 = undefined while trying to resolve 'avg_round_time' in block@11
poetry: debug: Created Phi assignment: let avg_round_time#2: uint64 = undefined while trying to resolve 'avg_round_time' in block@8
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6) in block@6
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0
poetry: debug: Deleting Phi assignment: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0 in current definition for 1 blocks
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9) in block@9
poetry: debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0
poetry: debug: Deleting Phi assignment: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let total_online_stake#1: biguint = undefined while trying to resolve 'total_online_stake' in block@11
poetry: debug: Created Phi assignment: let total_online_stake#2: biguint = undefined while trying to resolve 'total_online_stake' in block@8
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6) in block@6
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0
poetry: debug: Deleting Phi assignment: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7)
poetry: debug: Replaced trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0 in current definition for 1 blocks
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9) in block@9
poetry: debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) in block@10
poetry: debug: Replacing trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0
poetry: debug: Deleting Phi assignment: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10)
poetry: debug: Replaced trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0 in current definition for 1 blocks
poetry: debug: Terminated block@11
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
poetry: debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
poetry: debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
poetry: debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@3
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1) in block@1
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0
poetry: debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@3
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1) in block@1
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) in block@2
poetry: debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0
poetry: debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2)
poetry: debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
poetry: debug: Terminated block@3
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Created Phi assignment: let farm_asset#1: uint64 = undefined while trying to resolve 'farm_asset' in block@2
poetry: debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0) in block@0
poetry: debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0
poetry: debug: Deleting Phi assignment: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let amount_per_block#1: uint64 = undefined while trying to resolve 'amount_per_block' in block@2
poetry: debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0) in block@0
poetry: debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0
poetry: debug: Deleting Phi assignment: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@2
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0) in block@0
poetry: debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0
poetry: debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@2
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0) in block@0
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) in block@1
poetry: debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0
poetry: debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1)
poetry: debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
poetry: debug: Terminated block@2
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Created Phi assignment: let txn_fuel_spent#1: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@5
poetry: debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2) in block@2
poetry: debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0
poetry: debug: Deleting Phi assignment: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let state#1: bytes = undefined while trying to resolve 'state' in block@5
poetry: debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2) in block@2
poetry: debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0
poetry: debug: Deleting Phi assignment: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@5
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2) in block@2
poetry: debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0
poetry: debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
poetry: debug: Created Phi assignment: let block_round#1: uint64 = undefined while trying to resolve 'block_round' in block@5
poetry: debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2) in block@2
poetry: debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0
poetry: debug: Deleting Phi assignment: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4)
poetry: debug: Replaced trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0 in current definition for 1 blocks
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Sealing block@8
poetry: debug: Created Phi assignment: let txn_fuel_spent#5: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@8
poetry: debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6) in block@6
poetry: debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) in block@7
poetry: debug: Replacing trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4
poetry: debug: Deleting Phi assignment: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7)
poetry: debug: Replaced trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4 in current definition for 1 blocks
poetry: debug: Terminated block@8
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'k' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let k#1: uint64 = undefined while trying to resolve 'k' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Looking for 'box_names' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let box_names#1: bytes = undefined while trying to resolve 'box_names' in block@1
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Sealing block@5
poetry: debug: Terminated block@5
poetry: debug: Sealing block@6
poetry: debug: Terminated block@6
poetry: debug: Sealing block@1
poetry: debug: Added k#0 to Phi node: let k#1: uint64 = φ(k#0 <- block@0) in block@0
poetry: debug: Added k#2 to Phi node: let k#1: uint64 = φ(k#0 <- block@0, k#2 <- block@6) in block@6
poetry: debug: Added box_names#0 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0) in block@0
poetry: debug: Created Phi assignment: let box_names#2: bytes = undefined while trying to resolve 'box_names' in block@5
poetry: debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3) in block@3
poetry: debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) in block@4
poetry: debug: Replacing trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1
poetry: debug: Deleting Phi assignment: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4)
poetry: debug: Replaced trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1 in current definition for 1 blocks
poetry: debug: Added box_names#1 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) in block@6
poetry: debug: Replacing trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0
poetry: debug: Deleting Phi assignment: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6)
poetry: debug: Replaced trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0 in current definition for 6 blocks
poetry: debug: Sealing block@7
poetry: debug: Terminated block@7
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
poetry: debug: Created Phi assignment: let rnd#1: uint64 = undefined while trying to resolve 'rnd' in block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: Sealing block@3
poetry: debug: Terminated block@3
poetry: debug: Sealing block@1
poetry: debug: Added rnd#0 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0) in block@0
poetry: debug: Added rnd#2 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0, rnd#2 <- block@3) in block@3
poetry: debug: Sealing block@4
poetry: debug: Terminated block@4
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: Sealing block@1
poetry: debug: Terminated block@1
poetry: debug: Sealing block@2
poetry: debug: Terminated block@2
poetry: debug: removing unused subroutine _puya_lib.util.ensure_budget
poetry: debug: removing unused subroutine _puya_lib.bytes_.is_substring
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
poetry: debug: removing unused subroutine smart_contracts.common.send.send
poetry: debug: removing unused subroutine smart_contracts.common.send.algo_closeout
poetry: debug: removing unused subroutine smart_contracts.common.validate.asset
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
poetry: debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Sealing block@0
poetry: debug: Terminated block@0
poetry: debug: removing unused subroutine _puya_lib.util.ensure_budget
poetry: debug: removing unused subroutine _puya_lib.bytes_.is_substring
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
poetry: debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
poetry: debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
poetry: debug: removing unused subroutine smart_contracts.common.send.optin
poetry: debug: removing unused subroutine smart_contracts.common.send.send
poetry: debug: removing unused subroutine smart_contracts.common.send.axfer
poetry: debug: removing unused subroutine smart_contracts.common.send.axfer_closeout
poetry: debug: removing unused subroutine smart_contracts.common.send.algo_pay
poetry: debug: removing unused subroutine smart_contracts.common.send.algo_closeout
poetry: debug: removing unused subroutine smart_contracts.common.math.max
poetry: debug: removing unused subroutine smart_contracts.common.math.safe_subtract
poetry: debug: removing unused subroutine smart_contracts.common.custom.ensure
poetry: debug: removing unused subroutine smart_contracts.common.validate.asset
poetry: debug: removing unused subroutine smart_contracts.common.validate.axfer
poetry: debug: removing unused subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: removing unused subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: removing unused subroutine smart_contracts.common.round_time.get_block_rewards
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
poetry: debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
poetry: info: optimizing approval program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 1
poetry: debug: Begin optimization pass 1/100
poetry: debug: marking single-use function smart_contracts.common.send.optin for inlining
poetry: debug: marking single-use function smart_contracts.common.send.axfer_closeout for inlining
poetry: debug: marking single-use function smart_contracts.common.math.max for inlining
poetry: debug: marking single-use function smart_contracts.common.validate.axfer for inlining
poetry: debug: marking single-use function smart_contracts.common.validate.payment for inlining
poetry: debug: marking single-use function smart_contracts.common.round_time.get_block_rewards for inlining
poetry: debug: marking single-use function smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset for inlining
poetry: debug: marking single-use function smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__ for inlining
poetry: debug: marking trivial method smart_contracts.dualstakefarm.contract.DualstakeFarm.noop as inlineable
poetry: debug: marking single-use function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block for inlining
poetry: debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: inlining call to algopy.arc4.ARC4Contract.approval_program in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__ in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%0#1, tmp%1#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@5 with block@1 in block@6
poetry: debug: Merged linear block@5 into block@1
poetry: debug: Replaced predecessor block@6 with block@1 in block@2
poetry: debug: Merged linear block@6 into block@1
poetry: debug: Replaced predecessor block@3 with block@2 in block@4
poetry: debug: Merged linear block@3 into block@2
poetry: debug: Merged linear block@4 into block@2
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.optin
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: fee#0, inner_txn_params%0%%param_Fee_idx_0#0
poetry: debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
poetry: debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_AssetReceiver_idx_0#0
poetry: debug: Found equivalence set: amount#0, inner_txn_params%0%%param_AssetAmount_idx_0#0
poetry: debug: Copy propagation made 4 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer_closeout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: fee#0, inner_txn_params%0%%param_Fee_idx_0#0
poetry: debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
poetry: debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_AssetReceiver_idx_0#0, inner_txn_params%0%%param_AssetCloseTo_idx_0#0
poetry: debug: Copy propagation made 4 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_AssetAmount_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.algo_pay
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: fee#0, inner_txn_params%0%%param_Fee_idx_0#0
poetry: debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_Receiver_idx_0#0
poetry: debug: Found equivalence set: amount#0, inner_txn_params%0%%param_Amount_idx_0#0
poetry: debug: Copy propagation made 3 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.math.max
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: default#0, ternary_result%0#1
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@2 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.custom.ensure
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: axfer_txn_idx#0, axfer_txn#0
poetry: debug: Copy propagation made 3 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/common/validate.py:31:9 debug: inlining call to smart_contracts.common.validate.axfer in smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: axfer_txn_id#0, axfer_txn_idx#0
poetry: debug: Found equivalence set: expected_asset#0, expected_asset#1
poetry: debug: Found equivalence set: tmp%5#0, tmp%0#0
poetry: debug: Copy propagation made 6 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Merged linear block@2 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: txn_idx#0, pay_txn#0
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/common/validate.py:52:19 debug: inlining call to smart_contracts.common.validate.payment in smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: payment_txn_idx#0, txn_idx#0
poetry: debug: Found equivalence set: tmp%3#0, tmp%0#0
poetry: debug: Copy propagation made 4 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Merged linear block@2 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_block_rewards
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: bonus#0, ternary_result%0#1
poetry: debug: Found equivalence set: ternary_result%0#2, avg_payout_or_bonus#0
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%3#0
poetry: debug: Removing unused variable tmp%5#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@5 with block@4 in block@1
poetry: debug: Merged linear block@5 into block@4
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@8 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Replacing redundant declaration let tmp%4#0: uint64 = ((block BlkProposerPayout) rnd#0) with copy of existing registers (Register(source_location=smart_contracts/common/round_time.py:48:11-44, ir_type=uint64, name='tmp%2', version=0),)
poetry: debug: Found equivalence set: tmp%2#0, tmp%4#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tm2_lp_addr#0, tma#0
poetry: debug: Found equivalence set: tm2_app_id#0, tm2#0
poetry: debug: Found equivalence set: tuple_assignment%0#0, aid1#0
poetry: debug: Found equivalence set: tuple_assignment%1#0, exists1#0
poetry: debug: Found equivalence set: tuple_assignment%2#0, a1#0
poetry: debug: Found equivalence set: tuple_assignment%3#0, exists2#0
poetry: debug: Found equivalence set: tuple_assignment%4#0, a2#0
poetry: debug: Found equivalence set: tuple_assignment%5#0, exists3#0
poetry: debug: Copy propagation made 12 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%2#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create in smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: smart_contracts/dualstakefarm/contract.py:473:6 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.noop in smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
poetry: debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
poetry: debug: Simplified (== tmp%26#0 NoOp) to (! tmp%26#0)
poetry: debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
poetry: debug: Simplified (== tmp%54#0 NoOp) to (! tmp%54#0)
poetry: debug: Simplified (== tmp%63#0 NoOp) to (! tmp%63#0)
poetry: debug: Simplified (== tmp%72#0 NoOp) to (! tmp%72#0)
poetry: debug: Simplified (== tmp%82#0 NoOp) to (! tmp%82#0)
poetry: debug: Simplified (== tmp%86#0 NoOp) to (! tmp%86#0)
poetry: debug: Simplified (== tmp%92#0 NoOp) to (! tmp%92#0)
poetry: debug: Simplified (== tmp%99#0 NoOp) to (! tmp%99#0)
poetry: debug: Simplified (== tmp%105#0 NoOp) to (! tmp%105#0)
poetry: debug: Simplified (== tmp%111#0 NoOp) to (! tmp%111#0)
poetry: debug: Simplified (== tmp%120#0 NoOp) to (! tmp%120#0)
poetry: debug: Simplified (== tmp%125#0 NoOp) to (! tmp%125#0)
poetry: debug: Simplified (== tmp%138#0 0u) to (! tmp%138#0)
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%1#0
poetry: debug: Removing unused variable tmp%6#0
poetry: debug: Removing unused variable tmp%15#0
poetry: debug: Removing unused variable tmp%29#0
poetry: debug: Removing unused variable tmp%43#0
poetry: debug: Removing unused variable tmp%57#0
poetry: debug: Removing unused variable tmp%66#0
poetry: debug: Removing unused variable tmp%75#0
poetry: debug: Removing unused variable tmp%85#0
poetry: debug: Removing unused variable tmp%89#0
poetry: debug: Removing unused variable tmp%95#0
poetry: debug: Removing unused variable tmp%102#0
poetry: debug: Removing unused variable tmp%108#0
poetry: debug: Removing unused variable tmp%114#0
poetry: debug: Removing unused variable tmp%123#0
poetry: debug: Removing unused variable tmp%128#0
poetry: debug: Removing unused variable tmp%135#0
poetry: debug: Removing unused variable tmp%137#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: simplifying a switch with constants into goto nth
poetry: debug: simplified terminator of block@19 from switch tmp%133#0 {4u => block@20, 5u => block@21, 0u => block@22, * => block@23} to goto_nth [block@22, block@23, block@23, block@23, block@20, block@21][tmp%133#0] else goto block@23
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@28 with block@9 in block@29
poetry: debug: Merged linear block@28 into block@9
poetry: debug: Merged linear block@29 into block@9
poetry: debug: Replaced predecessor block@18 with block@17 in block@25
poetry: debug: Merged linear block@18 into block@17
poetry: debug: Replaced predecessor block@26 with block@22 in block@27
poetry: debug: Merged linear block@26 into block@22
poetry: debug: Merged linear block@27 into block@22
poetry: debug: Replaced predecessor block@24 with block@23 in block@25
poetry: debug: Merged linear block@24 into block@23
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Removed empty block: block@17
poetry: debug: Removed empty block: block@23
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:179:13 debug: inlining call to smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: smart_contracts/dualstakefarm/contract.py:163:9 debug: inlining call to smart_contracts.common.round_time.get_block_rewards in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tuple_assignment%0#0, tm2_app_id#0, tm2_app_id#1
poetry: debug: Found equivalence set: tuple_assignment%1#0, exists2#0
poetry: debug: Found equivalence set: tuple_assignment%2#0, tm2_lp_addr#0, tm2_lp_addr#1
poetry: debug: Found equivalence set: tuple_assignment%3#0, exists3#0
poetry: debug: Found equivalence set: tuple_assignment%4#0, asa_id#0
poetry: debug: Found equivalence set: tuple_assignment%5#0, exists1#0
poetry: debug: Found equivalence set: tuple_assignment%6#0, staked#0
poetry: debug: Found equivalence set: tuple_assignment%7#0, exists4#0
poetry: debug: Found equivalence set: value%1#0, balance#0
poetry: debug: Found equivalence set: avg_payout_or_bonus#0, current_avg_block_payout#0
poetry: debug: Found equivalence set: farm_amount#2, farm_amount#3
poetry: debug: Found equivalence set: ternary_result%0#2, farm_amount_algo#0
poetry: debug: Copy propagation made 20 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (* 86400u 365u) to 31536000u
poetry: debug: Simplified (concat 0x tmp%9#0) to tmp%9#0
poetry: debug: Simplified (concat 0x tmp%11#0) to tmp%11#0
poetry: debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
poetry: debug: Simplified (extract3 maybe_value%1#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) maybe_value%1#0) // on error: Index access is out of bounds
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%4#0
poetry: debug: Removing unused variable tmp%10#0
poetry: debug: Removing unused variable tmp%12#0
poetry: debug: Removing unused variable tmp%14#0
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%1#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@21 with block@6 in block@22
poetry: debug: Merged linear block@21 into block@6
poetry: debug: Replaced predecessor block@30 with block@29 in block@8
poetry: debug: Replaced predecessor block@30 with block@29 in block@7
poetry: debug: Merged linear block@30 into block@29
poetry: debug: Replaced predecessor block@12 with block@9 in block@16
poetry: debug: Replaced predecessor block@12 with block@9 in block@13
poetry: debug: Merged linear block@12 into block@9
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@28 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Replacing redundant declaration let val_as_bytes%1#0: bytes = (itob staked#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:187:28-61, ir_type=biguint, name='tmp%19', version=0),)
poetry: debug: Replacing redundant declaration let b_zeros%1#0: bytes = (bzero 8u) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:197:25-56, ir_type=bytes, name='b_zeros%0', version=0),)
poetry: debug: Replacing redundant declaration let b_zeros%2#0: bytes = (bzero 8u) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:197:25-56, ir_type=bytes, name='b_zeros%0', version=0),)
poetry: debug: Replacing redundant declaration let tmp%11#0: bytes = (itob recipient_app_id#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:175:11-41, ir_type=bytes, name='tmp%9', version=0),)
poetry: debug: Replacing redundant declaration let val_as_bytes%0#0: bytes = (itob balance#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:172:12-51, ir_type=biguint, name='tmp%7', version=0),)
poetry: debug: Found equivalence set: tmp%9#0, tmp%11#0
poetry: debug: Found equivalence set: tmp%7#0, val_as_bytes%0#0
poetry: debug: Found equivalence set: tmp%19#0, val_as_bytes%1#0
poetry: debug: Found equivalence set: b_zeros%0#0, b_zeros%1#0, b_zeros%2#0
poetry: debug: Copy propagation made 5 modifications
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:217:25 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: ternary_result%0#2, optin_mbr#0
poetry: debug: Found equivalence set: tmp%1#1, tmp%7#0
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%3#0) to tmp%3#0
poetry: debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%4#0
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%1#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@4 with block@3 in block@5
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Merged linear block@5 into block@3
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
poetry: debug: Simplified (extract3 cost#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) cost#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 cost#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) cost#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 cost#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) cost#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 cost#0 24u 8u) // on error: Index access is out of bounds to ((extract 24 8) cost#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 cost#0 32u 8u) // on error: Index access is out of bounds to ((extract 32 8) cost#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 cost#0 40u 8u) // on error: Index access is out of bounds to ((extract 40 8) cost#0) // on error: Index access is out of bounds
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%1#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:270:16 debug: inlining call to smart_contracts.common.math.max in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: max_duration#0, reinterpret_bytes%0#0
poetry: debug: Found equivalence set: tmp%5#0, b#0
poetry: debug: Found equivalence set: tmp%1#1, tmp%6#0
poetry: debug: Copy propagation made 3 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (* 86400u 45u) to 3888000u
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%1#0
poetry: debug: Removing unused variable a#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Merged linear block@2 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:324:13 debug: inlining call to smart_contracts.common.send.optin in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tuple_assignment%0#0, recipient_asa_id#0
poetry: debug: Found equivalence set: tuple_assignment%1#0, exists#0
poetry: debug: Found equivalence set: farm_asset#0, asset#0
poetry: debug: Copy propagation made 3 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
poetry: debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
poetry: debug: Simplified (concat 0x tmp%20#0) to tmp%20#0
poetry: debug: Simplified (extract3 tmp%7#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) tmp%7#0) // on error: Index access is out of bounds
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%1#0
poetry: debug: Removing unused variable fee#0
poetry: debug: Removing unused variable current_tail_offset%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%0#0
poetry: debug: Removing unused variable encoded_tuple_buffer%1#0
poetry: debug: Removing unused variable tmp%21#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@3 with block@1 in block@4
poetry: debug: Merged linear block@3 into block@1
poetry: debug: Replaced predecessor block@4 with block@1 in block@2
poetry: debug: Merged linear block@4 into block@1
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Replacing redundant declaration let tmp%20#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:293:22-53, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Found equivalence set: tmp%0#0, tmp%20#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: maybe_value%1#0, copy%0#0, state#0
poetry: debug: Found equivalence set: val_as_bytes%0#0, assigned_value%0#0
poetry: debug: Found equivalence set: updated_data%0#0, state#1, copy%1#0
poetry: debug: Copy propagation made 4 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
poetry: debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
poetry: debug: Simplified (concat 0x tmp%20#0) to tmp%20#0
poetry: debug: Simplified (extract3 state#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 tmp%7#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) tmp%7#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (replace3 state#0 16u val_as_bytes%0#0) to ((replace2 16) state#0 val_as_bytes%0#0)
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%1#0
poetry: debug: Removing unused variable tmp%3#0
poetry: debug: Removing unused variable tmp%21#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Replacing redundant declaration let tmp%2#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:344:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Replacing redundant declaration let tmp%18#0: bytes = ((extract 16 8) state#0) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:364:27-58, ir_type=bytes, name='tmp%15', version=0),)
poetry: debug: Replacing redundant declaration let tmp%20#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:344:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Found equivalence set: tmp%0#0, tmp%2#0, tmp%20#0
poetry: debug: Found equivalence set: tmp%15#0, tmp%18#0
poetry: debug: Copy propagation made 3 modifications
poetry: debug: Replacing redundant declaration let tmp%19#0: uint64 = (btoi tmp%15#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:364:27-65, ir_type=uint64, name='tmp%16', version=0),)
poetry: debug: Found equivalence set: tmp%16#0, tmp%19#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Replacing redundant declaration let to_encode%0#0: uint64 = (+ tmp%16#0 duration_blocks#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:364:27-83, ir_type=uint64, name='tmp%17', version=0),)
poetry: debug: Found equivalence set: tmp%17#0, to_encode%0#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: maybe_value%1#0, copy%0#0, state#0
poetry: debug: Found equivalence set: val_as_bytes%0#0, assigned_value%0#0
poetry: debug: Found equivalence set: updated_data%0#0, state#1, copy%1#0
poetry: debug: Copy propagation made 4 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
poetry: debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
poetry: debug: Simplified (concat 0x tmp%12#0) to tmp%12#0
poetry: debug: Simplified (extract3 state#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (replace3 state#0 8u val_as_bytes%0#0) to ((replace2 8) state#0 val_as_bytes%0#0)
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%1#0
poetry: debug: Removing unused variable tmp%3#0
poetry: debug: Removing unused variable tmp%13#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Replacing redundant declaration let tmp%2#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:385:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Replacing redundant declaration let tmp%12#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:385:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Found equivalence set: tmp%0#0, tmp%2#0, tmp%12#0
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: maybe_value%1#0, copy%0#0, state#0
poetry: debug: Found equivalence set: recipient_app#0, inner_txn_params%0%%param_ApplicationID_idx_0#0
poetry: debug: Found equivalence set: val_as_bytes%0#0, assigned_value%0#0
poetry: debug: Found equivalence set: updated_data%0#0, state#2
poetry: debug: Found equivalence set: val_as_bytes%1#0, assigned_value%1#0
poetry: debug: Found equivalence set: updated_data%1#0, state#3, copy%1#0
poetry: debug: Copy propagation made 7 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
poetry: debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
poetry: debug: Simplified (concat 0x tmp%5#0) to tmp%5#0
poetry: debug: Simplified (+ 0u tmp%12#0) to tmp%12#0
poetry: debug: Simplified (concat 0x tmp%28#0) to tmp%28#0
poetry: debug: Simplified (concat 0x tmp%30#0) to tmp%30#0
poetry: debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 24u 8u) // on error: Index access is out of bounds to ((extract 24 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (extract3 state#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) state#0) // on error: Index access is out of bounds
poetry: debug: Simplified (replace3 state#0 24u val_as_bytes%0#0) to ((replace2 24) state#0 val_as_bytes%0#0)
poetry: debug: Simplified (extract3 state#2 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#2) // on error: Index access is out of bounds
poetry: debug: Simplified (replace3 state#2 16u val_as_bytes%1#0) to ((replace2 16) state#2 val_as_bytes%1#0)
poetry: debug: Simplified (extract3 state#3 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#3) // on error: Index access is out of bounds
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%1#0
poetry: debug: Removing unused variable tmp%3#0
poetry: debug: Removing unused variable reinterpret_biguint%1#0
poetry: debug: Removing unused variable tmp%6#0
poetry: debug: Removing unused variable txn_fuel_spent#0
poetry: debug: Removing unused variable inner_txn_params%0#0
poetry: debug: Removing unused variable inner_txn_params%0%%Fee_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Sender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Note_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Amount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Type_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Assets_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%Applications_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
poetry: debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
poetry: debug: Removing unused variable txn_fuel_spent#2
poetry: debug: Removing unused variable reinterpret_biguint%4#0
poetry: debug: Removing unused variable tmp%29#0
poetry: debug: Removing unused variable tmp%31#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@4 with block@3 in block@5
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Replacing redundant declaration let tmp%2#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Replacing redundant declaration let tmp%5#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Replacing redundant declaration let val_as_bytes%0#0: bytes = (itob block_round#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:422:22-57, ir_type=biguint, name='tmp%7', version=0),)
poetry: debug: Replacing redundant declaration let tmp%28#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Replacing redundant declaration let tmp%30#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
poetry: debug: Found equivalence set: tmp%0#0, tmp%2#0, tmp%5#0, tmp%28#0, tmp%30#0
poetry: debug: Found equivalence set: tmp%7#0, val_as_bytes%0#0
poetry: debug: Copy propagation made 5 modifications
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:502:9 debug: inlining call to smart_contracts.common.send.axfer_closeout in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: asset#0, asset#1
poetry: debug: Found equivalence set: maybe_value%0#0, receiver#0
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (== value%0#0 0u) to (! value%0#0)
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable fee#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Merged linear block@2 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%1#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
poetry: debug: Simplified (concat 0x tmp%4#0) to tmp%4#0
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable tmp%3#0
poetry: debug: Removing unused variable tmp%5#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@6 with block@5 in block@1
poetry: debug: Merged linear block@6 into block@5
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Replacing redundant declaration let tmp%4#0: bytes = (itob box_name#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:522:15-37, ir_type=bytes, name='tmp%2', version=0),)
poetry: debug: Found equivalence set: tmp%2#0, tmp%4#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: start_round#0, rnd#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@3 with block@2 in block@1
poetry: debug: Merged linear block@3 into block@2
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@18
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: removing unused subroutine smart_contracts.common.send.optin
poetry: debug: removing unused subroutine smart_contracts.common.send.axfer_closeout
poetry: debug: removing unused subroutine smart_contracts.common.math.max
poetry: debug: removing unused subroutine smart_contracts.common.validate.axfer
poetry: debug: removing unused subroutine smart_contracts.common.validate.payment
poetry: debug: removing unused subroutine smart_contracts.common.round_time.get_block_rewards
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
poetry: debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
poetry: debug: Begin optimization pass 2/100
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__ in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@3 with block@2 in block@20
poetry: debug: Replaced predecessor block@3 with block@2 in block@4
poetry: debug: Merged linear block@3 into block@2
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.algo_pay
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@2 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.custom.ensure
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@28 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
poetry: debug: Begin optimization pass 3/100
poetry: debug: marking simple function smart_contracts.common.custom.ensure for inlining (complexity=3 <= threshold=3)
poetry: debug: marking simple function smart_contracts.dualstakefarm.contract.get_tm2_net_amt for inlining (complexity=3 <= threshold=3)
poetry: debug: marking simple function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block for inlining (complexity=3 <= threshold=3)
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.algo_pay
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@2 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.custom.ensure
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/common/validate.py:18:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.axfer_amount_exact
poetry: smart_contracts/common/validate.py:19:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.axfer_amount_exact
poetry: smart_contracts/common/validate.py:30:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%1#1, cond#0
poetry: debug: Found equivalence set: tmp%4#0, cond#1
poetry: debug: Found equivalence set: tmp%1#0, cond#2
poetry: debug: Copy propagation made 3 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Removing unused variable msg#1
poetry: debug: Removing unused variable msg#2
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Replaced predecessor block@1 with block@0 in block@3
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Replaced predecessor block@4 with block@3 in block@5
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Replaced predecessor block@5 with block@3 in block@6
poetry: debug: Replaced predecessor block@5 with block@3 in block@7
poetry: debug: Merged linear block@5 into block@3
poetry: debug: Replaced predecessor block@8 with block@7 in block@9
poetry: debug: Merged linear block@8 into block@7
poetry: debug: Replaced predecessor block@9 with block@7 in block@10
poetry: debug: Replaced predecessor block@9 with block@7 in block@11
poetry: debug: Merged linear block@9 into block@7
poetry: debug: Merged linear block@12 into block@11
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/common/validate.py:38:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.payment_amount_exact
poetry: smart_contracts/common/validate.py:52:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%2#0, cond#0
poetry: debug: Found equivalence set: tmp%1#0, cond#1
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Removing unused variable msg#1
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Replaced predecessor block@1 with block@0 in block@3
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Replaced predecessor block@4 with block@3 in block@5
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Replaced predecessor block@5 with block@3 in block@6
poetry: debug: Replaced predecessor block@5 with block@3 in block@7
poetry: debug: Merged linear block@5 into block@3
poetry: debug: Merged linear block@8 into block@7
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/common/round_time.py:27:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%4#0, cond#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@3 with block@1 in block@4
poetry: debug: Replaced predecessor block@3 with block@1 in block@5
poetry: debug: Merged linear block@3 into block@1
poetry: debug: Replaced predecessor block@6 with block@5 in block@2
poetry: debug: Merged linear block@6 into block@5
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Removed empty block: block@5
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:55:45 debug: inlining call to smart_contracts.dualstakefarm.contract.get_tm2_net_amt in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: smart_contracts/dualstakefarm/contract.py:49:45 debug: inlining call to smart_contracts.dualstakefarm.contract.get_tm2_net_amt in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: smart_contracts/dualstakefarm/contract.py:44:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: smart_contracts/dualstakefarm/contract.py:156:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: and_result%0#2, cond#1
poetry: debug: Found equivalence set: and_result%0#5, cond#0
poetry: debug: Found equivalence set: farm_amount#2, amt#1, amt#0
poetry: debug: Found equivalence set: tmp%2#3, tmp%6#1
poetry: debug: Found equivalence set: tmp%2#2, tmp%14#1
poetry: debug: Copy propagation made 8 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#1
poetry: debug: Removing unused variable msg#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@38 with block@6 in block@39
poetry: debug: Replaced predecessor block@38 with block@6 in block@40
poetry: debug: Merged linear block@38 into block@6
poetry: debug: Replaced predecessor block@41 with block@40 in block@22
poetry: debug: Merged linear block@41 into block@40
poetry: debug: Replaced predecessor block@34 with block@17 in block@35
poetry: debug: Replaced predecessor block@34 with block@17 in block@36
poetry: debug: Merged linear block@34 into block@17
poetry: debug: Replaced predecessor block@37 with block@36 in block@19
poetry: debug: Replaced predecessor block@37 with block@36 in block@18
poetry: debug: Merged linear block@37 into block@36
poetry: debug: Replaced predecessor block@32 with block@18 in block@33
poetry: debug: Merged linear block@32 into block@18
poetry: debug: Replaced predecessor block@33 with block@18 in block@20
poetry: debug: Merged linear block@33 into block@18
poetry: debug: Replaced predecessor block@30 with block@19 in block@31
poetry: debug: Merged linear block@30 into block@19
poetry: debug: Replaced predecessor block@31 with block@19 in block@20
poetry: debug: Merged linear block@31 into block@19
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@28 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:335:41 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: smart_contracts/dualstakefarm/contract.py:293:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: smart_contracts/dualstakefarm/contract.py:295:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: smart_contracts/dualstakefarm/contract.py:318:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%2#0, cond#0
poetry: debug: Found equivalence set: tmp%4#0, cond#1
poetry: debug: Found equivalence set: tmp%13#0, cond#2
poetry: debug: Found equivalence set: tmp%2#1, tmp%22#0
poetry: debug: Copy propagation made 4 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Removing unused variable cond#1
poetry: debug: Removing unused variable msg#1
poetry: debug: Removing unused variable msg#2
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: simplified branch on !cond#0 by swapping zero and non-zero targets
poetry: debug: simplified terminator of block@5 from goto cond#0 ? block@7 : block@6 to goto maybe_exists%0#0 ? block@6 : block@7
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@5 with block@0 in block@7
poetry: debug: Replaced predecessor block@5 with block@0 in block@6
poetry: debug: Merged linear block@5 into block@0
poetry: debug: Replaced predecessor block@8 with block@7 in block@9
poetry: debug: Merged linear block@8 into block@7
poetry: debug: Replaced predecessor block@9 with block@7 in block@10
poetry: debug: Replaced predecessor block@9 with block@7 in block@11
poetry: debug: Merged linear block@9 into block@7
poetry: debug: Replaced predecessor block@12 with block@11 in block@13
poetry: debug: Merged linear block@12 into block@11
poetry: debug: Replaced predecessor block@13 with block@11 in block@14
poetry: debug: Replaced predecessor block@13 with block@11 in block@15
poetry: debug: Merged linear block@13 into block@11
poetry: debug: Replaced predecessor block@16 with block@15 in block@1
poetry: debug: Replaced predecessor block@16 with block@15 in block@2
poetry: debug: Merged linear block@16 into block@15
poetry: debug: Replaced predecessor block@3 with block@2 in block@4
poetry: debug: Merged linear block@3 into block@2
poetry: debug: Merged linear block@4 into block@2
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:344:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: smart_contracts/dualstakefarm/contract.py:375:41 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: maybe_exists%0#0, cond#0
poetry: debug: Found equivalence set: tmp%2#0, tmp%22#0
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Replaced predecessor block@1 with block@0 in block@3
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Replaced predecessor block@4 with block@3 in block@5
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Replaced predecessor block@5 with block@3 in block@6
poetry: debug: Merged linear block@5 into block@3
poetry: debug: Merged linear block@6 into block@3
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:385:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: maybe_exists%0#0, cond#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Replaced predecessor block@1 with block@0 in block@3
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:422:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: smart_contracts/dualstakefarm/contract.py:425:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: smart_contracts/dualstakefarm/contract.py:408:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: maybe_exists%0#0, cond#2
poetry: debug: Found equivalence set: tmp%8#0, cond#0
poetry: debug: Found equivalence set: tmp%10#0, cond#1
poetry: debug: Copy propagation made 3 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#2
poetry: debug: Removing unused variable msg#0
poetry: debug: Removing unused variable msg#1
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@17 with block@0 in block@18
poetry: debug: Replaced predecessor block@17 with block@0 in block@19
poetry: debug: Merged linear block@17 into block@0
poetry: debug: Replaced predecessor block@20 with block@19 in block@2
poetry: debug: Replaced predecessor block@20 with block@19 in block@1
poetry: debug: Merged linear block@20 into block@19
poetry: debug: Replaced predecessor block@9 with block@2 in block@10
poetry: debug: Replaced predecessor block@9 with block@2 in block@11
poetry: debug: Merged linear block@9 into block@2
poetry: debug: Replaced predecessor block@12 with block@11 in block@13
poetry: debug: Merged linear block@12 into block@11
poetry: debug: Replaced predecessor block@13 with block@11 in block@14
poetry: debug: Replaced predecessor block@13 with block@11 in block@15
poetry: debug: Merged linear block@13 into block@11
poetry: debug: Replaced predecessor block@16 with block@15 in block@5
poetry: debug: Replaced predecessor block@16 with block@15 in block@3
poetry: debug: Merged linear block@16 into block@15
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:481:44 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: smart_contracts/dualstakefarm/contract.py:483:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%2#1, tmp%1#0
poetry: debug: Found equivalence set: tmp%5#0, cond#0
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Replaced predecessor block@2 with block@0 in block@3
poetry: debug: Merged linear block@2 into block@0
poetry: debug: Replaced predecessor block@3 with block@0 in block@4
poetry: debug: Replaced predecessor block@3 with block@0 in block@5
poetry: debug: Merged linear block@3 into block@0
poetry: debug: Merged linear block@6 into block@5
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:496:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: smart_contracts/dualstakefarm/contract.py:499:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%2#0, cond#0
poetry: debug: Found equivalence set: tmp%4#0, cond#1
poetry: debug: Copy propagation made 2 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Removing unused variable msg#1
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: simplified branch on !cond#1 by swapping zero and non-zero targets
poetry: debug: simplified terminator of block@5 from goto cond#1 ? block@7 : block@6 to goto value%0#0 ? block@6 : block@7
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Replaced predecessor block@1 with block@0 in block@3
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Replaced predecessor block@4 with block@3 in block@5
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Replaced predecessor block@5 with block@3 in block@7
poetry: debug: Replaced predecessor block@5 with block@3 in block@6
poetry: debug: Merged linear block@5 into block@3
poetry: debug: Merged linear block@8 into block@7
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: smart_contracts/dualstakefarm/contract.py:534:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Found equivalence set: tmp%1#0, cond#0
poetry: debug: Copy propagation made 1 modifications
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable msg#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Replaced predecessor block@1 with block@0 in block@2
poetry: debug: Replaced predecessor block@1 with block@0 in block@3
poetry: debug: Merged linear block@1 into block@0
poetry: debug: Merged linear block@4 into block@3
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: removing unused subroutine smart_contracts.common.custom.ensure
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
poetry: debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
poetry: debug: Begin optimization pass 4/100
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.algo_pay
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@2 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@28 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable cond#0
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Removing unused variable cond#1
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Begin optimization pass 5/100
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.axfer
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.send.algo_pay
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@2 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Not removing empty block block@28 because it's used by phi nodes
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: No optimizations performed in pass 5, ending loop
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init using strategy RootOperandGrouping
poetry: debug: Coalescing tmp%0#0 with [tmp%0#3, tmp%0#1]
poetry: debug: Coalescing smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 with [smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#1, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#2, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#3, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#4, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#5, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#6, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#7, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#8, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#9, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#10, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#11, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#12, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#13, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#14, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#15, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#16, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#17, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#18]
poetry: debug: Coalescing resulted in 58 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.send.axfer
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.send.axfer using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.send.axfer
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.send.algo_pay
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.send.algo_pay using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.send.algo_pay
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.math.safe_subtract
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.math.safe_subtract using strategy RootOperandGrouping
poetry: debug: Coalescing ternary_result%0#0 with [ternary_result%0#4, ternary_result%0#2]
poetry: debug: Coalescing resulted in 5 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.math.safe_subtract
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.validate.axfer_amount_exact using strategy RootOperandGrouping
poetry: debug: Coalescing cond#0 with [cond#1, cond#2]
poetry: debug: Coalescing resulted in 4 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.validate.payment_amount_exact
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.validate.payment_amount_exact using strategy RootOperandGrouping
poetry: debug: Coalescing cond#0 with [cond#1]
poetry: debug: Coalescing resulted in 2 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.validate.payment_amount_exact
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.common.round_time.get_round_time
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.common.round_time.get_round_time using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.common.round_time.get_round_time
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr using strategy RootOperandGrouping
poetry: debug: Coalescing exists2#0 with [exists2#1]
poetry: debug: Coalescing exists3#0 with [exists3#1]
poetry: debug: Coalescing exists1#0 with [exists1#1]
poetry: debug: Coalescing and_result%0#0 with [and_result%0#1, and_result%0#3, and_result%0#4]
poetry: debug: Coalescing cond#0 with [cond#2, cond#1, cond#3]
poetry: debug: Coalescing tmp%0#0 with [tmp%0#2, tmp%0#1, tmp%0#4, tmp%0#3]
poetry: debug: Coalescing tmp%1#0 with [tmp%1#2, tmp%1#4, tmp%1#3]
poetry: debug: Coalescing tmp%2#0 with [tmp%2#1, tmp%2#3, tmp%2#2]
poetry: debug: Coalescing num_payouts#0 with [num_payouts#6, num_payouts#1, num_payouts#2, num_payouts#3]
poetry: debug: Coalescing sum_payouts#0 with [sum_payouts#6, sum_payouts#1, sum_payouts#2, sum_payouts#3]
poetry: debug: Coalescing rnd_delta#0 with [rnd_delta#5, rnd_delta#1, rnd_delta#2]
poetry: debug: Coalescing ternary_result%0#0 with [ternary_result%0#3, ternary_result%0#5, ternary_result%0#1]
poetry: debug: Coalescing avg_payout_or_bonus#0 with [avg_payout_or_bonus#1]
poetry: debug: Coalescing tmp%3#0 with [tmp%3#1]
poetry: debug: Coalescing tmp%8#0 with [tmp%8#1]
poetry: debug: Coalescing farm_amount#0 with [farm_amount#5, farm_amount#1, farm_amount#2]
poetry: debug: Coalescing tmp%15#0 with [tmp%15#1]
poetry: debug: Coalescing tmp%16#0 with [tmp%16#1]
poetry: debug: Coalescing farm_amount_algo#0 with [farm_amount_algo#1]
poetry: debug: Coalescing resulted in 106 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: ready: 
poetry: debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: * to_do rnd_delta#0
poetry: debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: ready: 
poetry: debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: * to_do rnd_delta#0
poetry: debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
poetry: debug: ready: num_payouts#9, sum_payouts#9
poetry: debug: to_do: num_payouts#9, sum_payouts#9
poetry: debug: * avail sum_payouts#9
poetry: debug: * avail sum_payouts#0
poetry: debug: * avail num_payouts#9
poetry: debug: * avail num_payouts#0
poetry: debug: * to_do sum_payouts#9
poetry: debug: * to_do num_payouts#9
poetry: debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
poetry: debug: ready: num_payouts#9, sum_payouts#9
poetry: debug: to_do: num_payouts#9, sum_payouts#9
poetry: debug: * avail sum_payouts#9
poetry: debug: * avail sum_payouts#0
poetry: debug: * avail num_payouts#9
poetry: debug: * avail num_payouts#0
poetry: debug: * to_do sum_payouts#9
poetry: debug: * to_do num_payouts#9
poetry: debug: loc: {num_payouts#0=None, sum_payouts#0=None, num_payouts#9=num_payouts#9, sum_payouts#9=sum_payouts#9}
poetry: debug: pred: {num_payouts#0=num_payouts#9, sum_payouts#0=sum_payouts#9}
poetry: debug: ready: num_payouts#0, sum_payouts#0
poetry: debug: to_do: num_payouts#0, sum_payouts#0
poetry: debug: * avail sum_payouts#0
poetry: debug: * avail sum_payouts#9
poetry: debug: * avail num_payouts#0
poetry: debug: * avail num_payouts#9
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
poetry: debug: ready: 
poetry: debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
poetry: debug: * to_do sum_payouts#0
poetry: debug: * to_do num_payouts#0
poetry: debug: * to_do rnd_delta#0
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost using strategy RootOperandGrouping
poetry: debug: Coalescing tmp%1#0 with [tmp%1#1]
poetry: debug: Coalescing ternary_result%0#0 with [ternary_result%0#1]
poetry: debug: Coalescing optin_mbr#0 with [optin_mbr#1]
poetry: debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
poetry: debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#1]
poetry: debug: Coalescing resulted in 11 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks using strategy RootOperandGrouping
poetry: debug: Coalescing state#0 with [state#1]
poetry: debug: Coalescing resulted in 2 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing state#0 with [state#1]
poetry: debug: Coalescing resulted in 2 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout using strategy RootOperandGrouping
poetry: debug: Coalescing cond#0 with [cond#2, cond#1]
poetry: debug: Coalescing state#0 with [state#2, state#3]
poetry: debug: Coalescing txn_fuel_spent#3 with [txn_fuel_spent#4]
poetry: debug: Coalescing resulted in 12 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees using strategy RootOperandGrouping
poetry: debug: Coalescing tmp%2#0 with [tmp%2#1]
poetry: debug: Coalescing resulted in 2 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states using strategy RootOperandGrouping
poetry: debug: Coalescing k#0 with [k#5, k#1, k#2]
poetry: debug: Coalescing resulted in 9 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers using strategy RootOperandGrouping
poetry: debug: Coalescing rnd#1 with [rnd#4, rnd#2]
poetry: debug: Coalescing resulted in 5 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
poetry: debug: Performing post-SSA optimizations at level 1
poetry: info: optimizing clear program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 1
poetry: debug: Begin optimization pass 1/100
poetry: debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Optimizer: Perform Subroutine Inlining
poetry: debug: Optimizer: Split Parallel Copies
poetry: debug: Optimizer: Constant Replacer
poetry: debug: Optimizer: Copy Propagation
poetry: debug: Optimizer: Intrinsic Simplifier
poetry: debug: Optimizer: Elide Itxn Field Calls
poetry: debug: Optimizer: Remove Unused Variables
poetry: debug: Optimizer: Inner Txn Field Replacer
poetry: debug: Optimizer: Replace Compiled References
poetry: debug: Optimizer: Simplify Control Ops
poetry: debug: Optimizer: Remove Linear Jump
poetry: debug: Optimizer: Remove Empty Blocks
poetry: debug: Optimizer: Remove Unreachable Blocks
poetry: debug: Optimizer: Repeated Expression Elimination
poetry: debug: No optimizations performed in pass 1, ending loop
poetry: debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Converting to CSSA
poetry: debug: Removing Phi nodes
poetry: debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
poetry: debug: Coalescing resulted in 0 replacement/s
poetry: debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
poetry: debug: Performing post-SSA optimizations at level 1
poetry: debug: Inserted main.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced main.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted main_call___init__@1.ops[1]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced main_call___init__@1.ops[4]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
poetry: debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
poetry: debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced main_abi_routing@4.ops[18]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted main_project_apr_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted main_project_apr_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted main_project_apr_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted main_project_apr_route@5.ops[15]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[17]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted main_project_apr_route@5.ops[19]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[21]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted main_project_apr_route@5.ops[23]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[25]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted main_project_apr_route@5.ops[31]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[33]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted main_project_apr_route@5.ops[36]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[38]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_project_apr_route@5.ops[27]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced main_project_apr_route@5.ops[30]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[1]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[5]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[10]: 'l-store-copy tmp%14#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[12]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[15]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[17]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[19]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[21]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[25]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[27]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[29]: 'l-store-copy tmp%20#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[31]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[35]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[37]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[48]: 'l-store-copy tmp%25#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[50]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[53]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[55]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[44]: 'l-store-copy tmp%24#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[47]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[39]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[43]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[33]: 'l-store-copy tmp%21#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[43]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted main_get_algo_cost_route@6.ops[23]: 'l-store-copy tmp%18#0 0'
poetry: debug: Replaced main_get_algo_cost_route@6.ops[43]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[1]: 'l-store-copy tmp%26#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[3]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[5]: 'l-store-copy tmp%27#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[7]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[10]: 'l-store-copy tmp%28#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[12]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[15]: 'l-store-copy tmp%30#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[17]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[19]: 'l-store-copy tmp%31#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[21]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[25]: 'l-store-copy tmp%33#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[27]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[29]: 'l-store-copy tmp%34#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[31]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[35]: 'l-store-copy tmp%36#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[37]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[48]: 'l-store-copy tmp%39#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[50]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[53]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[55]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[44]: 'l-store-copy tmp%38#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[47]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[39]: 'l-store-copy tmp%37#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[43]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[33]: 'l-store-copy tmp%35#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[43]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
poetry: debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[23]: 'l-store-copy tmp%32#0 0'
poetry: debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[43]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
poetry: debug: Inserted main_create_farm_route@8.ops[1]: 'l-store-copy tmp%40#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
poetry: debug: Inserted main_create_farm_route@8.ops[5]: 'l-store-copy tmp%41#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
poetry: debug: Inserted main_create_farm_route@8.ops[10]: 'l-store-copy tmp%42#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
poetry: debug: Inserted main_create_farm_route@8.ops[15]: 'l-store-copy tmp%44#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[17]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
poetry: debug: Inserted main_create_farm_route@8.ops[19]: 'l-store-copy tmp%45#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[21]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
poetry: debug: Inserted main_create_farm_route@8.ops[25]: 'l-store-copy tmp%47#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[27]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
poetry: debug: Inserted main_create_farm_route@8.ops[29]: 'l-store-copy tmp%48#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[31]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
poetry: debug: Inserted main_create_farm_route@8.ops[35]: 'l-store-copy tmp%50#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[37]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
poetry: debug: Inserted main_create_farm_route@8.ops[41]: 'l-store-copy tmp%52#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[43]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
poetry: debug: Inserted main_create_farm_route@8.ops[52]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[54]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_create_farm_route@8.ops[45]: 'l-store-copy tmp%53#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
poetry: debug: Inserted main_create_farm_route@8.ops[39]: 'l-store-copy tmp%51#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
poetry: debug: Inserted main_create_farm_route@8.ops[33]: 'l-store-copy tmp%49#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
poetry: debug: Inserted main_create_farm_route@8.ops[23]: 'l-store-copy tmp%46#0 0'
poetry: debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[1]: 'l-store-copy tmp%54#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[3]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[5]: 'l-store-copy tmp%55#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[7]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[10]: 'l-store-copy tmp%56#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[12]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[15]: 'l-store-copy tmp%58#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[17]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[19]: 'l-store-copy tmp%59#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[21]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[25]: 'l-store-copy tmp%61#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[27]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[34]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[36]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[29]: 'l-store-copy tmp%62#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[32]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
poetry: debug: Inserted main_extend_duration_blocks_route@9.ops[23]: 'l-store-copy tmp%60#0 0'
poetry: debug: Replaced main_extend_duration_blocks_route@9.ops[32]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[1]: 'l-store-copy tmp%63#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[3]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[5]: 'l-store-copy tmp%64#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[7]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[10]: 'l-store-copy tmp%65#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[12]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[15]: 'l-store-copy tmp%67#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[17]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[19]: 'l-store-copy tmp%68#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[21]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[25]: 'l-store-copy tmp%70#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[27]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[34]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[36]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[29]: 'l-store-copy tmp%71#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[32]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
poetry: debug: Inserted main_extend_amount_per_block_route@10.ops[23]: 'l-store-copy tmp%69#0 0'
poetry: debug: Replaced main_extend_amount_per_block_route@10.ops[32]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
poetry: debug: Inserted main_payout_route@11.ops[1]: 'l-store-copy tmp%72#0 0'
poetry: debug: Replaced main_payout_route@11.ops[3]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
poetry: debug: Inserted main_payout_route@11.ops[5]: 'l-store-copy tmp%73#0 0'
poetry: debug: Replaced main_payout_route@11.ops[7]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
poetry: debug: Inserted main_payout_route@11.ops[10]: 'l-store-copy tmp%74#0 0'
poetry: debug: Replaced main_payout_route@11.ops[12]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
poetry: debug: Inserted main_payout_route@11.ops[15]: 'l-store-copy tmp%76#0 0'
poetry: debug: Replaced main_payout_route@11.ops[17]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
poetry: debug: Inserted main_payout_route@11.ops[19]: 'l-store-copy tmp%77#0 0'
poetry: debug: Replaced main_payout_route@11.ops[21]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
poetry: debug: Inserted main_payout_route@11.ops[25]: 'l-store-copy tmp%79#0 0'
poetry: debug: Replaced main_payout_route@11.ops[27]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
poetry: debug: Inserted main_payout_route@11.ops[37]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_payout_route@11.ops[39]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_payout_route@11.ops[31]: 'l-store-copy tmp%81#0 0'
poetry: debug: Replaced main_payout_route@11.ops[35]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
poetry: debug: Inserted main_payout_route@11.ops[29]: 'l-store-copy tmp%80#0 0'
poetry: debug: Replaced main_payout_route@11.ops[35]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
poetry: debug: Inserted main_payout_route@11.ops[23]: 'l-store-copy tmp%78#0 0'
poetry: debug: Replaced main_payout_route@11.ops[35]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
poetry: debug: Inserted main_noop_route@12.ops[1]: 'l-store-copy tmp%82#0 0'
poetry: debug: Replaced main_noop_route@12.ops[3]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
poetry: debug: Inserted main_noop_route@12.ops[5]: 'l-store-copy tmp%83#0 0'
poetry: debug: Replaced main_noop_route@12.ops[7]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
poetry: debug: Inserted main_noop_route@12.ops[10]: 'l-store-copy tmp%84#0 0'
poetry: debug: Replaced main_noop_route@12.ops[12]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
poetry: debug: Inserted main_noop_route@12.ops[15]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_noop_route@12.ops[17]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_withdraw_fees_route@13.ops[1]: 'l-store-copy tmp%86#0 0'
poetry: debug: Replaced main_withdraw_fees_route@13.ops[3]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
poetry: debug: Inserted main_withdraw_fees_route@13.ops[5]: 'l-store-copy tmp%87#0 0'
poetry: debug: Replaced main_withdraw_fees_route@13.ops[7]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
poetry: debug: Inserted main_withdraw_fees_route@13.ops[10]: 'l-store-copy tmp%88#0 0'
poetry: debug: Replaced main_withdraw_fees_route@13.ops[12]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
poetry: debug: Inserted main_withdraw_fees_route@13.ops[15]: 'l-store-copy tmp%90#0 0'
poetry: debug: Replaced main_withdraw_fees_route@13.ops[17]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
poetry: debug: Inserted main_withdraw_fees_route@13.ops[19]: 'l-store-copy tmp%91#0 0'
poetry: debug: Replaced main_withdraw_fees_route@13.ops[21]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
poetry: debug: Inserted main_withdraw_fees_route@13.ops[24]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_withdraw_fees_route@13.ops[26]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_optout_route@14.ops[1]: 'l-store-copy tmp%92#0 0'
poetry: debug: Replaced main_optout_route@14.ops[3]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
poetry: debug: Inserted main_optout_route@14.ops[5]: 'l-store-copy tmp%93#0 0'
poetry: debug: Replaced main_optout_route@14.ops[7]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
poetry: debug: Inserted main_optout_route@14.ops[10]: 'l-store-copy tmp%94#0 0'
poetry: debug: Replaced main_optout_route@14.ops[12]: 'v-load tmp%94#0' with 'l-load tmp%94#0'
poetry: debug: Inserted main_optout_route@14.ops[15]: 'l-store-copy tmp%96#0 0'
poetry: debug: Replaced main_optout_route@14.ops[17]: 'v-load tmp%96#0' with 'l-load tmp%96#0'
poetry: debug: Inserted main_optout_route@14.ops[19]: 'l-store-copy tmp%97#0 0'
poetry: debug: Replaced main_optout_route@14.ops[21]: 'v-load tmp%97#0' with 'l-load tmp%97#0'
poetry: debug: Inserted main_optout_route@14.ops[23]: 'l-store-copy tmp%98#0 0'
poetry: debug: Replaced main_optout_route@14.ops[25]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
poetry: debug: Inserted main_optout_route@14.ops[28]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_optout_route@14.ops[30]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_update_max_duration_days_route@15.ops[1]: 'l-store-copy tmp%99#0 0'
poetry: debug: Replaced main_update_max_duration_days_route@15.ops[3]: 'v-load tmp%99#0' with 'l-load tmp%99#0'
poetry: debug: Inserted main_update_max_duration_days_route@15.ops[5]: 'l-store-copy tmp%100#0 0'
poetry: debug: Replaced main_update_max_duration_days_route@15.ops[7]: 'v-load tmp%100#0' with 'l-load tmp%100#0'
poetry: debug: Inserted main_update_max_duration_days_route@15.ops[10]: 'l-store-copy tmp%101#0 0'
poetry: debug: Replaced main_update_max_duration_days_route@15.ops[12]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
poetry: debug: Inserted main_update_max_duration_days_route@15.ops[15]: 'l-store-copy tmp%103#0 0'
poetry: debug: Replaced main_update_max_duration_days_route@15.ops[17]: 'v-load tmp%103#0' with 'l-load tmp%103#0'
poetry: debug: Inserted main_update_max_duration_days_route@15.ops[19]: 'l-store-copy tmp%104#0 0'
poetry: debug: Replaced main_update_max_duration_days_route@15.ops[21]: 'v-load tmp%104#0' with 'l-load tmp%104#0'
poetry: debug: Inserted main_update_max_duration_days_route@15.ops[24]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_update_max_duration_days_route@15.ops[26]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_update_min_duration_blocks_route@16.ops[1]: 'l-store-copy tmp%105#0 0'
poetry: debug: Replaced main_update_min_duration_blocks_route@16.ops[3]: 'v-load tmp%105#0' with 'l-load tmp%105#0'
poetry: debug: Inserted main_update_min_duration_blocks_route@16.ops[5]: 'l-store-copy tmp%106#0 0'
poetry: debug: Replaced main_update_min_duration_blocks_route@16.ops[7]: 'v-load tmp%106#0' with 'l-load tmp%106#0'
poetry: debug: Inserted main_update_min_duration_blocks_route@16.ops[10]: 'l-store-copy tmp%107#0 0'
poetry: debug: Replaced main_update_min_duration_blocks_route@16.ops[12]: 'v-load tmp%107#0' with 'l-load tmp%107#0'
poetry: debug: Inserted main_update_min_duration_blocks_route@16.ops[15]: 'l-store-copy tmp%109#0 0'
poetry: debug: Replaced main_update_min_duration_blocks_route@16.ops[17]: 'v-load tmp%109#0' with 'l-load tmp%109#0'
poetry: debug: Inserted main_update_min_duration_blocks_route@16.ops[19]: 'l-store-copy tmp%110#0 0'
poetry: debug: Replaced main_update_min_duration_blocks_route@16.ops[21]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
poetry: debug: Inserted main_update_min_duration_blocks_route@16.ops[24]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_update_min_duration_blocks_route@16.ops[26]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_get_state_route@17.ops[1]: 'l-store-copy tmp%111#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[3]: 'v-load tmp%111#0' with 'l-load tmp%111#0'
poetry: debug: Inserted main_get_state_route@17.ops[5]: 'l-store-copy tmp%112#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[7]: 'v-load tmp%112#0' with 'l-load tmp%112#0'
poetry: debug: Inserted main_get_state_route@17.ops[10]: 'l-store-copy tmp%113#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[12]: 'v-load tmp%113#0' with 'l-load tmp%113#0'
poetry: debug: Inserted main_get_state_route@17.ops[15]: 'l-store-copy tmp%115#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[17]: 'v-load tmp%115#0' with 'l-load tmp%115#0'
poetry: debug: Inserted main_get_state_route@17.ops[19]: 'l-store-copy tmp%116#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[21]: 'v-load tmp%116#0' with 'l-load tmp%116#0'
poetry: debug: Inserted main_get_state_route@17.ops[23]: 'l-store-copy tmp%117#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[25]: 'v-load tmp%117#0' with 'l-load tmp%117#0'
poetry: debug: Inserted main_get_state_route@17.ops[31]: 'l-store-copy tmp%119#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[33]: 'v-load tmp%119#0' with 'l-load tmp%119#0'
poetry: debug: Inserted main_get_state_route@17.ops[36]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[38]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_get_state_route@17.ops[27]: 'l-store-copy tmp%118#0 0'
poetry: debug: Replaced main_get_state_route@17.ops[30]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
poetry: debug: Inserted main_log_states_route@18.ops[1]: 'l-store-copy tmp%120#0 0'
poetry: debug: Replaced main_log_states_route@18.ops[3]: 'v-load tmp%120#0' with 'l-load tmp%120#0'
poetry: debug: Inserted main_log_states_route@18.ops[5]: 'l-store-copy tmp%121#0 0'
poetry: debug: Replaced main_log_states_route@18.ops[7]: 'v-load tmp%121#0' with 'l-load tmp%121#0'
poetry: debug: Inserted main_log_states_route@18.ops[10]: 'l-store-copy tmp%122#0 0'
poetry: debug: Replaced main_log_states_route@18.ops[12]: 'v-load tmp%122#0' with 'l-load tmp%122#0'
poetry: debug: Inserted main_log_states_route@18.ops[15]: 'l-store-copy tmp%124#0 0'
poetry: debug: Replaced main_log_states_route@18.ops[17]: 'v-load tmp%124#0' with 'l-load tmp%124#0'
poetry: debug: Inserted main_log_states_route@18.ops[20]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_log_states_route@18.ops[22]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[1]: 'l-store-copy tmp%125#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[3]: 'v-load tmp%125#0' with 'l-load tmp%125#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[5]: 'l-store-copy tmp%126#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[7]: 'v-load tmp%126#0' with 'l-load tmp%126#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[10]: 'l-store-copy tmp%127#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[12]: 'v-load tmp%127#0' with 'l-load tmp%127#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[15]: 'l-store-copy tmp%129#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[17]: 'v-load tmp%129#0' with 'l-load tmp%129#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[21]: 'l-store-copy tmp%131#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[23]: 'v-load tmp%131#0' with 'l-load tmp%131#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[25]: 'l-store-copy tmp%132#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[28]: 'v-load tmp%132#0' with 'l-load tmp%132#0'
poetry: debug: Inserted main_log_block_proposers_route@19.ops[19]: 'l-store-copy tmp%130#0 0'
poetry: debug: Replaced main_log_block_proposers_route@19.ops[28]: 'v-load tmp%130#0' with 'l-load tmp%130#0'
poetry: debug: Inserted main_bare_routing@20.ops[1]: 'l-store-copy tmp%133#0 0'
poetry: debug: Replaced main_bare_routing@20.ops[3]: 'v-load tmp%133#0' with 'l-load tmp%133#0'
poetry: debug: Inserted main_update@21.ops[1]: 'l-store-copy tmp%134#0 0'
poetry: debug: Replaced main_update@21.ops[3]: 'v-load tmp%134#0' with 'l-load tmp%134#0'
poetry: debug: Inserted main_update@21.ops[7]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_update@21.ops[9]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_delete@22.ops[1]: 'l-store-copy tmp%136#0 0'
poetry: debug: Replaced main_delete@22.ops[3]: 'v-load tmp%136#0' with 'l-load tmp%136#0'
poetry: debug: Inserted main_delete@22.ops[7]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_delete@22.ops[9]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main___algopy_default_create@23.ops[1]: 'l-store-copy tmp%138#0 0'
poetry: debug: Replaced main___algopy_default_create@23.ops[3]: 'v-load tmp%138#0' with 'l-load tmp%138#0'
poetry: debug: Inserted main___algopy_default_create@23.ops[5]: 'l-store-copy tmp%139#0 0'
poetry: debug: Replaced main___algopy_default_create@23.ops[7]: 'v-load tmp%139#0' with 'l-load tmp%139#0'
poetry: debug: Inserted main___algopy_default_create@23.ops[10]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main___algopy_default_create@23.ops[12]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted main_after_if_else@24.ops[1]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
poetry: debug: Replaced main_after_if_else@24.ops[3]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
poetry: debug: Inserted safe_subtract.ops[3]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced safe_subtract.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted axfer_amount_exact.ops[2]: 'l-store-copy gtxn_type%0#0 0'
poetry: debug: Replaced axfer_amount_exact.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
poetry: debug: Inserted axfer_amount_exact.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
poetry: debug: Replaced axfer_amount_exact.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
poetry: debug: Inserted axfer_amount_exact.ops[13]: 'l-store-copy tmp%0#1 0'
poetry: debug: Replaced axfer_amount_exact.ops[15]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted axfer_amount_exact.ops[18]: 'l-store-copy cond#0 0'
poetry: debug: Replaced axfer_amount_exact.ops[20]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted axfer_amount_exact_after_if_else@3.ops[8]: 'l-store-copy cond#0 0'
poetry: debug: Replaced axfer_amount_exact_after_if_else@3.ops[10]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted axfer_amount_exact_after_if_else@3.ops[4]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced axfer_amount_exact_after_if_else@3.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted axfer_amount_exact_after_if_else@3.ops[2]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced axfer_amount_exact_after_if_else@3.ops[7]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted axfer_amount_exact_after_if_else@7.ops[2]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced axfer_amount_exact_after_if_else@7.ops[4]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted axfer_amount_exact_after_if_else@7.ops[7]: 'l-store-copy cond#0 0'
poetry: debug: Replaced axfer_amount_exact_after_if_else@7.ops[9]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted payment_amount_exact.ops[2]: 'l-store-copy gtxn_type%0#0 0'
poetry: debug: Replaced payment_amount_exact.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
poetry: debug: Inserted payment_amount_exact.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
poetry: debug: Replaced payment_amount_exact.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
poetry: debug: Inserted payment_amount_exact.ops[19]: 'l-store-copy cond#0 0'
poetry: debug: Replaced payment_amount_exact.ops[21]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted payment_amount_exact.ops[15]: 'l-store-copy tmp%1#1 0'
poetry: debug: Replaced payment_amount_exact.ops[18]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
poetry: debug: Inserted payment_amount_exact.ops[13]: 'l-store-copy tmp%0#1 0'
poetry: debug: Replaced payment_amount_exact.ops[18]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted payment_amount_exact_after_if_else@3.ops[2]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced payment_amount_exact_after_if_else@3.ops[4]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted payment_amount_exact_after_if_else@3.ops[7]: 'l-store-copy cond#0 0'
poetry: debug: Replaced payment_amount_exact_after_if_else@3.ops[9]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted get_round_time.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_round_time.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_round_time.ops[9]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_round_time.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_round_time.ops[18]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced get_round_time.ops[20]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_round_time.ops[7]: 'l-store-copy first_accessible#0 0'
poetry: debug: Replaced get_round_time.ops[16]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
poetry: debug: Inserted get_round_time_if_body@1.ops[3]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced get_round_time_if_body@1.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted get_round_time_if_body@1.ops[8]: 'l-store-copy cond#0 0'
poetry: debug: Replaced get_round_time_if_body@1.ops[10]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[13]: 'l-store-copy ts_delta#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[15]: 'v-load ts_delta#0' with 'l-load ts_delta#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[9]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[12]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[1]: 'l-store-copy last_accessible#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[5]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[7]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[3]: 'l-store-copy first_accessible#0 2'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[10]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
poetry: debug: Inserted get_round_time_after_if_else@2.ops[5]: 'l-store-copy block_delta#0 2'
poetry: debug: Replaced get_round_time_after_if_else@2.ops[21]: 'v-load block_delta#0' with 'l-load block_delta#0'
poetry: debug: Inserted project_apr.ops[13]: 'l-store-copy exists1#0 1'
poetry: debug: Replaced project_apr.ops[21]: 'v-load exists1#0' with 'l-load exists1#0'
poetry: debug: Inserted project_apr_bool_true@4.ops[1]: 'l-store-copy and_result%0#0 0'
poetry: debug: Replaced project_apr_bool_true@4.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
poetry: debug: Inserted project_apr_bool_false@5.ops[1]: 'l-store-copy and_result%0#0 0'
poetry: debug: Replaced project_apr_bool_false@5.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[13]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[15]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[19]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[24]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[26]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[30]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[32]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[38]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[40]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[43]: 'l-store-copy last_accessible#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[45]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[2]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced project_apr_after_if_else@40.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[9]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced project_apr_after_if_else@40.ops[12]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[4]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced project_apr_after_if_else@40.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[49]: 'l-store-copy last_accessible#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[53]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
poetry: debug: Inserted project_apr_after_if_else@40.ops[39]: 'l-store-copy first_accessible#0 0'
poetry: debug: Replaced project_apr_after_if_else@40.ops[51]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
poetry: debug: Inserted project_apr_for_header@22.ops[3]: 'l-store-copy continue_looping%0#0 0'
poetry: debug: Replaced project_apr_for_header@22.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
poetry: debug: Inserted project_apr_for_body@23.ops[3]: 'l-store-copy rnd#0 0'
poetry: debug: Replaced project_apr_for_body@23.ops[5]: 'v-load rnd#0' with 'l-load rnd#0'
poetry: debug: Inserted project_apr_for_body@23.ops[7]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced project_apr_for_body@23.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted project_apr_if_body@24.ops[7]: 'l-store-copy sum_payouts#0 0'
poetry: debug: Replaced project_apr_if_body@24.ops[9]: 'v-load sum_payouts#0' with 'l-load sum_payouts#0'
poetry: debug: Inserted project_apr_if_body@24.ops[3]: 'l-store-copy num_payouts#0 0'
poetry: debug: Replaced project_apr_if_body@24.ops[12]: 'v-load num_payouts#0' with 'l-load num_payouts#0'
poetry: debug: Inserted project_apr_ternary_true@27.ops[3]: 'l-store-copy ternary_result%0#0 0'
poetry: debug: Replaced project_apr_ternary_true@27.ops[5]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[7]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[9]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[16]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[18]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[21]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[23]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[32]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[34]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[42]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[44]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[3]: 'l-store-copy rt_fraction.dt#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[6]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[29]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[32]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[48]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[51]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[12]: 'l-store-copy rt_fraction.dr#0 1'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[16]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[27]: 'l-store-copy global_yearly_blocks_produced#0 0'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[33]: 'v-load global_yearly_blocks_produced#0' with 'l-load global_yearly_blocks_produced#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[2]: 'l-store-copy rt_fraction.dr#0 1'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[12]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
poetry: debug: Inserted project_apr_ternary_merge@29.ops[8]: 'l-store-copy rt_fraction.dt#0 2'
poetry: debug: Replaced project_apr_ternary_merge@29.ops[23]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
poetry: debug: Inserted project_apr_if_body@7.ops[8]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced project_apr_if_body@7.ops[10]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted project_apr_if_body@7.ops[2]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced project_apr_if_body@7.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted project_apr_if_body@7.ops[4]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced project_apr_if_body@7.ops[8]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted project_apr_ternary_true@9.ops[6]: 'l-store-copy tmp%1#1 0'
poetry: debug: Replaced project_apr_ternary_true@9.ops[8]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
poetry: debug: Inserted project_apr_ternary_true@9.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced project_apr_ternary_true@9.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted project_apr_ternary_true@9.ops[12]: 'l-store-copy tm2_lp_addr#0 0'
poetry: debug: Replaced project_apr_ternary_true@9.ops[18]: 'v-load tm2_lp_addr#0' with 'l-load tm2_lp_addr#0'
poetry: debug: Inserted project_apr_ternary_true@9.ops[14]: 'l-store-copy tm2_app_id#0 2'
poetry: debug: Replaced project_apr_ternary_true@9.ops[20]: 'v-load tm2_app_id#0' with 'l-load tm2_app_id#0'
poetry: debug: Inserted project_apr_ternary_true@9.ops[20]: 'l-store-copy tm2_lp_addr#0 1'
poetry: debug: Replaced project_apr_ternary_true@9.ops[26]: 'v-load tm2_lp_addr#0' with 'l-load tm2_lp_addr#0'
poetry: debug: Inserted project_apr_ternary_true@9.ops[22]: 'l-store-copy tm2_app_id#0 2'
poetry: debug: Replaced project_apr_ternary_true@9.ops[28]: 'v-load tm2_app_id#0' with 'l-load tm2_app_id#0'
poetry: debug: Inserted project_apr_ternary_true@9.ops[1]: 'l-store-copy tm2_lp_addr#0 0'
poetry: debug: Replaced project_apr_ternary_true@9.ops[12]: 'v-load tm2_lp_addr#0' with 'l-load tm2_lp_addr#0'
poetry: debug: Inserted project_apr_ternary_true@9.ops[18]: 'l-store-copy exists1#0 3'
poetry: debug: Replaced project_apr_ternary_true@9.ops[35]: 'v-load exists1#0' with 'l-load exists1#0'
poetry: debug: Inserted project_apr_bool_true@15.ops[1]: 'l-store-copy and_result%0#0 0'
poetry: debug: Replaced project_apr_bool_true@15.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
poetry: debug: Inserted project_apr_bool_false@16.ops[1]: 'l-store-copy and_result%0#0 0'
poetry: debug: Replaced project_apr_bool_false@16.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
poetry: debug: Inserted project_apr_if_body@18.ops[7]: 'l-store-copy tmp%4#1 0'
poetry: debug: Replaced project_apr_if_body@18.ops[9]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
poetry: debug: Inserted project_apr_if_body@18.ops[15]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced project_apr_if_body@18.ops[17]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted project_apr_if_body@18.ops[28]: 'l-store-copy tmp%7#1 0'
poetry: debug: Replaced project_apr_if_body@18.ops[30]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
poetry: debug: Inserted project_apr_if_body@18.ops[36]: 'l-store-copy reinterpret_bytes%0#0 0'
poetry: debug: Replaced project_apr_if_body@18.ops[38]: 'v-load reinterpret_bytes%0#0' with 'l-load reinterpret_bytes%0#0'
poetry: debug: Inserted project_apr_if_body@18.ops[44]: 'l-store-copy tmp%10#1 0'
poetry: debug: Replaced project_apr_if_body@18.ops[46]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
poetry: debug: Inserted project_apr_if_body@18.ops[20]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced project_apr_if_body@18.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted project_apr_if_body@18.ops[25]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced project_apr_if_body@18.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted project_apr_if_body@18.ops[34]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced project_apr_if_body@18.ops[37]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted project_apr_if_body@18.ops[43]: 'l-store-copy tmp%9#1 0'
poetry: debug: Replaced project_apr_if_body@18.ops[46]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
poetry: debug: Inserted project_apr_if_body@18.ops[1]: 'l-store-copy a2#0 0'
poetry: debug: Replaced project_apr_if_body@18.ops[6]: 'v-load a2#0' with 'l-load a2#0'
poetry: debug: Inserted project_apr_if_body@18.ops[15]: 'l-store-copy farm_amount#0 1'
poetry: debug: Replaced project_apr_if_body@18.ops[24]: 'v-load farm_amount#0' with 'l-load farm_amount#0'
poetry: debug: Inserted project_apr_if_body@18.ops[6]: 'l-store-copy a1#0 1'
poetry: debug: Replaced project_apr_if_body@18.ops[30]: 'v-load a1#0' with 'l-load a1#0'
poetry: debug: Inserted project_apr_if_body@18.ops[13]: 'l-store-copy tmp%5#1 1'
poetry: debug: Replaced project_apr_if_body@18.ops[40]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
poetry: debug: Inserted project_apr_if_body@18.ops[4]: 'l-store-copy tmp%3#0 1'
poetry: debug: Replaced project_apr_if_body@18.ops[50]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted project_apr_else_body@19.ops[7]: 'l-store-copy tmp%12#1 0'
poetry: debug: Replaced project_apr_else_body@19.ops[9]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
poetry: debug: Inserted project_apr_else_body@19.ops[15]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced project_apr_else_body@19.ops[17]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted project_apr_else_body@19.ops[28]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced project_apr_else_body@19.ops[30]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted project_apr_else_body@19.ops[36]: 'l-store-copy reinterpret_bytes%1#0 0'
poetry: debug: Replaced project_apr_else_body@19.ops[38]: 'v-load reinterpret_bytes%1#0' with 'l-load reinterpret_bytes%1#0'
poetry: debug: Inserted project_apr_else_body@19.ops[44]: 'l-store-copy tmp%18#1 0'
poetry: debug: Replaced project_apr_else_body@19.ops[46]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
poetry: debug: Inserted project_apr_else_body@19.ops[20]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced project_apr_else_body@19.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted project_apr_else_body@19.ops[25]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced project_apr_else_body@19.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted project_apr_else_body@19.ops[34]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced project_apr_else_body@19.ops[37]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted project_apr_else_body@19.ops[43]: 'l-store-copy tmp%17#1 0'
poetry: debug: Replaced project_apr_else_body@19.ops[46]: 'v-load tmp%17#1' with 'l-load tmp%17#1'
poetry: debug: Inserted project_apr_else_body@19.ops[1]: 'l-store-copy a1#0 0'
poetry: debug: Replaced project_apr_else_body@19.ops[5]: 'v-load a1#0' with 'l-load a1#0'
poetry: debug: Inserted project_apr_else_body@19.ops[15]: 'l-store-copy farm_amount#0 1'
poetry: debug: Replaced project_apr_else_body@19.ops[24]: 'v-load farm_amount#0' with 'l-load farm_amount#0'
poetry: debug: Inserted project_apr_else_body@19.ops[7]: 'l-store-copy a2#0 1'
poetry: debug: Replaced project_apr_else_body@19.ops[30]: 'v-load a2#0' with 'l-load a2#0'
poetry: debug: Inserted project_apr_else_body@19.ops[13]: 'l-store-copy tmp%13#1 1'
poetry: debug: Replaced project_apr_else_body@19.ops[40]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
poetry: debug: Inserted project_apr_else_body@19.ops[4]: 'l-store-copy tmp%11#1 1'
poetry: debug: Replaced project_apr_else_body@19.ops[50]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
poetry: debug: Inserted project_apr_ternary_false@10.ops[1]: 'l-store-copy ternary_result%0#0 0'
poetry: debug: Replaced project_apr_ternary_false@10.ops[3]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[3]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[7]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[9]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[15]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[17]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[45]: 'l-store-copy len_%0#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[47]: 'v-load len_%0#0' with 'l-load len_%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[50]: 'l-store-copy no_overflow%0#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[52]: 'v-load no_overflow%0#0' with 'l-load no_overflow%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[63]: 'l-store-copy len_%1#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[65]: 'v-load len_%1#0' with 'l-load len_%1#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[68]: 'l-store-copy no_overflow%1#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[70]: 'v-load no_overflow%1#0' with 'l-load no_overflow%1#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[78]: 'l-store-copy len_%2#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[80]: 'v-load len_%2#0' with 'l-load len_%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[83]: 'l-store-copy no_overflow%2#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[85]: 'v-load no_overflow%2#0' with 'l-load no_overflow%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[94]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[96]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[99]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[101]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[104]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[106]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[109]: 'l-store-copy encoded_tuple_buffer%5#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[111]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[114]: 'l-store-copy encoded_tuple_buffer%6#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[116]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[119]: 'l-store-copy encoded_tuple_buffer%7#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[121]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[124]: 'l-store-copy encoded_tuple_buffer%8#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[126]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[129]: 'l-store-copy encoded_tuple_buffer%9#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[131]: 'v-load encoded_tuple_buffer%9#0' with 'l-load encoded_tuple_buffer%9#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[134]: 'l-store-copy encoded_tuple_buffer%10#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[136]: 'v-load encoded_tuple_buffer%10#0' with 'l-load encoded_tuple_buffer%10#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[23]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[26]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[57]: 'l-store-copy b_zeros%0#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[60]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[20]: 'l-store-copy tmp%18#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[26]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[12]: 'l-store-copy rewards#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[19]: 'v-load rewards#0' with 'l-load rewards#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[66]: 'l-store-copy own_yearly_blocks_produced#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[77]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[82]: 'l-store-copy projected_apr_bps#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[93]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[47]: 'l-store-copy total_online_stake#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[62]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[64]: 'l-store-copy b_zeros%0#0 1'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[80]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[81]: 'l-store-copy b_zeros%0#0 1'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[97]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[1]: 'l-store-copy current_block_rewards#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[32]: 'v-load current_block_rewards#0' with 'l-load current_block_rewards#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[3]: 'l-store-copy farm_amount_algo#0 2'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[42]: 'v-load farm_amount_algo#0' with 'l-load farm_amount_algo#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[101]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[144]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[85]: 'l-store-copy tmp%21#0 1'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[140]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[32]: 'l-store-copy projected_apr_bps#0 2'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[88]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[13]: 'l-store-copy own_yearly_blocks_produced#0 3'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[71]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[70]: 'l-store-copy tmp%20#0 3'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[138]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[37]: 'l-store-copy val_as_bytes%2#0 3'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[114]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[32]: 'l-store-copy tmp%19#0 4'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[110]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[42]: 'l-store-copy val_as_bytes%3#0 5'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[121]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[46]: 'l-store-copy val_as_bytes%4#0 6'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[127]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[50]: 'l-store-copy val_as_bytes%5#0 6'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[133]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
poetry: debug: Inserted project_apr_ternary_merge@11.ops[54]: 'l-store-copy val_as_bytes%6#0 7'
poetry: debug: Replaced project_apr_ternary_merge@11.ops[139]: 'v-load val_as_bytes%6#0' with 'l-load val_as_bytes%6#0'
poetry: debug: Inserted calculate_algo_cost.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced calculate_algo_cost.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted calculate_algo_cost.ops[6]: 'l-store-copy tmp%2#0 1'
poetry: debug: Replaced calculate_algo_cost.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted calculate_algo_cost_ternary_true@1.ops[1]: 'l-store-copy ternary_result%0#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_true@1.ops[3]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_false@2.ops[1]: 'l-store-copy ternary_result%0#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_false@2.ops[3]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[2]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[4]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[14]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[21]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[23]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[39]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[41]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[50]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[53]: 'l-store-copy total_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[55]: 'v-load total_cost#0' with 'l-load total_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[76]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[78]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[81]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[83]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[86]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[88]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[91]: 'l-store-copy encoded_tuple_buffer%5#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[93]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[96]: 'l-store-copy encoded_tuple_buffer%6#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[98]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[30]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[33]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[36]: 'l-store-copy tmp%0#1 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[39]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[6]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[11]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[33]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[40]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy platform_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[56]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[57]: 'l-store-copy platform_cost#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[70]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[66]: 'l-store-copy val_as_bytes%1#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[81]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[70]: 'l-store-copy val_as_bytes%2#0 2'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[87]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[63]: 'l-store-copy val_as_bytes%0#0 1'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[82]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[75]: 'l-store-copy val_as_bytes%3#0 3'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[94]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[79]: 'l-store-copy val_as_bytes%4#0 4'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[100]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[83]: 'l-store-copy val_as_bytes%5#0 5'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[106]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[27]: 'l-store-copy txn_fee_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[52]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[52]: 'l-store-copy ix_cost#0 2'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[79]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[54]: 'l-store-copy txn_fee_cost#0 3'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[84]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[20]: 'l-store-copy ix_cost#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[52]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
poetry: debug: Inserted calculate_algo_cost_ternary_merge@3.ops[13]: 'l-store-copy box_mbr#0 0'
poetry: debug: Replaced calculate_algo_cost_ternary_merge@3.ops[74]: 'v-load box_mbr#0' with 'l-load box_mbr#0'
poetry: debug: Inserted get_algo_cost.ops[4]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_algo_cost.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[4]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[6]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[26]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[28]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[34]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[36]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[39]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[41]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[44]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[46]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[49]: 'l-store-copy encoded_tuple_buffer%5#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[51]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[54]: 'l-store-copy encoded_tuple_buffer%6#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[56]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[59]: 'l-store-copy encoded_tuple_buffer%7#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[61]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[7]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[10]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[11]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[14]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[15]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[18]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[19]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[22]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[23]: 'l-store-copy cost#0 0'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[26]: 'v-load cost#0' with 'l-load cost#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[13]: 'l-store-copy tmp%1#0 1'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[38]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[18]: 'l-store-copy tmp%2#0 2'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[44]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[9]: 'l-store-copy tmp%0#0 1'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[39]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[24]: 'l-store-copy tmp%3#0 4'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[51]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[39]: 'l-store-copy val_as_bytes%0#0 4'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[67]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[29]: 'l-store-copy tmp%4#0 5'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[58]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted get_algo_cost_and_max_duration.ops[33]: 'l-store-copy tmp%5#0 5'
poetry: debug: Replaced get_algo_cost_and_max_duration.ops[64]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted get_max_duration.ops[16]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_max_duration.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_max_duration.ops[28]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced get_max_duration.ops[30]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted get_max_duration.ops[33]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced get_max_duration.ops[35]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted get_max_duration.ops[41]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced get_max_duration.ops[43]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted get_max_duration.ops[46]: 'l-store-copy max_duration#0 0'
poetry: debug: Replaced get_max_duration.ops[48]: 'v-load max_duration#0' with 'l-load max_duration#0'
poetry: debug: Inserted get_max_duration.ops[59]: 'l-store-copy tmp%1#1 0'
poetry: debug: Replaced get_max_duration.ops[61]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
poetry: debug: Inserted get_max_duration.ops[2]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced get_max_duration.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted get_max_duration.ops[9]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced get_max_duration.ops[12]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted get_max_duration.ops[39]: 'l-store-copy blocks_produced#0 0'
poetry: debug: Replaced get_max_duration.ops[42]: 'v-load blocks_produced#0' with 'l-load blocks_produced#0'
poetry: debug: Inserted get_max_duration.ops[53]: 'l-store-copy b#0 0'
poetry: debug: Replaced get_max_duration.ops[56]: 'v-load b#0' with 'l-load b#0'
poetry: debug: Inserted get_max_duration.ops[4]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced get_max_duration.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted get_max_duration.ops[12]: 'l-store-copy value%1#0 1'
poetry: debug: Replaced get_max_duration.ops[16]: 'v-load value%1#0' with 'l-load value%1#0'
poetry: debug: Inserted get_max_duration.ops[27]: 'l-store-copy rt_fraction.dr#0 1'
poetry: debug: Replaced get_max_duration.ops[31]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
poetry: debug: Inserted get_max_duration.ops[60]: 'l-store-copy b#0 1'
poetry: debug: Replaced get_max_duration.ops[63]: 'v-load b#0' with 'l-load b#0'
poetry: debug: Inserted get_max_duration.ops[62]: 'l-store-copy tmp%0#1 1'
poetry: debug: Replaced get_max_duration.ops[66]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted get_max_duration.ops[29]: 'l-store-copy rt_fraction.dt#0 1'
poetry: debug: Replaced get_max_duration.ops[37]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
poetry: debug: Inserted get_max_duration.ops[18]: 'l-store-copy ds_balance#0 0'
poetry: debug: Replaced get_max_duration.ops[46]: 'v-load ds_balance#0' with 'l-load ds_balance#0'
poetry: debug: Inserted get_max_duration.ops[25]: 'l-store-copy total_online_stake#0 1'
poetry: debug: Replaced get_max_duration.ops[53]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
poetry: debug: Inserted validate_duration.ops[2]: 'l-store-copy allowed_duration#0 0'
poetry: debug: Replaced validate_duration.ops[4]: 'v-load allowed_duration#0' with 'l-load allowed_duration#0'
poetry: debug: Inserted validate_duration.ops[7]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced validate_duration.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted validate_duration_if_body@1.ops[2]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced validate_duration_if_body@1.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted create_farm.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced create_farm.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted create_farm.ops[6]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced create_farm.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted create_farm_after_if_else@7.ops[1]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced create_farm_after_if_else@7.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[1]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[3]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[11]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[13]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[15]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[17]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[24]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[26]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[45]: 'l-store-copy recipient_asa_id#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[47]: 'v-load recipient_asa_id#0' with 'l-load recipient_asa_id#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[50]: 'l-store-copy cond#2 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[52]: 'v-load cond#2' with 'l-load cond#2'
poetry: debug: Inserted create_farm_after_if_else@11.ops[19]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[22]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[34]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[38]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[30]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[37]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted create_farm_after_if_else@11.ops[6]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced create_farm_after_if_else@11.ops[22]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted create_farm_after_if_else@15.ops[2]: 'l-store-copy tmp%14#0 0'
poetry: debug: Replaced create_farm_after_if_else@15.ops[4]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted create_farm_after_if_else@15.ops[6]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced create_farm_after_if_else@15.ops[8]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted create_farm_after_if_else@15.ops[11]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced create_farm_after_if_else@15.ops[13]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted create_farm_after_if_else@15.ops[16]: 'l-store-copy tmp%18#0 1'
poetry: debug: Replaced create_farm_after_if_else@15.ops[19]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted create_farm_if_body@1.ops[1]: 'l-store-copy tmp%0#1 0'
poetry: debug: Replaced create_farm_if_body@1.ops[4]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted create_farm_after_if_else@2.ops[10]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[12]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[15]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[17]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[23]: 'l-store-copy encoded_tuple_buffer%2#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[25]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[28]: 'l-store-copy encoded_tuple_buffer%3#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[30]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[51]: 'l-store-copy tmp%2#1 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[53]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
poetry: debug: Inserted create_farm_after_if_else@2.ops[33]: 'l-store-copy encoded_tuple_buffer%4#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[36]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[41]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[44]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[49]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[52]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[59]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[62]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[64]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[67]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[72]: 'l-store-copy maybe_exists%2#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[75]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[80]: 'l-store-copy new_state_value%1#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[83]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[47]: 'l-store-copy tmp%0#2 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[52]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
poetry: debug: Inserted create_farm_after_if_else@2.ops[75]: 'l-store-copy maybe_value%2#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[79]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[19]: 'l-store-copy val_as_bytes%3#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[32]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[5]: 'l-store-copy val_as_bytes%1#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[23]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[9]: 'l-store-copy val_as_bytes%2#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[29]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[46]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced create_farm_after_if_else@2.ops[66]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted create_farm_after_if_else@2.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced create_farm_after_if_else@2.ops[24]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced extend_duration_blocks.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted extend_duration_blocks.ops[6]: 'l-store-copy cond#0 1'
poetry: debug: Replaced extend_duration_blocks.ops[9]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[8]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[14]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[24]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[26]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[28]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[30]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[37]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[39]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[45]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[47]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[49]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[51]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[61]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[63]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[65]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[67]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[98]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[100]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[2]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[33]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[36]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[72]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[75]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[76]: 'l-store-copy tmp%17#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[78]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[80]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[83]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[85]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[88]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[93]: 'l-store-copy maybe_exists%2#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[96]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[101]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[104]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[111]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[114]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[116]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[119]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[124]: 'l-store-copy maybe_exists%3#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[127]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[132]: 'l-store-copy new_state_value%1#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[135]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[4]: 'l-store-copy state#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[8]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[57]: 'l-store-copy tmp%14#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[61]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[101]: 'l-store-copy tmp%0#1 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[106]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[129]: 'l-store-copy maybe_value%3#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[133]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[14]: 'l-store-copy farm_asset#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[24]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[46]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[61]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[22]: 'l-store-copy tmp%6#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[38]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[50]: 'l-store-copy state#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[67]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[101]: 'l-store-copy maybe_value%2#0 1'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[121]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[68]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[89]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[26]: 'l-store-copy farm_asset#0 2'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[65]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[9]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[51]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_duration_blocks_after_if_else@3.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced extend_duration_blocks_after_if_else@3.ops[97]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced extend_amount_per_block.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted extend_amount_per_block.ops[6]: 'l-store-copy cond#0 1'
poetry: debug: Replaced extend_amount_per_block.ops[9]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[8]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[14]: 'l-store-copy tmp%5#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[22]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[24]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[37]: 'l-store-copy tmp%10#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[39]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[41]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[43]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[46]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[48]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[2]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[27]: 'l-store-copy tmp%8#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[30]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[52]: 'l-store-copy val_as_bytes%0#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[55]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[57]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[60]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[4]: 'l-store-copy state#0 1'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[8]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[33]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[37]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[21]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[36]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[9]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[24]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[42]: 'l-store-copy state#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[59]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[25]: 'l-store-copy state#0 1'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[42]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[15]: 'l-store-copy farm_asset#0 1'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[40]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
poetry: debug: Inserted extend_amount_per_block_after_if_else@3.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced extend_amount_per_block_after_if_else@3.ops[67]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted payout.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced payout.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted payout.ops[6]: 'l-store-copy cond#0 1'
poetry: debug: Replaced payout.ops[9]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted payout_after_if_else@19.ops[8]: 'l-store-copy reinterpret_biguint%0#0 0'
poetry: debug: Replaced payout_after_if_else@19.ops[10]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
poetry: debug: Inserted payout_after_if_else@19.ops[13]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced payout_after_if_else@19.ops[15]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted payout_after_if_else@19.ops[2]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced payout_after_if_else@19.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted payout_after_if_else@19.ops[4]: 'l-store-copy state#0 1'
poetry: debug: Replaced payout_after_if_else@19.ops[8]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@2.ops[9]: 'l-store-copy cond#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[11]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted payout_after_if_else@2.ops[5]: 'l-store-copy tmp%7#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[8]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
poetry: debug: Inserted payout_after_if_else@2.ops[2]: 'l-store-copy reinterpret_biguint%2#0 0'
poetry: debug: Replaced payout_after_if_else@2.ops[8]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
poetry: debug: Inserted payout_after_if_else@11.ops[12]: 'l-store-copy cond#0 0'
poetry: debug: Replaced payout_after_if_else@11.ops[14]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted payout_after_if_else@11.ops[5]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced payout_after_if_else@11.ops[8]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted payout_after_if_else@11.ops[7]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced payout_after_if_else@11.ops[12]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted payout_after_if_else@11.ops[2]: 'l-store-copy tmp%9#0 0'
poetry: debug: Replaced payout_after_if_else@11.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
poetry: debug: Inserted payout_after_if_else@15.ops[3]: 'l-store-copy tmp%11#0 0'
poetry: debug: Replaced payout_after_if_else@15.ops[5]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
poetry: debug: Inserted payout_if_body@3.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
poetry: debug: Replaced payout_if_body@3.ops[10]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
poetry: debug: Inserted payout_after_if_else@5.ops[4]: 'l-store-copy tmp%13#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[6]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
poetry: debug: Inserted payout_after_if_else@5.ops[17]: 'l-store-copy tmp%15#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[19]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
poetry: debug: Inserted payout_after_if_else@5.ops[60]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[62]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[64]: 'l-store-copy tmp%25#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[66]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
poetry: debug: Inserted payout_after_if_else@5.ops[68]: 'l-store-copy tmp%26#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[70]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
poetry: debug: Inserted payout_after_if_else@5.ops[73]: 'l-store-copy to_encode%0#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[75]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
poetry: debug: Inserted payout_after_if_else@5.ops[81]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[83]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[85]: 'l-store-copy reinterpret_biguint%3#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[87]: 'v-load reinterpret_biguint%3#0' with 'l-load reinterpret_biguint%3#0'
poetry: debug: Inserted payout_after_if_else@5.ops[90]: 'l-store-copy tmp%27#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[92]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
poetry: debug: Inserted payout_after_if_else@5.ops[11]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced payout_after_if_else@5.ops[14]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[31]: 'l-store-copy tmp%18#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[34]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
poetry: debug: Inserted payout_after_if_else@5.ops[48]: 'l-store-copy tmp%22#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[51]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
poetry: debug: Inserted payout_after_if_else@5.ops[55]: 'l-store-copy tmp%24#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[58]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
poetry: debug: Inserted payout_after_if_else@5.ops[81]: 'l-store-copy val_as_bytes%1#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[84]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[42]: 'l-store-copy tmp%21#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[46]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
poetry: debug: Inserted payout_after_if_else@5.ops[54]: 'l-store-copy tmp%23#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[59]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
poetry: debug: Inserted payout_after_if_else@5.ops[24]: 'l-store-copy tmp%17#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[29]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
poetry: debug: Inserted payout_after_if_else@5.ops[41]: 'l-store-copy tmp%20#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[47]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
poetry: debug: Inserted payout_after_if_else@5.ops[22]: 'l-store-copy tmp%16#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[29]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
poetry: debug: Inserted payout_after_if_else@5.ops[40]: 'l-store-copy tmp%19#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[48]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
poetry: debug: Inserted payout_after_if_else@5.ops[3]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[17]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[14]: 'l-store-copy value%1#0 2'
poetry: debug: Replaced payout_after_if_else@5.ops[30]: 'v-load value%1#0' with 'l-load value%1#0'
poetry: debug: Inserted payout_after_if_else@5.ops[40]: 'l-store-copy txn_fuel_spent#3 0'
poetry: debug: Replaced payout_after_if_else@5.ops[58]: 'v-load txn_fuel_spent#3' with 'l-load txn_fuel_spent#3'
poetry: debug: Inserted payout_after_if_else@5.ops[76]: 'l-store-copy state#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[93]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@5.ops[9]: 'l-store-copy tmp%14#0 1'
poetry: debug: Replaced payout_after_if_else@5.ops[30]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
poetry: debug: Inserted payout_after_if_else@5.ops[1]: 'l-store-copy tmp%12#0 0'
poetry: debug: Replaced payout_after_if_else@5.ops[39]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
poetry: debug: Inserted payout_after_if_else@5.ops[21]: 'l-store-copy state#0 3'
poetry: debug: Replaced payout_after_if_else@5.ops[73]: 'v-load state#0' with 'l-load state#0'
poetry: debug: Inserted payout_after_if_else@8.ops[3]: 'l-store-copy maybe_exists%2#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[6]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
poetry: debug: Inserted payout_after_if_else@8.ops[11]: 'l-store-copy new_state_value%0#0 0'
poetry: debug: Replaced payout_after_if_else@8.ops[14]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
poetry: debug: Inserted payout_after_if_else@8.ops[19]: 'l-store-copy maybe_exists%3#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[22]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
poetry: debug: Inserted payout_after_if_else@8.ops[27]: 'l-store-copy new_state_value%1#0 0'
poetry: debug: Replaced payout_after_if_else@8.ops[30]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
poetry: debug: Inserted payout_after_if_else@8.ops[5]: 'l-store-copy maybe_value%2#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[9]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
poetry: debug: Inserted payout_after_if_else@8.ops[22]: 'l-store-copy maybe_value%3#0 1'
poetry: debug: Replaced payout_after_if_else@8.ops[26]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
poetry: debug: Inserted withdraw_fees.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced withdraw_fees.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted withdraw_fees.ops[32]: 'l-store-copy locked_balance#0 0'
poetry: debug: Replaced withdraw_fees.ops[34]: 'v-load locked_balance#0' with 'l-load locked_balance#0'
poetry: debug: Inserted withdraw_fees.ops[39]: 'l-store-copy tmp%4#0 0'
poetry: debug: Replaced withdraw_fees.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
poetry: debug: Inserted withdraw_fees.ops[50]: 'l-store-copy cond#0 0'
poetry: debug: Replaced withdraw_fees.ops[52]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted withdraw_fees.ops[6]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[9]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted withdraw_fees.ops[14]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[17]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted withdraw_fees.ops[22]: 'l-store-copy tmp%1#1 0'
poetry: debug: Replaced withdraw_fees.ops[25]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
poetry: debug: Inserted withdraw_fees.ops[27]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced withdraw_fees.ops[30]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted withdraw_fees.ops[32]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced withdraw_fees.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted withdraw_fees.ops[48]: 'l-store-copy check%1#0 1'
poetry: debug: Replaced withdraw_fees.ops[51]: 'v-load check%1#0' with 'l-load check%1#0'
poetry: debug: Inserted withdraw_fees.ops[20]: 'l-store-copy tmp%0#1 0'
poetry: debug: Replaced withdraw_fees.ops[25]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
poetry: debug: Inserted withdraw_fees.ops[51]: 'l-store-copy value%1#0 1'
poetry: debug: Replaced withdraw_fees.ops[56]: 'v-load value%1#0' with 'l-load value%1#0'
poetry: debug: Inserted withdraw_fees.ops[43]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced withdraw_fees.ops[56]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted withdraw_fees.ops[16]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[31]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted withdraw_fees.ops[8]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced withdraw_fees.ops[37]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted withdraw_fees_after_if_else@5.ops[1]: 'l-store-copy tmp%6#0 0'
poetry: debug: Replaced withdraw_fees_after_if_else@5.ops[3]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
poetry: debug: Inserted optout.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced optout.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted optout.ops[7]: 'l-store-copy cond#0 1'
poetry: debug: Replaced optout.ops[10]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted optout_after_if_else@3.ops[1]: 'l-store-copy tmp%3#0 0'
poetry: debug: Replaced optout_after_if_else@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
poetry: debug: Inserted optout_after_if_else@3.ops[6]: 'l-store-copy check%0#0 1'
poetry: debug: Replaced optout_after_if_else@3.ops[9]: 'v-load check%0#0' with 'l-load check%0#0'
poetry: debug: Inserted optout_after_if_else@3.ops[8]: 'l-store-copy value%0#0 1'
poetry: debug: Replaced optout_after_if_else@3.ops[12]: 'v-load value%0#0' with 'l-load value%0#0'
poetry: debug: Inserted optout_after_if_else@7.ops[3]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced optout_after_if_else@7.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted optout_after_if_else@7.ops[5]: 'l-store-copy receiver#0 1'
poetry: debug: Replaced optout_after_if_else@7.ops[10]: 'v-load receiver#0' with 'l-load receiver#0'
poetry: debug: Inserted optout_after_if_else@7.ops[11]: 'l-store-copy receiver#0 0'
poetry: debug: Replaced optout_after_if_else@7.ops[15]: 'v-load receiver#0' with 'l-load receiver#0'
poetry: debug: Inserted get_state.ops[2]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_state.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_state.ops[6]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced get_state.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted get_state.ops[8]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced get_state.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted log_states_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
poetry: debug: Replaced log_states_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
poetry: debug: Inserted log_states_for_body@2.ops[11]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted log_states_for_body@2.ops[15]: 'l-store-copy box_name#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[17]: 'v-load box_name#0' with 'l-load box_name#0'
poetry: debug: Inserted log_states_for_body@2.ops[19]: 'l-store-copy tmp%2#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[21]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
poetry: debug: Inserted log_states_for_body@2.ops[6]: 'l-store-copy item_offset%0#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
poetry: debug: Inserted log_states_for_body@2.ops[24]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced log_states_for_body@2.ops[27]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted log_states_for_body@2.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
poetry: debug: Replaced log_states_for_body@2.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
poetry: debug: Inserted log_states_if_body@3.ops[2]: 'l-store-copy maybe_exists%1#0 1'
poetry: debug: Replaced log_states_if_body@3.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
poetry: debug: Inserted log_states_if_body@3.ops[4]: 'l-store-copy maybe_value%1#0 1'
poetry: debug: Replaced log_states_if_body@3.ops[8]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
poetry: debug: Inserted log_block_proposers_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
poetry: debug: Replaced log_block_proposers_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
poetry: debug: Inserted log_block_proposers_for_body@2.ops[2]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced log_block_proposers_for_body@2.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted log_block_proposers_for_body@2.ops[1]: 'l-store-copy rnd#1 0'
poetry: debug: Replaced log_block_proposers_for_body@2.ops[7]: 'v-load rnd#1' with 'l-load rnd#1'
poetry: debug: Inserted ensure_manager_caller.ops[12]: 'l-store-copy cond#0 0'
poetry: debug: Replaced ensure_manager_caller.ops[14]: 'v-load cond#0' with 'l-load cond#0'
poetry: debug: Inserted ensure_manager_caller.ops[5]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced ensure_manager_caller.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted ensure_manager_caller.ops[7]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced ensure_manager_caller.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted ensure_manager_caller.ops[1]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced ensure_manager_caller.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_ix_rewards_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced get_ix_rewards_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_ix_rewards_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
poetry: debug: Replaced get_txn_fee_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
poetry: debug: Replaced get_txn_fee_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
poetry: debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
poetry: debug: Inserted get_txn_fee_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
poetry: debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
poetry: debug: Found 4 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
poetry: debug: Allocated 1 variable/s to x-stack: tmp%0#0
poetry: debug: shared x-stack for main_project_apr_route@5 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_get_algo_cost_route@6 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_get_algo_cost_and_max_duration_route@7 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_create_farm_route@8 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_extend_duration_blocks_route@9 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_extend_amount_per_block_route@10 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_payout_route@11 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_noop_route@12 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_withdraw_fees_route@13 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_optout_route@14 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_update_max_duration_days_route@15 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_update_min_duration_blocks_route@16 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_get_state_route@17 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_log_states_route@18 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_log_block_proposers_route@19 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_update@21 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_delete@22 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main___algopy_default_create@23 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: shared x-stack for main_after_if_else@24 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
poetry: debug: Found 2 edge set/s for smart_contracts.common.math.safe_subtract
poetry: debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
poetry: debug: shared x-stack for safe_subtract_ternary_true@1 -> safe_subtract_ternary_merge@3: ternary_result%0#0
poetry: debug: shared x-stack for safe_subtract_ternary_false@2 -> safe_subtract_ternary_merge@3: ternary_result%0#0
poetry: debug: Found 3 edge set/s for smart_contracts.common.validate.axfer_amount_exact
poetry: debug: Found 2 edge set/s for smart_contracts.common.validate.payment_amount_exact
poetry: debug: Found 1 edge set/s for smart_contracts.common.round_time.get_round_time
poetry: debug: Found 16 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
poetry: debug: Allocated 3 variable/s to x-stack: cond#0, farm_amount_algo#0, ternary_result%0#0
poetry: debug: shared x-stack for project_apr_bool_true@4 -> project_apr_bool_merge@6: cond#0
poetry: debug: shared x-stack for project_apr_bool_false@5 -> project_apr_bool_merge@6: cond#0
poetry: debug: shared x-stack for project_apr_bool_true@15 -> project_apr_bool_merge@17: cond#0
poetry: debug: shared x-stack for project_apr_bool_false@16 -> project_apr_bool_merge@17: cond#0
poetry: debug: shared x-stack for project_apr_if_body@18 -> project_apr_after_inlined_smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset@20: ternary_result%0#0
poetry: debug: shared x-stack for project_apr_else_body@19 -> project_apr_after_inlined_smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset@20: ternary_result%0#0
poetry: debug: shared x-stack for project_apr_ternary_false@10 -> project_apr_ternary_merge@11: farm_amount_algo#0
poetry: debug: shared x-stack for project_apr_after_inlined_smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset@20 -> project_apr_ternary_merge@11: farm_amount_algo#0
poetry: debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
poetry: debug: Allocated 1 variable/s to x-stack: optin_mbr#0
poetry: debug: shared x-stack for calculate_algo_cost_ternary_true@1 -> calculate_algo_cost_ternary_merge@3: optin_mbr#0
poetry: debug: shared x-stack for calculate_algo_cost_ternary_false@2 -> calculate_algo_cost_ternary_merge@3: optin_mbr#0
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
poetry: debug: Found 4 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
poetry: debug: Found 7 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
poetry: debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
poetry: debug: Found 4 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
poetry: debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
poetry: debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
poetry: debug: smart_contracts.common.round_time.get_round_time f-stack entry: []
poetry: debug: smart_contracts.common.round_time.get_round_time f-stack on first store: ['first_accessible#0', 'last_accessible#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack entry: ['own_yearly_blocks_produced#0', 'tmp%7#0', 'tmp%9#0', 'total_online_stake#0', 'a1#0', 'a2#0', 'aid1#0', 'avg_payout_or_bonus#0', 'avg_round_time#0', 'balance#0', 'bonus#0', 'current_block_rewards#0', 'delta#0', 'farm_amount#0', 'last_accessible#0', 'num_payouts#0', 'num_payouts#9', 'rnd_delta#0', 'sum_payouts#0', 'sum_payouts#9', 'tmp%2#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack on first store: ['exists2#0', 'tm2_app_id#0', 'exists3#0', 'tm2_lp_addr#0', 'exists4#0', 'staked#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack entry: []
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack on first store: ['allowed_duration#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm f-stack entry: []
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm f-stack on first store: ['tmp%0#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks f-stack entry: []
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks f-stack on first store: ['tmp%0#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block f-stack entry: []
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block f-stack on first store: ['tmp%0#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack entry: ['state#0', 'tmp%7#0', 'txn_fuel_spent#3']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack on first store: ['tmp%0#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack entry: ['tmp%2#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack on first store: ['tmp%0#0', 'k#0']
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack entry: []
poetry: debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack on first store: ['tmp%0#0', 'rnd#1']
poetry: debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init() -> uint64:
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
poetry: debug: inlining single reference block main_call___init__@1 into main
poetry: debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
poetry: debug: inlining single reference block main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25 into main_after_if_else@24
poetry: debug: removing explicit jump to fall-through block main_after_if_else@2
poetry: debug: removing explicit jump to fall-through block main_after_if_else@24
poetry: smart_contracts/common/send.py:18 debug: optimizing TEAL subroutine smart_contracts.common.send.axfer(asset: uint64, receiver: bytes, amount: uint64, fee: uint64) -> void:
poetry: smart_contracts/common/send.py:38 debug: optimizing TEAL subroutine smart_contracts.common.send.algo_pay(receiver: bytes, amount: uint64, fee: uint64) -> void:
poetry: smart_contracts/common/math.py:12 debug: optimizing TEAL subroutine smart_contracts.common.math.safe_subtract(a: uint64, b: uint64, default: uint64) -> uint64:
poetry: debug: replacing `b safe_subtract_ternary_merge@3` with `retsub`
poetry: debug: inlining single reference block safe_subtract_ternary_true@1 into safe_subtract
poetry: debug: inlining single reference block safe_subtract_ternary_merge@3 into safe_subtract
poetry: smart_contracts/common/validate.py:26 debug: optimizing TEAL subroutine smart_contracts.common.validate.axfer_amount_exact(axfer_txn_id: uint64, expected_asset: uint64, expected_amount: uint64) -> void:
poetry: debug: inlining single reference block axfer_amount_exact_if_body@2 into axfer_amount_exact
poetry: debug: inlining single reference block axfer_amount_exact_if_body@6 into axfer_amount_exact_after_if_else@3
poetry: debug: inlining single reference block axfer_amount_exact_if_body@10 into axfer_amount_exact_after_if_else@7
poetry: smart_contracts/common/validate.py:50 debug: optimizing TEAL subroutine smart_contracts.common.validate.payment_amount_exact(payment_txn_idx: uint64, expected_amount: uint64) -> void:
poetry: debug: inlining single reference block payment_amount_exact_if_body@2 into payment_amount_exact
poetry: debug: inlining single reference block payment_amount_exact_if_body@6 into payment_amount_exact_after_if_else@3
poetry: smart_contracts/common/round_time.py:22 debug: optimizing TEAL subroutine smart_contracts.common.round_time.get_round_time(min_round_sample: uint64) -> uint64, uint64:
poetry: debug: inlining single reference block get_round_time_if_body@1 into get_round_time
poetry: debug: inlining single reference block get_round_time_if_body@4 into get_round_time
poetry: smart_contracts/dualstakefarm/contract.py:135 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update() -> void:
poetry: smart_contracts/dualstakefarm/contract.py:139 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete() -> void:
poetry: smart_contracts/dualstakefarm/contract.py:143 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr(recipient_app_id: uint64) -> bytes:
poetry: debug: not inlining jump-block due to stack manipulations
poetry: debug: Traceback (most recent call last):
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/errors.py", line 36, in log_exceptions
poetry: yield
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puyapy/compile.py", line 79, in compile_to_teal
poetry: teal = awst_to_teal(
poetry: ^^^^^^^^^^^^^
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/compile.py", line 73, in awst_to_teal
poetry: teal = list(_ir_to_teal(log_ctx, context, ir))
poetry: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/compile.py", line 128, in _ir_to_teal
poetry: compiled = _contract_ir_to_teal(artifact_context, artifact_ir)
poetry: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/compile.py", line 304, in _contract_ir_to_teal
poetry: approval_teal = mir_to_teal(context, approval_mir)
poetry: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/main.py", line 19, in mir_to_teal
poetry: optimize_teal_program(context, teal)
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/optimize/main.py", line 26, in optimize_teal_program
poetry: _optimize_subroutine(context, teal_sub)
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/optimize/main.py", line 61, in _optimize_subroutine
poetry: _inline_single_op_blocks(teal_sub)
poetry: File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/optimize/main.py", line 145, in _inline_single_op_blocks
poetry: assert isinstance(replace_op, models.ControlOp) and not replace_op.targets
poetry: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
poetry: AssertionError
poetry: critical: AssertionError: 
debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=False, output_memory_ir=False, output_bytecode=False, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/smart_contracts/dualstakefarm/contract.py'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv
debug: Using python executable: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/bin/python3
debug: Using python site-packages: /home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages
debug: Found algopy: 2.6.0
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/sys/__init__.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/builtins.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_collections_abc.pyi
debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/_typeshed/__init__.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/typing_extensions.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/types.pyi
debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/abc.pyi
debug: Skipping typeshed stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/__init__.pyi
debug: Skipping stdlib stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/collections/abc.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_template_variables.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_hints.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_primitives.pyi
debug: Discovered user module smart_contracts at smart_contracts/__init__.py
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_contract.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_box.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/gtxn.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/itxn.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_state.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_unsigned_builtins.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_util.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_transaction.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_reference.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/arc4.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_logic_sig.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/__init__.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/op.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_compiled.pyi
debug: Skipping algopy stub .venv/lib/python3.12/site-packages/puyapy/_typeshed/stdlib/algopy/_constants.pyi
debug: Discovered user module smart_contracts.common.send at smart_contracts/common/send.py
debug: Discovered user module smart_contracts.common.math at smart_contracts/common/math.py
debug: Discovered user module smart_contracts.common.custom at smart_contracts/common/custom.py
debug: Discovered user module smart_contracts.common.validate at smart_contracts/common/validate.py
debug: Discovered user module smart_contracts.common.round_time at smart_contracts/common/round_time.py
debug: Discovered user module smart_contracts.dualstakefarm.contract at smart_contracts/dualstakefarm/contract.py
debug: Building AWST for module smart_contracts
debug: Building AWST for module smart_contracts.common.send
debug: Building AWST for module smart_contracts.common.math
debug: Building AWST for module smart_contracts.common.custom
debug: Building AWST for module smart_contracts.common.validate
debug: Building AWST for module smart_contracts.common.round_time
debug: Building AWST for module smart_contracts.dualstakefarm.contract
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function smart_contracts.common.send.optin
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.send.send
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function smart_contracts.common.send.axfer
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.send.axfer_closeout
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.send.algo_pay
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.send.algo_closeout
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Building IR for function smart_contracts.common.math.max
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.math.safe_subtract
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
debug: Terminated block@3
debug: Building IR for function smart_contracts.common.custom.ensure
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function smart_contracts.common.validate.asset
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.axfer
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.axfer_amount_exact
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.payment
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.payment_amount_min
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.validate.payment_amount_exact
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.common.round_time.get_round_time
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@2
debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0
debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1)
debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#0 <- block@1) (last_accessible#1) with last_accessible#0 in current definition for 1 blocks
debug: Created Phi assignment: let first_accessible#1: uint64 = undefined while trying to resolve 'first_accessible' in block@2
debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0) in block@0
debug: Added first_accessible#0 to Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0
debug: Deleting Phi assignment: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1)
debug: Replaced trivial Phi node: let first_accessible#1: uint64 = φ(first_accessible#0 <- block@0, first_accessible#0 <- block@1) (first_accessible#1) with first_accessible#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Building IR for function smart_contracts.common.round_time.get_block_rewards
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'rnd_delta' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd_delta#1: uint64 = undefined while trying to resolve 'rnd_delta' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'last_accessible' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_accessible#1: uint64 = undefined while trying to resolve 'last_accessible' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Looking for 'num_payouts' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let num_payouts#1: uint64 = undefined while trying to resolve 'num_payouts' in block@1
debug: Looking for 'sum_payouts' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sum_payouts#1: uint64 = undefined while trying to resolve 'sum_payouts' in block@1
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added rnd_delta#0 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0) in block@0
debug: Added rnd_delta#2 to Phi node: let rnd_delta#1: uint64 = φ(rnd_delta#0 <- block@0, rnd_delta#2 <- block@5) in block@5
debug: Added last_accessible#0 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0) in block@0
debug: Created Phi assignment: let last_accessible#2: uint64 = undefined while trying to resolve 'last_accessible' in block@4
debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2) in block@2
debug: Added last_accessible#1 to Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1
debug: Deleting Phi assignment: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3)
debug: Replaced trivial Phi node: let last_accessible#2: uint64 = φ(last_accessible#1 <- block@2, last_accessible#1 <- block@3) (last_accessible#2) with last_accessible#1 in current definition for 1 blocks
debug: Added last_accessible#1 to Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0
debug: Deleting Phi assignment: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5)
debug: Replaced trivial Phi node: let last_accessible#1: uint64 = φ(last_accessible#0 <- block@0, last_accessible#1 <- block@5) (last_accessible#1) with last_accessible#0 in current definition for 5 blocks
debug: Added num_payouts#0 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0) in block@0
debug: Created Phi assignment: let num_payouts#3: uint64 = undefined while trying to resolve 'num_payouts' in block@4
debug: Added num_payouts#1 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2) in block@2
debug: Added num_payouts#2 to Phi node: let num_payouts#3: uint64 = φ(num_payouts#1 <- block@2, num_payouts#2 <- block@3) in block@3
debug: Added num_payouts#3 to Phi node: let num_payouts#1: uint64 = φ(num_payouts#0 <- block@0, num_payouts#3 <- block@5) in block@5
debug: Added sum_payouts#0 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0) in block@0
debug: Created Phi assignment: let sum_payouts#3: uint64 = undefined while trying to resolve 'sum_payouts' in block@4
debug: Added sum_payouts#1 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2) in block@2
debug: Added sum_payouts#2 to Phi node: let sum_payouts#3: uint64 = φ(sum_payouts#1 <- block@2, sum_payouts#2 <- block@3) in block@3
debug: Added sum_payouts#3 to Phi node: let sum_payouts#1: uint64 = φ(sum_payouts#0 <- block@0, sum_payouts#3 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let bonus#1: uint64 = undefined while trying to resolve 'bonus' in block@1
debug: Added bonus#0 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0) in block@0
debug: Created Phi assignment: let bonus#2: uint64 = undefined while trying to resolve 'bonus' in block@4
debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2) in block@2
debug: Added bonus#1 to Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1
debug: Deleting Phi assignment: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3)
debug: Replaced trivial Phi node: let bonus#2: uint64 = φ(bonus#1 <- block@2, bonus#1 <- block@3) (bonus#2) with bonus#1 in current definition for 1 blocks
debug: Added bonus#1 to Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0
debug: Deleting Phi assignment: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5)
debug: Replaced trivial Phi node: let bonus#1: uint64 = φ(bonus#0 <- block@0, bonus#1 <- block@5) (bonus#1) with bonus#0 in current definition for 5 blocks
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@9
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7) in block@7
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@7, ternary_result%0#1 <- block@8) in block@8
debug: Terminated block@9
debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: Sealing block@0
smart_contracts/dualstakefarm/contract.py:39:19 debug: encountered already materialized expression (tm2_lp_addr), reusing result: tm2_lp_addr#0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@5
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@3) in block@3
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@3, and_result%0#1 <- block@4) in block@4
debug: Created Phi assignment: let aid1#1: uint64 = undefined while trying to resolve 'aid1' in block@5
debug: Added aid1#0 to Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3) in block@3
debug: Created Phi assignment: let aid1#2: uint64 = undefined while trying to resolve 'aid1' in block@4
debug: Added aid1#0 to Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0) in block@0
debug: Added aid1#0 to Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1) in block@1
debug: Added aid1#0 to Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2) (aid1#2) with aid1#0
debug: Deleting Phi assignment: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2)
debug: Replaced trivial Phi node: let aid1#2: uint64 = φ(aid1#0 <- block@0, aid1#0 <- block@1, aid1#0 <- block@2) (aid1#2) with aid1#0 in current definition for 1 blocks
debug: Added aid1#0 to Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4) (aid1#1) with aid1#0
debug: Deleting Phi assignment: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4)
debug: Replaced trivial Phi node: let aid1#1: uint64 = φ(aid1#0 <- block@3, aid1#0 <- block@4) (aid1#1) with aid1#0 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let a2#1: uint64 = undefined while trying to resolve 'a2' in block@5
debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@3) in block@3
debug: Created Phi assignment: let a2#2: uint64 = undefined while trying to resolve 'a2' in block@4
debug: Added a2#0 to Phi node: let a2#2: uint64 = φ(a2#0 <- block@0) in block@0
debug: Added a2#0 to Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1) in block@1
debug: Added a2#0 to Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2) (a2#2) with a2#0
debug: Deleting Phi assignment: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2)
debug: Replaced trivial Phi node: let a2#2: uint64 = φ(a2#0 <- block@0, a2#0 <- block@1, a2#0 <- block@2) (a2#2) with a2#0 in current definition for 1 blocks
debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) (a2#1) with a2#0
debug: Deleting Phi assignment: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4)
debug: Replaced trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) (a2#1) with a2#0 in current definition for 1 blocks
debug: Created Phi assignment: let a1#1: uint64 = undefined while trying to resolve 'a1' in block@5
debug: Added a1#0 to Phi node: let a1#1: uint64 = φ(a1#0 <- block@3) in block@3
debug: Created Phi assignment: let a1#2: uint64 = undefined while trying to resolve 'a1' in block@4
debug: Added a1#0 to Phi node: let a1#2: uint64 = φ(a1#0 <- block@0) in block@0
debug: Added a1#0 to Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1) in block@1
debug: Added a1#0 to Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2) (a1#2) with a1#0
debug: Deleting Phi assignment: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2)
debug: Replaced trivial Phi node: let a1#2: uint64 = φ(a1#0 <- block@0, a1#0 <- block@1, a1#0 <- block@2) (a1#2) with a1#0 in current definition for 1 blocks
debug: Added a1#0 to Phi node: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4) (a1#1) with a1#0
debug: Deleting Phi assignment: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4)
debug: Replaced trivial Phi node: let a1#1: uint64 = φ(a1#0 <- block@3, a1#0 <- block@4) (a1#1) with a1#0 in current definition for 1 blocks
debug: Created Phi assignment: let farm_amount#1: uint64 = undefined while trying to resolve 'farm_amount' in block@5
debug: Added farm_amount#0 to Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3) in block@3
debug: Created Phi assignment: let farm_amount#2: uint64 = undefined while trying to resolve 'farm_amount' in block@4
debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0) in block@0
debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1) in block@1
debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2) (farm_amount#2) with farm_amount#0
debug: Deleting Phi assignment: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2)
debug: Replaced trivial Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@0, farm_amount#0 <- block@1, farm_amount#0 <- block@2) (farm_amount#2) with farm_amount#0 in current definition for 1 blocks
debug: Added farm_amount#0 to Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4) (farm_amount#1) with farm_amount#0
debug: Deleting Phi assignment: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4)
debug: Replaced trivial Phi node: let farm_amount#1: uint64 = φ(farm_amount#0 <- block@3, farm_amount#0 <- block@4) (farm_amount#1) with farm_amount#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@6
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4) in block@4
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4, and_result%0#1 <- block@5) in block@5
debug: Created Phi assignment: let recipient_app_id#1: uint64 = undefined while trying to resolve 'recipient_app_id' in block@6
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4) in block@4
debug: Created Phi assignment: let recipient_app_id#2: uint64 = undefined while trying to resolve 'recipient_app_id' in block@5
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0) in block@0
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1) in block@1
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2) in block@2
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0
debug: Deleting Phi assignment: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3)
debug: Replaced trivial Phi node: let recipient_app_id#2: uint64 = φ(recipient_app_id#0 <- block@0, recipient_app_id#0 <- block@1, recipient_app_id#0 <- block@2, recipient_app_id#0 <- block@3) (recipient_app_id#2) with recipient_app_id#0 in current definition for 1 blocks
debug: Added recipient_app_id#0 to Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0
debug: Deleting Phi assignment: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5)
debug: Replaced trivial Phi node: let recipient_app_id#1: uint64 = φ(recipient_app_id#0 <- block@4, recipient_app_id#0 <- block@5) (recipient_app_id#1) with recipient_app_id#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let farm_amount#2: uint64 = undefined while trying to resolve 'farm_amount' in block@8
debug: Added farm_amount#0 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6) in block@6
debug: Added farm_amount#1 to Phi node: let farm_amount#2: uint64 = φ(farm_amount#0 <- block@6, farm_amount#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let tm2_app_id#1: uint64 = undefined while trying to resolve 'tm2_app_id' in block@8
debug: Created Phi assignment: let tm2_app_id#2: uint64 = undefined while trying to resolve 'tm2_app_id' in block@6
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4) in block@4
debug: Created Phi assignment: let tm2_app_id#3: uint64 = undefined while trying to resolve 'tm2_app_id' in block@5
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0) in block@0
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1) in block@1
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2) in block@2
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0
debug: Deleting Phi assignment: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3)
debug: Replaced trivial Phi node: let tm2_app_id#3: uint64 = φ(tm2_app_id#0 <- block@0, tm2_app_id#0 <- block@1, tm2_app_id#0 <- block@2, tm2_app_id#0 <- block@3) (tm2_app_id#3) with tm2_app_id#0 in current definition for 1 blocks
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0
debug: Deleting Phi assignment: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5)
debug: Replaced trivial Phi node: let tm2_app_id#2: uint64 = φ(tm2_app_id#0 <- block@4, tm2_app_id#0 <- block@5) (tm2_app_id#2) with tm2_app_id#0 in current definition for 1 blocks
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6) in block@6
debug: Added tm2_app_id#0 to Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0
debug: Deleting Phi assignment: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7)
debug: Replaced trivial Phi node: let tm2_app_id#1: uint64 = φ(tm2_app_id#0 <- block@6, tm2_app_id#0 <- block@7) (tm2_app_id#1) with tm2_app_id#0 in current definition for 1 blocks
debug: Created Phi assignment: let tm2_lp_addr#1: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@8
debug: Created Phi assignment: let tm2_lp_addr#2: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@6
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4) in block@4
debug: Created Phi assignment: let tm2_lp_addr#3: bytes = undefined while trying to resolve 'tm2_lp_addr' in block@5
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0) in block@0
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1) in block@1
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2) in block@2
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0
debug: Deleting Phi assignment: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3)
debug: Replaced trivial Phi node: let tm2_lp_addr#3: bytes = φ(tm2_lp_addr#0 <- block@0, tm2_lp_addr#0 <- block@1, tm2_lp_addr#0 <- block@2, tm2_lp_addr#0 <- block@3) (tm2_lp_addr#3) with tm2_lp_addr#0 in current definition for 1 blocks
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0
debug: Deleting Phi assignment: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5)
debug: Replaced trivial Phi node: let tm2_lp_addr#2: bytes = φ(tm2_lp_addr#0 <- block@4, tm2_lp_addr#0 <- block@5) (tm2_lp_addr#2) with tm2_lp_addr#0 in current definition for 1 blocks
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6) in block@6
debug: Added tm2_lp_addr#0 to Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0
debug: Deleting Phi assignment: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7)
debug: Replaced trivial Phi node: let tm2_lp_addr#1: bytes = φ(tm2_lp_addr#0 <- block@6, tm2_lp_addr#0 <- block@7) (tm2_lp_addr#1) with tm2_lp_addr#0 in current definition for 1 blocks
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@11
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9) in block@9
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@9, ternary_result%0#1 <- block@10) in block@10
debug: Created Phi assignment: let current_block_rewards#1: uint64 = undefined while trying to resolve 'current_block_rewards' in block@11
debug: Created Phi assignment: let current_block_rewards#2: uint64 = undefined while trying to resolve 'current_block_rewards' in block@8
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6) in block@6
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0
debug: Deleting Phi assignment: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7)
debug: Replaced trivial Phi node: let current_block_rewards#2: uint64 = φ(current_block_rewards#0 <- block@6, current_block_rewards#0 <- block@7) (current_block_rewards#2) with current_block_rewards#0 in current definition for 1 blocks
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9) in block@9
debug: Added current_block_rewards#0 to Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0
debug: Deleting Phi assignment: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10)
debug: Replaced trivial Phi node: let current_block_rewards#1: uint64 = φ(current_block_rewards#0 <- block@9, current_block_rewards#0 <- block@10) (current_block_rewards#1) with current_block_rewards#0 in current definition for 1 blocks
debug: Created Phi assignment: let own_yearly_blocks_produced#1: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@11
debug: Created Phi assignment: let own_yearly_blocks_produced#2: biguint = undefined while trying to resolve 'own_yearly_blocks_produced' in block@8
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6) in block@6
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0
debug: Deleting Phi assignment: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7)
debug: Replaced trivial Phi node: let own_yearly_blocks_produced#2: biguint = φ(own_yearly_blocks_produced#0 <- block@6, own_yearly_blocks_produced#0 <- block@7) (own_yearly_blocks_produced#2) with own_yearly_blocks_produced#0 in current definition for 1 blocks
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9) in block@9
debug: Added own_yearly_blocks_produced#0 to Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0
debug: Deleting Phi assignment: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10)
debug: Replaced trivial Phi node: let own_yearly_blocks_produced#1: biguint = φ(own_yearly_blocks_produced#0 <- block@9, own_yearly_blocks_produced#0 <- block@10) (own_yearly_blocks_produced#1) with own_yearly_blocks_produced#0 in current definition for 1 blocks
debug: Created Phi assignment: let staked#1: uint64 = undefined while trying to resolve 'staked' in block@11
debug: Created Phi assignment: let staked#2: uint64 = undefined while trying to resolve 'staked' in block@8
debug: Created Phi assignment: let staked#3: uint64 = undefined while trying to resolve 'staked' in block@6
debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4) in block@4
debug: Created Phi assignment: let staked#4: uint64 = undefined while trying to resolve 'staked' in block@5
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0) in block@0
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1) in block@1
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2) in block@2
debug: Added staked#0 to Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0
debug: Deleting Phi assignment: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3)
debug: Replaced trivial Phi node: let staked#4: uint64 = φ(staked#0 <- block@0, staked#0 <- block@1, staked#0 <- block@2, staked#0 <- block@3) (staked#4) with staked#0 in current definition for 1 blocks
debug: Added staked#0 to Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0
debug: Deleting Phi assignment: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5)
debug: Replaced trivial Phi node: let staked#3: uint64 = φ(staked#0 <- block@4, staked#0 <- block@5) (staked#3) with staked#0 in current definition for 1 blocks
debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6) in block@6
debug: Added staked#0 to Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0
debug: Deleting Phi assignment: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7)
debug: Replaced trivial Phi node: let staked#2: uint64 = φ(staked#0 <- block@6, staked#0 <- block@7) (staked#2) with staked#0 in current definition for 1 blocks
debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9) in block@9
debug: Added staked#0 to Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0
debug: Deleting Phi assignment: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10)
debug: Replaced trivial Phi node: let staked#1: uint64 = φ(staked#0 <- block@9, staked#0 <- block@10) (staked#1) with staked#0 in current definition for 1 blocks
debug: Created Phi assignment: let balance#1: uint64 = undefined while trying to resolve 'balance' in block@11
debug: Created Phi assignment: let balance#2: uint64 = undefined while trying to resolve 'balance' in block@8
debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6) in block@6
debug: Added balance#0 to Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0
debug: Deleting Phi assignment: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7)
debug: Replaced trivial Phi node: let balance#2: uint64 = φ(balance#0 <- block@6, balance#0 <- block@7) (balance#2) with balance#0 in current definition for 1 blocks
debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9) in block@9
debug: Added balance#0 to Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0
debug: Deleting Phi assignment: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10)
debug: Replaced trivial Phi node: let balance#1: uint64 = φ(balance#0 <- block@9, balance#0 <- block@10) (balance#1) with balance#0 in current definition for 1 blocks
debug: Created Phi assignment: let current_avg_block_payout#1: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@11
debug: Created Phi assignment: let current_avg_block_payout#2: uint64 = undefined while trying to resolve 'current_avg_block_payout' in block@8
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6) in block@6
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0
debug: Deleting Phi assignment: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7)
debug: Replaced trivial Phi node: let current_avg_block_payout#2: uint64 = φ(current_avg_block_payout#0 <- block@6, current_avg_block_payout#0 <- block@7) (current_avg_block_payout#2) with current_avg_block_payout#0 in current definition for 1 blocks
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9) in block@9
debug: Added current_avg_block_payout#0 to Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0
debug: Deleting Phi assignment: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10)
debug: Replaced trivial Phi node: let current_avg_block_payout#1: uint64 = φ(current_avg_block_payout#0 <- block@9, current_avg_block_payout#0 <- block@10) (current_avg_block_payout#1) with current_avg_block_payout#0 in current definition for 1 blocks
debug: Created Phi assignment: let farm_amount#3: uint64 = undefined while trying to resolve 'farm_amount' in block@11
debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9) in block@9
debug: Added farm_amount#2 to Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) in block@10
debug: Replacing trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2
debug: Deleting Phi assignment: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10)
debug: Replaced trivial Phi node: let farm_amount#3: uint64 = φ(farm_amount#2 <- block@9, farm_amount#2 <- block@10) (farm_amount#3) with farm_amount#2 in current definition for 1 blocks
debug: Created Phi assignment: let avg_round_time#1: uint64 = undefined while trying to resolve 'avg_round_time' in block@11
debug: Created Phi assignment: let avg_round_time#2: uint64 = undefined while trying to resolve 'avg_round_time' in block@8
debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6) in block@6
debug: Added avg_round_time#0 to Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0
debug: Deleting Phi assignment: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7)
debug: Replaced trivial Phi node: let avg_round_time#2: uint64 = φ(avg_round_time#0 <- block@6, avg_round_time#0 <- block@7) (avg_round_time#2) with avg_round_time#0 in current definition for 1 blocks
debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9) in block@9
debug: Added avg_round_time#0 to Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0
debug: Deleting Phi assignment: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10)
debug: Replaced trivial Phi node: let avg_round_time#1: uint64 = φ(avg_round_time#0 <- block@9, avg_round_time#0 <- block@10) (avg_round_time#1) with avg_round_time#0 in current definition for 1 blocks
debug: Created Phi assignment: let total_online_stake#1: biguint = undefined while trying to resolve 'total_online_stake' in block@11
debug: Created Phi assignment: let total_online_stake#2: biguint = undefined while trying to resolve 'total_online_stake' in block@8
debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6) in block@6
debug: Added total_online_stake#0 to Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0
debug: Deleting Phi assignment: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7)
debug: Replaced trivial Phi node: let total_online_stake#2: biguint = φ(total_online_stake#0 <- block@6, total_online_stake#0 <- block@7) (total_online_stake#2) with total_online_stake#0 in current definition for 1 blocks
debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9) in block@9
debug: Added total_online_stake#0 to Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) in block@10
debug: Replacing trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0
debug: Deleting Phi assignment: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10)
debug: Replaced trivial Phi node: let total_online_stake#1: biguint = φ(total_online_stake#0 <- block@9, total_online_stake#0 <- block@10) (total_online_stake#1) with total_online_stake#0 in current definition for 1 blocks
debug: Terminated block@11
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@3
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1) in block@1
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@1, ternary_result%0#1 <- block@2) in block@2
debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@3
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1) in block@1
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0
debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2)
debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@1, recipient_app#0 <- block@2) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@3
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1) in block@1
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0
debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2)
debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@1, duration_blocks#0 <- block@2) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
debug: Terminated block@3
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let farm_asset#1: uint64 = undefined while trying to resolve 'farm_asset' in block@2
debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0) in block@0
debug: Added farm_asset#0 to Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0
debug: Deleting Phi assignment: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1)
debug: Replaced trivial Phi node: let farm_asset#1: uint64 = φ(farm_asset#0 <- block@0, farm_asset#0 <- block@1) (farm_asset#1) with farm_asset#0 in current definition for 1 blocks
debug: Created Phi assignment: let amount_per_block#1: uint64 = undefined while trying to resolve 'amount_per_block' in block@2
debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0) in block@0
debug: Added amount_per_block#0 to Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0
debug: Deleting Phi assignment: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1)
debug: Replaced trivial Phi node: let amount_per_block#1: uint64 = φ(amount_per_block#0 <- block@0, amount_per_block#0 <- block@1) (amount_per_block#1) with amount_per_block#0 in current definition for 1 blocks
debug: Created Phi assignment: let duration_blocks#1: uint64 = undefined while trying to resolve 'duration_blocks' in block@2
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0) in block@0
debug: Added duration_blocks#0 to Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0
debug: Deleting Phi assignment: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1)
debug: Replaced trivial Phi node: let duration_blocks#1: uint64 = φ(duration_blocks#0 <- block@0, duration_blocks#0 <- block@1) (duration_blocks#1) with duration_blocks#0 in current definition for 1 blocks
debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@2
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0) in block@0
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0
debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1)
debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@0, recipient_app#0 <- block@1) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let txn_fuel_spent#1: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@5
debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2) in block@2
debug: Added txn_fuel_spent#0 to Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0
debug: Deleting Phi assignment: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4)
debug: Replaced trivial Phi node: let txn_fuel_spent#1: uint64 = φ(txn_fuel_spent#0 <- block@2, txn_fuel_spent#0 <- block@4) (txn_fuel_spent#1) with txn_fuel_spent#0 in current definition for 1 blocks
debug: Created Phi assignment: let state#1: bytes = undefined while trying to resolve 'state' in block@5
debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2) in block@2
debug: Added state#0 to Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0
debug: Deleting Phi assignment: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4)
debug: Replaced trivial Phi node: let state#1: bytes = φ(state#0 <- block@2, state#0 <- block@4) (state#1) with state#0 in current definition for 1 blocks
debug: Created Phi assignment: let recipient_app#1: uint64 = undefined while trying to resolve 'recipient_app' in block@5
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2) in block@2
debug: Added recipient_app#0 to Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0
debug: Deleting Phi assignment: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4)
debug: Replaced trivial Phi node: let recipient_app#1: uint64 = φ(recipient_app#0 <- block@2, recipient_app#0 <- block@4) (recipient_app#1) with recipient_app#0 in current definition for 1 blocks
debug: Created Phi assignment: let block_round#1: uint64 = undefined while trying to resolve 'block_round' in block@5
debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2) in block@2
debug: Added block_round#0 to Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0
debug: Deleting Phi assignment: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4)
debug: Replaced trivial Phi node: let block_round#1: uint64 = φ(block_round#0 <- block@2, block_round#0 <- block@4) (block_round#1) with block_round#0 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let txn_fuel_spent#5: uint64 = undefined while trying to resolve 'txn_fuel_spent' in block@8
debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6) in block@6
debug: Added txn_fuel_spent#4 to Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) in block@7
debug: Replacing trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4
debug: Deleting Phi assignment: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7)
debug: Replaced trivial Phi node: let txn_fuel_spent#5: uint64 = φ(txn_fuel_spent#4 <- block@6, txn_fuel_spent#4 <- block@7) (txn_fuel_spent#5) with txn_fuel_spent#4 in current definition for 1 blocks
debug: Terminated block@8
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'k' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let k#1: uint64 = undefined while trying to resolve 'k' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'box_names' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let box_names#1: bytes = undefined while trying to resolve 'box_names' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added k#0 to Phi node: let k#1: uint64 = φ(k#0 <- block@0) in block@0
debug: Added k#2 to Phi node: let k#1: uint64 = φ(k#0 <- block@0, k#2 <- block@6) in block@6
debug: Added box_names#0 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0) in block@0
debug: Created Phi assignment: let box_names#2: bytes = undefined while trying to resolve 'box_names' in block@5
debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3) in block@3
debug: Added box_names#1 to Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1
debug: Deleting Phi assignment: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4)
debug: Replaced trivial Phi node: let box_names#2: bytes = φ(box_names#1 <- block@3, box_names#1 <- block@4) (box_names#2) with box_names#1 in current definition for 1 blocks
debug: Added box_names#1 to Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0
debug: Deleting Phi assignment: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6)
debug: Replaced trivial Phi node: let box_names#1: bytes = φ(box_names#0 <- block@0, box_names#1 <- block@6) (box_names#1) with box_names#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd#1: uint64 = undefined while trying to resolve 'rnd' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added rnd#0 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0) in block@0
debug: Added rnd#2 to Phi node: let rnd#1: uint64 = φ(rnd#0 <- block@0, rnd#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine smart_contracts.common.send.send
debug: removing unused subroutine smart_contracts.common.send.algo_closeout
debug: removing unused subroutine smart_contracts.common.validate.asset
debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine smart_contracts.common.send.optin
debug: removing unused subroutine smart_contracts.common.send.send
debug: removing unused subroutine smart_contracts.common.send.axfer
debug: removing unused subroutine smart_contracts.common.send.axfer_closeout
debug: removing unused subroutine smart_contracts.common.send.algo_pay
debug: removing unused subroutine smart_contracts.common.send.algo_closeout
debug: removing unused subroutine smart_contracts.common.math.max
debug: removing unused subroutine smart_contracts.common.math.safe_subtract
debug: removing unused subroutine smart_contracts.common.custom.ensure
debug: removing unused subroutine smart_contracts.common.validate.asset
debug: removing unused subroutine smart_contracts.common.validate.axfer
debug: removing unused subroutine smart_contracts.common.validate.axfer_amount_exact
debug: removing unused subroutine smart_contracts.common.validate.payment
debug: removing unused subroutine smart_contracts.common.validate.payment_amount_min
debug: removing unused subroutine smart_contracts.common.validate.payment_amount_exact
debug: removing unused subroutine smart_contracts.common.round_time.get_round_time
debug: removing unused subroutine smart_contracts.common.round_time.get_block_rewards
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_farm_algo_cost_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
info: optimizing approval program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 1
debug: Begin optimization pass 1/100
debug: marking single-use function smart_contracts.common.send.optin for inlining
debug: marking single-use function smart_contracts.common.send.axfer_closeout for inlining
debug: marking single-use function smart_contracts.common.math.max for inlining
debug: marking single-use function smart_contracts.common.validate.axfer for inlining
debug: marking single-use function smart_contracts.common.validate.payment for inlining
debug: marking single-use function smart_contracts.common.round_time.get_block_rewards for inlining
debug: marking single-use function smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset for inlining
debug: marking single-use function smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__ for inlining
debug: marking trivial method smart_contracts.dualstakefarm.contract.DualstakeFarm.noop as inlineable
debug: marking single-use function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__ in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.optin
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: fee#0, inner_txn_params%0%%param_Fee_idx_0#0
debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_AssetReceiver_idx_0#0
debug: Found equivalence set: amount#0, inner_txn_params%0%%param_AssetAmount_idx_0#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.axfer_closeout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: fee#0, inner_txn_params%0%%param_Fee_idx_0#0
debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_AssetReceiver_idx_0#0, inner_txn_params%0%%param_AssetCloseTo_idx_0#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%param_AssetAmount_idx_0#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.algo_pay
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: fee#0, inner_txn_params%0%%param_Fee_idx_0#0
debug: Found equivalence set: receiver#0, inner_txn_params%0%%param_Receiver_idx_0#0
debug: Found equivalence set: amount#0, inner_txn_params%0%%param_Amount_idx_0#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.math.max
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: default#0, ternary_result%0#1
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.custom.ensure
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: axfer_txn_idx#0, axfer_txn#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/common/validate.py:31:9 debug: inlining call to smart_contracts.common.validate.axfer in smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: axfer_txn_id#0, axfer_txn_idx#0
debug: Found equivalence set: expected_asset#0, expected_asset#1
debug: Found equivalence set: tmp%5#0, tmp%0#0
debug: Copy propagation made 6 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.payment
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: txn_idx#0, pay_txn#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/common/validate.py:52:19 debug: inlining call to smart_contracts.common.validate.payment in smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: payment_txn_idx#0, txn_idx#0
debug: Found equivalence set: tmp%3#0, tmp%0#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.round_time.get_block_rewards
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: bonus#0, ternary_result%0#1
debug: Found equivalence set: ternary_result%0#2, avg_payout_or_bonus#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@4 in block@1
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@8 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = ((block BlkProposerPayout) rnd#0) with copy of existing registers (Register(source_location=smart_contracts/common/round_time.py:48:11-44, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%4#0
debug: Copy propagation made 1 modifications
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tm2_lp_addr#0, tma#0
debug: Found equivalence set: tm2_app_id#0, tm2#0
debug: Found equivalence set: tuple_assignment%0#0, aid1#0
debug: Found equivalence set: tuple_assignment%1#0, exists1#0
debug: Found equivalence set: tuple_assignment%2#0, a1#0
debug: Found equivalence set: tuple_assignment%3#0, exists2#0
debug: Found equivalence set: tuple_assignment%4#0, a2#0
debug: Found equivalence set: tuple_assignment%5#0, exists3#0
debug: Copy propagation made 12 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create in smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
smart_contracts/dualstakefarm/contract.py:473:6 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.noop in smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
debug: Simplified (== tmp%26#0 NoOp) to (! tmp%26#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%54#0 NoOp) to (! tmp%54#0)
debug: Simplified (== tmp%63#0 NoOp) to (! tmp%63#0)
debug: Simplified (== tmp%72#0 NoOp) to (! tmp%72#0)
debug: Simplified (== tmp%82#0 NoOp) to (! tmp%82#0)
debug: Simplified (== tmp%86#0 NoOp) to (! tmp%86#0)
debug: Simplified (== tmp%92#0 NoOp) to (! tmp%92#0)
debug: Simplified (== tmp%99#0 NoOp) to (! tmp%99#0)
debug: Simplified (== tmp%105#0 NoOp) to (! tmp%105#0)
debug: Simplified (== tmp%111#0 NoOp) to (! tmp%111#0)
debug: Simplified (== tmp%120#0 NoOp) to (! tmp%120#0)
debug: Simplified (== tmp%125#0 NoOp) to (! tmp%125#0)
debug: Simplified (== tmp%138#0 0u) to (! tmp%138#0)
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%57#0
debug: Removing unused variable tmp%66#0
debug: Removing unused variable tmp%75#0
debug: Removing unused variable tmp%85#0
debug: Removing unused variable tmp%89#0
debug: Removing unused variable tmp%95#0
debug: Removing unused variable tmp%102#0
debug: Removing unused variable tmp%108#0
debug: Removing unused variable tmp%114#0
debug: Removing unused variable tmp%123#0
debug: Removing unused variable tmp%128#0
debug: Removing unused variable tmp%135#0
debug: Removing unused variable tmp%137#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@19 from switch tmp%133#0 {4u => block@20, 5u => block@21, 0u => block@22, * => block@23} to goto_nth [block@22, block@23, block@23, block@23, block@20, block@21][tmp%133#0] else goto block@23
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@28 with block@9 in block@29
debug: Merged linear block@28 into block@9
debug: Merged linear block@29 into block@9
debug: Replaced predecessor block@18 with block@17 in block@25
debug: Merged linear block@18 into block@17
debug: Replaced predecessor block@26 with block@22 in block@27
debug: Merged linear block@26 into block@22
debug: Merged linear block@27 into block@22
debug: Replaced predecessor block@24 with block@23 in block@25
debug: Merged linear block@24 into block@23
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@17
debug: Removed empty block: block@23
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:179:13 debug: inlining call to smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
smart_contracts/dualstakefarm/contract.py:163:9 debug: inlining call to smart_contracts.common.round_time.get_block_rewards in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, tm2_app_id#0, tm2_app_id#1
debug: Found equivalence set: tuple_assignment%1#0, exists2#0
debug: Found equivalence set: tuple_assignment%2#0, tm2_lp_addr#0, tm2_lp_addr#1
debug: Found equivalence set: tuple_assignment%3#0, exists3#0
debug: Found equivalence set: tuple_assignment%4#0, asa_id#0
debug: Found equivalence set: tuple_assignment%5#0, exists1#0
debug: Found equivalence set: tuple_assignment%6#0, staked#0
debug: Found equivalence set: tuple_assignment%7#0, exists4#0
debug: Found equivalence set: value%1#0, balance#0
debug: Found equivalence set: avg_payout_or_bonus#0, current_avg_block_payout#0
debug: Found equivalence set: farm_amount#2, farm_amount#3
debug: Found equivalence set: ternary_result%0#2, farm_amount_algo#0
debug: Copy propagation made 20 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 86400u 365u) to 31536000u
debug: Simplified (concat 0x tmp%9#0) to tmp%9#0
debug: Simplified (concat 0x tmp%11#0) to tmp%11#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (extract3 maybe_value%1#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) maybe_value%1#0) // on error: Index access is out of bounds
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@21 with block@6 in block@22
debug: Merged linear block@21 into block@6
debug: Replaced predecessor block@30 with block@29 in block@8
debug: Replaced predecessor block@30 with block@29 in block@7
debug: Merged linear block@30 into block@29
debug: Replaced predecessor block@12 with block@9 in block@16
debug: Replaced predecessor block@12 with block@9 in block@13
debug: Merged linear block@12 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@28 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let val_as_bytes%1#0: bytes = (itob staked#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:187:28-61, ir_type=biguint, name='tmp%19', version=0),)
debug: Replacing redundant declaration let b_zeros%1#0: bytes = (bzero 8u) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:197:25-56, ir_type=bytes, name='b_zeros%0', version=0),)
debug: Replacing redundant declaration let b_zeros%2#0: bytes = (bzero 8u) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:197:25-56, ir_type=bytes, name='b_zeros%0', version=0),)
debug: Replacing redundant declaration let tmp%11#0: bytes = (itob recipient_app_id#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:175:11-41, ir_type=bytes, name='tmp%9', version=0),)
debug: Replacing redundant declaration let val_as_bytes%0#0: bytes = (itob balance#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:172:12-51, ir_type=biguint, name='tmp%7', version=0),)
debug: Found equivalence set: tmp%9#0, tmp%11#0
debug: Found equivalence set: tmp%7#0, val_as_bytes%0#0
debug: Found equivalence set: tmp%19#0, val_as_bytes%1#0
debug: Found equivalence set: b_zeros%0#0, b_zeros%1#0, b_zeros%2#0
debug: Copy propagation made 5 modifications
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:217:25 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: ternary_result%0#2, optin_mbr#0
debug: Found equivalence set: tmp%1#1, tmp%7#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%3#0) to tmp%3#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Merged linear block@4 into block@3
debug: Merged linear block@5 into block@3
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
debug: Simplified (extract3 cost#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) cost#0) // on error: Index access is out of bounds
debug: Simplified (extract3 cost#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) cost#0) // on error: Index access is out of bounds
debug: Simplified (extract3 cost#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) cost#0) // on error: Index access is out of bounds
debug: Simplified (extract3 cost#0 24u 8u) // on error: Index access is out of bounds to ((extract 24 8) cost#0) // on error: Index access is out of bounds
debug: Simplified (extract3 cost#0 32u 8u) // on error: Index access is out of bounds to ((extract 32 8) cost#0) // on error: Index access is out of bounds
debug: Simplified (extract3 cost#0 40u 8u) // on error: Index access is out of bounds to ((extract 40 8) cost#0) // on error: Index access is out of bounds
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:270:16 debug: inlining call to smart_contracts.common.math.max in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: max_duration#0, reinterpret_bytes%0#0
debug: Found equivalence set: tmp%5#0, b#0
debug: Found equivalence set: tmp%1#1, tmp%6#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 86400u 45u) to 3888000u
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable a#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:324:13 debug: inlining call to smart_contracts.common.send.optin in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, recipient_asa_id#0
debug: Found equivalence set: tuple_assignment%1#0, exists#0
debug: Found equivalence set: farm_asset#0, asset#0
debug: Copy propagation made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x tmp%20#0) to tmp%20#0
debug: Simplified (extract3 tmp%7#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) tmp%7#0) // on error: Index access is out of bounds
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable fee#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Removing unused variable tmp%21#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@1 in block@4
debug: Merged linear block@3 into block@1
debug: Replaced predecessor block@4 with block@1 in block@2
debug: Merged linear block@4 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%20#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:293:22-53, ir_type=bytes, name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%20#0
debug: Copy propagation made 1 modifications
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, copy%0#0, state#0
debug: Found equivalence set: val_as_bytes%0#0, assigned_value%0#0
debug: Found equivalence set: updated_data%0#0, state#1, copy%1#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
debug: Simplified (concat 0x tmp%20#0) to tmp%20#0
debug: Simplified (extract3 state#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 tmp%7#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) tmp%7#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
debug: Simplified (replace3 state#0 16u val_as_bytes%0#0) to ((replace2 16) state#0 val_as_bytes%0#0)
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%21#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%2#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:344:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%18#0: bytes = ((extract 16 8) state#0) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:364:27-58, ir_type=bytes, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%20#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:344:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%2#0, tmp%20#0
debug: Found equivalence set: tmp%15#0, tmp%18#0
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let tmp%19#0: uint64 = (btoi tmp%15#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:364:27-65, ir_type=uint64, name='tmp%16', version=0),)
debug: Found equivalence set: tmp%16#0, tmp%19#0
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let to_encode%0#0: uint64 = (+ tmp%16#0 duration_blocks#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:364:27-83, ir_type=uint64, name='tmp%17', version=0),)
debug: Found equivalence set: tmp%17#0, to_encode%0#0
debug: Copy propagation made 1 modifications
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, copy%0#0, state#0
debug: Found equivalence set: val_as_bytes%0#0, assigned_value%0#0
debug: Found equivalence set: updated_data%0#0, state#1, copy%1#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
debug: Simplified (concat 0x tmp%12#0) to tmp%12#0
debug: Simplified (extract3 state#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) state#0) // on error: Index access is out of bounds
debug: Simplified (replace3 state#0 8u val_as_bytes%0#0) to ((replace2 8) state#0 val_as_bytes%0#0)
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%13#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%2#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:385:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%12#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:385:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%2#0, tmp%12#0
debug: Copy propagation made 2 modifications
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%1#0, copy%0#0, state#0
debug: Found equivalence set: recipient_app#0, inner_txn_params%0%%param_ApplicationID_idx_0#0
debug: Found equivalence set: val_as_bytes%0#0, assigned_value%0#0
debug: Found equivalence set: updated_data%0#0, state#2
debug: Found equivalence set: val_as_bytes%1#0, assigned_value%1#0
debug: Found equivalence set: updated_data%1#0, state#3, copy%1#0
debug: Copy propagation made 7 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
debug: Simplified (concat 0x tmp%5#0) to tmp%5#0
debug: Simplified (+ 0u tmp%12#0) to tmp%12#0
debug: Simplified (concat 0x tmp%28#0) to tmp%28#0
debug: Simplified (concat 0x tmp%30#0) to tmp%30#0
debug: Simplified (extract3 state#0 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 24u 8u) // on error: Index access is out of bounds to ((extract 24 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) state#0) // on error: Index access is out of bounds
debug: Simplified (extract3 state#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) state#0) // on error: Index access is out of bounds
debug: Simplified (replace3 state#0 24u val_as_bytes%0#0) to ((replace2 24) state#0 val_as_bytes%0#0)
debug: Simplified (extract3 state#2 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#2) // on error: Index access is out of bounds
debug: Simplified (replace3 state#2 16u val_as_bytes%1#0) to ((replace2 16) state#2 val_as_bytes%1#0)
debug: Simplified (extract3 state#3 16u 8u) // on error: Index access is out of bounds to ((extract 16 8) state#3) // on error: Index access is out of bounds
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable txn_fuel_spent#0
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Removing unused variable txn_fuel_spent#2
debug: Removing unused variable reinterpret_biguint%4#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%31#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Merged linear block@4 into block@3
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%2#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%5#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let val_as_bytes%0#0: bytes = (itob block_round#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:422:22-57, ir_type=biguint, name='tmp%7', version=0),)
debug: Replacing redundant declaration let tmp%28#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%30#0: bytes = (itob recipient_app#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:408:22-49, ir_type=bytes, name='tmp%0', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%2#0, tmp%5#0, tmp%28#0, tmp%30#0
debug: Found equivalence set: tmp%7#0, val_as_bytes%0#0
debug: Copy propagation made 5 modifications
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:502:9 debug: inlining call to smart_contracts.common.send.axfer_closeout in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: asset#0, asset#1
debug: Found equivalence set: maybe_value%0#0, receiver#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== value%0#0 0u) to (! value%0#0)
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable fee#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%0#0) to tmp%0#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%2#0) to tmp%2#0
debug: Simplified (concat 0x tmp%4#0) to tmp%4#0
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@6 with block@5 in block@1
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: bytes = (itob box_name#0) with copy of existing registers (Register(source_location=smart_contracts/dualstakefarm/contract.py:522:15-37, ir_type=bytes, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%4#0
debug: Copy propagation made 1 modifications
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: start_round#0, rnd#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@18
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: removing unused subroutine smart_contracts.common.send.optin
debug: removing unused subroutine smart_contracts.common.send.axfer_closeout
debug: removing unused subroutine smart_contracts.common.math.max
debug: removing unused subroutine smart_contracts.common.validate.axfer
debug: removing unused subroutine smart_contracts.common.validate.payment
debug: removing unused subroutine smart_contracts.common.round_time.get_block_rewards
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__init__
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.noop
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_platform_fee_per_block
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Begin optimization pass 2/100
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__ in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@20
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.algo_pay
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.custom.ensure
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@28 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__
debug: Begin optimization pass 3/100
debug: marking simple function smart_contracts.common.custom.ensure for inlining (complexity=3 <= threshold=3)
debug: marking simple function smart_contracts.dualstakefarm.contract.get_tm2_net_amt for inlining (complexity=3 <= threshold=3)
debug: marking simple function smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block for inlining (complexity=3 <= threshold=3)
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.algo_pay
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.custom.ensure
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/common/validate.py:18:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.axfer_amount_exact
smart_contracts/common/validate.py:19:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.axfer_amount_exact
smart_contracts/common/validate.py:30:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#1, cond#0
debug: Found equivalence set: tmp%4#0, cond#1
debug: Found equivalence set: tmp%1#0, cond#2
debug: Copy propagation made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Removing unused variable msg#1
debug: Removing unused variable msg#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@5 with block@3 in block@6
debug: Replaced predecessor block@5 with block@3 in block@7
debug: Merged linear block@5 into block@3
debug: Replaced predecessor block@8 with block@7 in block@9
debug: Merged linear block@8 into block@7
debug: Replaced predecessor block@9 with block@7 in block@10
debug: Replaced predecessor block@9 with block@7 in block@11
debug: Merged linear block@9 into block@7
debug: Merged linear block@12 into block@11
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/common/validate.py:38:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.payment_amount_exact
smart_contracts/common/validate.py:52:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, cond#0
debug: Found equivalence set: tmp%1#0, cond#1
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Removing unused variable msg#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@5 with block@3 in block@6
debug: Replaced predecessor block@5 with block@3 in block@7
debug: Merged linear block@5 into block@3
debug: Merged linear block@8 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/common/round_time.py:27:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.common.round_time.get_round_time
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%4#0, cond#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@1 in block@4
debug: Replaced predecessor block@3 with block@1 in block@5
debug: Merged linear block@3 into block@1
debug: Replaced predecessor block@6 with block@5 in block@2
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:55:45 debug: inlining call to smart_contracts.dualstakefarm.contract.get_tm2_net_amt in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
smart_contracts/dualstakefarm/contract.py:49:45 debug: inlining call to smart_contracts.dualstakefarm.contract.get_tm2_net_amt in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
smart_contracts/dualstakefarm/contract.py:44:5 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
smart_contracts/dualstakefarm/contract.py:156:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: and_result%0#2, cond#1
debug: Found equivalence set: and_result%0#5, cond#0
debug: Found equivalence set: farm_amount#2, amt#1, amt#0
debug: Found equivalence set: tmp%2#3, tmp%6#1
debug: Found equivalence set: tmp%2#2, tmp%14#1
debug: Copy propagation made 8 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#1
debug: Removing unused variable msg#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@38 with block@6 in block@39
debug: Replaced predecessor block@38 with block@6 in block@40
debug: Merged linear block@38 into block@6
debug: Replaced predecessor block@41 with block@40 in block@22
debug: Merged linear block@41 into block@40
debug: Replaced predecessor block@34 with block@17 in block@35
debug: Replaced predecessor block@34 with block@17 in block@36
debug: Merged linear block@34 into block@17
debug: Replaced predecessor block@37 with block@36 in block@19
debug: Replaced predecessor block@37 with block@36 in block@18
debug: Merged linear block@37 into block@36
debug: Replaced predecessor block@32 with block@18 in block@33
debug: Merged linear block@32 into block@18
debug: Replaced predecessor block@33 with block@18 in block@20
debug: Merged linear block@33 into block@18
debug: Replaced predecessor block@30 with block@19 in block@31
debug: Merged linear block@30 into block@19
debug: Replaced predecessor block@31 with block@19 in block@20
debug: Merged linear block@31 into block@19
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@28 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:335:41 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
smart_contracts/dualstakefarm/contract.py:293:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
smart_contracts/dualstakefarm/contract.py:295:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
smart_contracts/dualstakefarm/contract.py:318:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, cond#0
debug: Found equivalence set: tmp%4#0, cond#1
debug: Found equivalence set: tmp%13#0, cond#2
debug: Found equivalence set: tmp%2#1, tmp%22#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Removing unused variable cond#1
debug: Removing unused variable msg#1
debug: Removing unused variable msg#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplified branch on !cond#0 by swapping zero and non-zero targets
debug: simplified terminator of block@5 from goto cond#0 ? block@7 : block@6 to goto maybe_exists%0#0 ? block@6 : block@7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@0 in block@7
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@8 with block@7 in block@9
debug: Merged linear block@8 into block@7
debug: Replaced predecessor block@9 with block@7 in block@10
debug: Replaced predecessor block@9 with block@7 in block@11
debug: Merged linear block@9 into block@7
debug: Replaced predecessor block@12 with block@11 in block@13
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@13 with block@11 in block@14
debug: Replaced predecessor block@13 with block@11 in block@15
debug: Merged linear block@13 into block@11
debug: Replaced predecessor block@16 with block@15 in block@1
debug: Replaced predecessor block@16 with block@15 in block@2
debug: Merged linear block@16 into block@15
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:344:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
smart_contracts/dualstakefarm/contract.py:375:41 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_exists%0#0, cond#0
debug: Found equivalence set: tmp%2#0, tmp%22#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@5 with block@3 in block@6
debug: Merged linear block@5 into block@3
debug: Merged linear block@6 into block@3
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:385:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_exists%0#0, cond#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Merged linear block@4 into block@3
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:422:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
smart_contracts/dualstakefarm/contract.py:425:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
smart_contracts/dualstakefarm/contract.py:408:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_exists%0#0, cond#2
debug: Found equivalence set: tmp%8#0, cond#0
debug: Found equivalence set: tmp%10#0, cond#1
debug: Copy propagation made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#2
debug: Removing unused variable msg#0
debug: Removing unused variable msg#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@17 with block@0 in block@18
debug: Replaced predecessor block@17 with block@0 in block@19
debug: Merged linear block@17 into block@0
debug: Replaced predecessor block@20 with block@19 in block@2
debug: Replaced predecessor block@20 with block@19 in block@1
debug: Merged linear block@20 into block@19
debug: Replaced predecessor block@9 with block@2 in block@10
debug: Replaced predecessor block@9 with block@2 in block@11
debug: Merged linear block@9 into block@2
debug: Replaced predecessor block@12 with block@11 in block@13
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@13 with block@11 in block@14
debug: Replaced predecessor block@13 with block@11 in block@15
debug: Merged linear block@13 into block@11
debug: Replaced predecessor block@16 with block@15 in block@5
debug: Replaced predecessor block@16 with block@15 in block@3
debug: Merged linear block@16 into block@15
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:481:44 debug: inlining call to smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
smart_contracts/dualstakefarm/contract.py:483:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#1, tmp%1#0
debug: Found equivalence set: tmp%5#0, cond#0
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Replaced predecessor block@3 with block@0 in block@5
debug: Merged linear block@3 into block@0
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:496:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
smart_contracts/dualstakefarm/contract.py:499:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, cond#0
debug: Found equivalence set: tmp%4#0, cond#1
debug: Copy propagation made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Removing unused variable msg#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplified branch on !cond#1 by swapping zero and non-zero targets
debug: simplified terminator of block@5 from goto cond#1 ? block@7 : block@6 to goto value%0#0 ? block@6 : block@7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@5
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@5 with block@3 in block@7
debug: Replaced predecessor block@5 with block@3 in block@6
debug: Merged linear block@5 into block@3
debug: Merged linear block@8 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Perform Subroutine Inlining
smart_contracts/dualstakefarm/contract.py:534:9 debug: inlining call to smart_contracts.common.custom.ensure in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, cond#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable msg#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Merged linear block@4 into block@3
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: removing unused subroutine smart_contracts.common.custom.ensure
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.get_tm2_net_amt
debug: removing unused subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_spend_per_block
debug: Begin optimization pass 4/100
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.algo_pay
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@28 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable cond#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable cond#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.axfer
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.send.algo_pay
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.math.safe_subtract
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.axfer_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.validate.payment_amount_exact
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.common.round_time.get_round_time
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@28 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 5, ending loop
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing tmp%0#0 with [tmp%0#3, tmp%0#1]
debug: Coalescing smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 with [smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#1, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#2, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#3, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#4, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#5, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#6, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#7, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#8, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#9, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#10, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#11, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#12, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#13, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#14, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#15, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#16, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#17, smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#18]
debug: Coalescing resulted in 58 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.common.send.axfer
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.send.axfer using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.send.axfer
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.common.send.algo_pay
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.send.algo_pay using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.send.algo_pay
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.common.math.safe_subtract
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.math.safe_subtract using strategy RootOperandGrouping
debug: Coalescing ternary_result%0#0 with [ternary_result%0#4, ternary_result%0#2]
debug: Coalescing resulted in 5 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.math.safe_subtract
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.common.validate.axfer_amount_exact
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.validate.axfer_amount_exact using strategy RootOperandGrouping
debug: Coalescing cond#0 with [cond#1, cond#2]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.validate.axfer_amount_exact
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.common.validate.payment_amount_exact
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.validate.payment_amount_exact using strategy RootOperandGrouping
debug: Coalescing cond#0 with [cond#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.validate.payment_amount_exact
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.common.round_time.get_round_time
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.common.round_time.get_round_time using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.common.round_time.get_round_time
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.delete
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr using strategy RootOperandGrouping
debug: Coalescing exists2#0 with [exists2#1]
debug: Coalescing exists3#0 with [exists3#1]
debug: Coalescing exists1#0 with [exists1#1]
debug: Coalescing and_result%0#0 with [and_result%0#1, and_result%0#3, and_result%0#4]
debug: Coalescing cond#0 with [cond#2, cond#1, cond#3]
debug: Coalescing tmp%0#0 with [tmp%0#2, tmp%0#1, tmp%0#4, tmp%0#3]
debug: Coalescing tmp%1#0 with [tmp%1#2, tmp%1#4, tmp%1#3]
debug: Coalescing tmp%2#0 with [tmp%2#1, tmp%2#3, tmp%2#2]
debug: Coalescing num_payouts#0 with [num_payouts#6, num_payouts#1, num_payouts#2, num_payouts#3]
debug: Coalescing sum_payouts#0 with [sum_payouts#6, sum_payouts#1, sum_payouts#2, sum_payouts#3]
debug: Coalescing rnd_delta#0 with [rnd_delta#5, rnd_delta#1, rnd_delta#2]
debug: Coalescing ternary_result%0#0 with [ternary_result%0#3, ternary_result%0#5, ternary_result%0#1]
debug: Coalescing avg_payout_or_bonus#0 with [avg_payout_or_bonus#1]
debug: Coalescing tmp%3#0 with [tmp%3#1]
debug: Coalescing tmp%8#0 with [tmp%8#1]
debug: Coalescing farm_amount#0 with [farm_amount#5, farm_amount#1, farm_amount#2]
debug: Coalescing tmp%15#0 with [tmp%15#1]
debug: Coalescing tmp%16#0 with [tmp%16#1]
debug: Coalescing farm_amount_algo#0 with [farm_amount_algo#1]
debug: Coalescing resulted in 106 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: ready: 
debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: * to_do rnd_delta#0
debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: ready: 
debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: * to_do rnd_delta#0
debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
debug: ready: num_payouts#9, sum_payouts#9
debug: to_do: num_payouts#9, sum_payouts#9
debug: * avail sum_payouts#9
debug: * avail sum_payouts#0
debug: * avail num_payouts#9
debug: * avail num_payouts#0
debug: * to_do sum_payouts#9
debug: * to_do num_payouts#9
debug: loc: {num_payouts#9=None, sum_payouts#9=None, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {num_payouts#9=num_payouts#0, sum_payouts#9=sum_payouts#0}
debug: ready: num_payouts#9, sum_payouts#9
debug: to_do: num_payouts#9, sum_payouts#9
debug: * avail sum_payouts#9
debug: * avail sum_payouts#0
debug: * avail num_payouts#9
debug: * avail num_payouts#0
debug: * to_do sum_payouts#9
debug: * to_do num_payouts#9
debug: loc: {num_payouts#0=None, sum_payouts#0=None, num_payouts#9=num_payouts#9, sum_payouts#9=sum_payouts#9}
debug: pred: {num_payouts#0=num_payouts#9, sum_payouts#0=sum_payouts#9}
debug: ready: num_payouts#0, sum_payouts#0
debug: to_do: num_payouts#0, sum_payouts#0
debug: * avail sum_payouts#0
debug: * avail sum_payouts#9
debug: * avail num_payouts#0
debug: * avail num_payouts#9
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: loc: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: pred: {rnd_delta#0=rnd_delta#0, num_payouts#0=num_payouts#0, sum_payouts#0=sum_payouts#0}
debug: ready: 
debug: to_do: rnd_delta#0, num_payouts#0, sum_payouts#0
debug: * to_do sum_payouts#0
debug: * to_do num_payouts#0
debug: * to_do rnd_delta#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost using strategy RootOperandGrouping
debug: Coalescing tmp%1#0 with [tmp%1#1]
debug: Coalescing ternary_result%0#0 with [ternary_result%0#1]
debug: Coalescing optin_mbr#0 with [optin_mbr#1]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#1]
debug: Coalescing resulted in 11 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_algo_cost_and_max_duration
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_max_duration
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks using strategy RootOperandGrouping
debug: Coalescing state#0 with [state#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block using strategy RootOperandGrouping
debug: Coalescing state#0 with [state#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout using strategy RootOperandGrouping
debug: Coalescing cond#0 with [cond#2, cond#1]
debug: Coalescing state#0 with [state#2, state#3]
debug: Coalescing txn_fuel_spent#3 with [txn_fuel_spent#4]
debug: Coalescing resulted in 12 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees using strategy RootOperandGrouping
debug: Coalescing tmp%2#0 with [tmp%2#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_max_duration_days
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.update_min_duration_blocks
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_state
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states using strategy RootOperandGrouping
debug: Coalescing k#0 with [k#5, k#1, k#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers using strategy RootOperandGrouping
debug: Coalescing rnd#1 with [rnd#4, rnd#2]
debug: Coalescing resulted in 5 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_ix_rewards_per_block
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in smart_contracts.dualstakefarm.contract.DualstakeFarm.get_txn_fee_per_block
debug: Performing post-SSA optimizations at level 1
info: optimizing clear program of smart_contracts.dualstakefarm.contract.DualstakeFarm at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 1, ending loop
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Inserted main.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_call___init__@1.ops[1]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced main_call___init__@1.ops[4]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[18]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_project_apr_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_project_apr_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_project_apr_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_project_apr_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_project_apr_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_project_apr_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_project_apr_route@5.ops[15]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_project_apr_route@5.ops[17]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_project_apr_route@5.ops[19]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_project_apr_route@5.ops[21]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_project_apr_route@5.ops[23]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_project_apr_route@5.ops[25]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_project_apr_route@5.ops[31]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_project_apr_route@5.ops[33]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_project_apr_route@5.ops[36]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_project_apr_route@5.ops[38]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_project_apr_route@5.ops[27]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_project_apr_route@5.ops[30]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_get_algo_cost_route@6.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_get_algo_cost_route@6.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_get_algo_cost_route@6.ops[10]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[12]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_get_algo_cost_route@6.ops[15]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[17]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_get_algo_cost_route@6.ops[19]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[21]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_get_algo_cost_route@6.ops[25]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[27]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_get_algo_cost_route@6.ops[29]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[31]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_get_algo_cost_route@6.ops[35]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[37]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_get_algo_cost_route@6.ops[48]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[50]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_get_algo_cost_route@6.ops[53]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[55]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_get_algo_cost_route@6.ops[44]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[47]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_get_algo_cost_route@6.ops[39]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[43]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_get_algo_cost_route@6.ops[33]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[43]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_get_algo_cost_route@6.ops[23]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_get_algo_cost_route@6.ops[43]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[1]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[3]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[5]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[7]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[10]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[12]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[15]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[17]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[19]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[21]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[25]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[27]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[29]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[31]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[35]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[37]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[48]: 'l-store-copy tmp%39#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[50]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[53]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[55]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[44]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[47]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[39]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[43]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[33]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[43]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_get_algo_cost_and_max_duration_route@7.ops[23]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_get_algo_cost_and_max_duration_route@7.ops[43]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_create_farm_route@8.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_create_farm_route@8.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_create_farm_route@8.ops[5]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_create_farm_route@8.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_create_farm_route@8.ops[10]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_create_farm_route@8.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_create_farm_route@8.ops[15]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_create_farm_route@8.ops[17]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_create_farm_route@8.ops[19]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_create_farm_route@8.ops[21]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_create_farm_route@8.ops[25]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_create_farm_route@8.ops[27]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_create_farm_route@8.ops[29]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_create_farm_route@8.ops[31]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_create_farm_route@8.ops[35]: 'l-store-copy tmp%50#0 0'
debug: Replaced main_create_farm_route@8.ops[37]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main_create_farm_route@8.ops[41]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_create_farm_route@8.ops[43]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main_create_farm_route@8.ops[52]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_create_farm_route@8.ops[54]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_create_farm_route@8.ops[45]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_create_farm_route@8.ops[39]: 'l-store-copy tmp%51#0 0'
debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted main_create_farm_route@8.ops[33]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_create_farm_route@8.ops[23]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_create_farm_route@8.ops[50]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[1]: 'l-store-copy tmp%54#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[3]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[5]: 'l-store-copy tmp%55#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[7]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[10]: 'l-store-copy tmp%56#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[12]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[15]: 'l-store-copy tmp%58#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[17]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[19]: 'l-store-copy tmp%59#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[21]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[25]: 'l-store-copy tmp%61#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[27]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[34]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[36]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[29]: 'l-store-copy tmp%62#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[32]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted main_extend_duration_blocks_route@9.ops[23]: 'l-store-copy tmp%60#0 0'
debug: Replaced main_extend_duration_blocks_route@9.ops[32]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[1]: 'l-store-copy tmp%63#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[3]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[5]: 'l-store-copy tmp%64#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[7]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[10]: 'l-store-copy tmp%65#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[12]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[15]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[17]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[19]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[21]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[25]: 'l-store-copy tmp%70#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[27]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[34]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[36]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[29]: 'l-store-copy tmp%71#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[32]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted main_extend_amount_per_block_route@10.ops[23]: 'l-store-copy tmp%69#0 0'
debug: Replaced main_extend_amount_per_block_route@10.ops[32]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted main_payout_route@11.ops[1]: 'l-store-copy tmp%72#0 0'
debug: Replaced main_payout_route@11.ops[3]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted main_payout_route@11.ops[5]: 'l-store-copy tmp%73#0 0'
debug: Replaced main_payout_route@11.ops[7]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted main_payout_route@11.ops[10]: 'l-store-copy tmp%74#0 0'
debug: Replaced main_payout_route@11.ops[12]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted main_payout_route@11.ops[15]: 'l-store-copy tmp%76#0 0'
debug: Replaced main_payout_route@11.ops[17]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted main_payout_route@11.ops[19]: 'l-store-copy tmp%77#0 0'
debug: Replaced main_payout_route@11.ops[21]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted main_payout_route@11.ops[25]: 'l-store-copy tmp%79#0 0'
debug: Replaced main_payout_route@11.ops[27]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted main_payout_route@11.ops[37]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_payout_route@11.ops[39]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_payout_route@11.ops[31]: 'l-store-copy tmp%81#0 0'
debug: Replaced main_payout_route@11.ops[35]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted main_payout_route@11.ops[29]: 'l-store-copy tmp%80#0 0'
debug: Replaced main_payout_route@11.ops[35]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted main_payout_route@11.ops[23]: 'l-store-copy tmp%78#0 0'
debug: Replaced main_payout_route@11.ops[35]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted main_noop_route@12.ops[1]: 'l-store-copy tmp%82#0 0'
debug: Replaced main_noop_route@12.ops[3]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted main_noop_route@12.ops[5]: 'l-store-copy tmp%83#0 0'
debug: Replaced main_noop_route@12.ops[7]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted main_noop_route@12.ops[10]: 'l-store-copy tmp%84#0 0'
debug: Replaced main_noop_route@12.ops[12]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted main_noop_route@12.ops[15]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_noop_route@12.ops[17]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_withdraw_fees_route@13.ops[1]: 'l-store-copy tmp%86#0 0'
debug: Replaced main_withdraw_fees_route@13.ops[3]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted main_withdraw_fees_route@13.ops[5]: 'l-store-copy tmp%87#0 0'
debug: Replaced main_withdraw_fees_route@13.ops[7]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted main_withdraw_fees_route@13.ops[10]: 'l-store-copy tmp%88#0 0'
debug: Replaced main_withdraw_fees_route@13.ops[12]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted main_withdraw_fees_route@13.ops[15]: 'l-store-copy tmp%90#0 0'
debug: Replaced main_withdraw_fees_route@13.ops[17]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted main_withdraw_fees_route@13.ops[19]: 'l-store-copy tmp%91#0 0'
debug: Replaced main_withdraw_fees_route@13.ops[21]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted main_withdraw_fees_route@13.ops[24]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_withdraw_fees_route@13.ops[26]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_optout_route@14.ops[1]: 'l-store-copy tmp%92#0 0'
debug: Replaced main_optout_route@14.ops[3]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted main_optout_route@14.ops[5]: 'l-store-copy tmp%93#0 0'
debug: Replaced main_optout_route@14.ops[7]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
debug: Inserted main_optout_route@14.ops[10]: 'l-store-copy tmp%94#0 0'
debug: Replaced main_optout_route@14.ops[12]: 'v-load tmp%94#0' with 'l-load tmp%94#0'
debug: Inserted main_optout_route@14.ops[15]: 'l-store-copy tmp%96#0 0'
debug: Replaced main_optout_route@14.ops[17]: 'v-load tmp%96#0' with 'l-load tmp%96#0'
debug: Inserted main_optout_route@14.ops[19]: 'l-store-copy tmp%97#0 0'
debug: Replaced main_optout_route@14.ops[21]: 'v-load tmp%97#0' with 'l-load tmp%97#0'
debug: Inserted main_optout_route@14.ops[23]: 'l-store-copy tmp%98#0 0'
debug: Replaced main_optout_route@14.ops[25]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
debug: Inserted main_optout_route@14.ops[28]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_optout_route@14.ops[30]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_update_max_duration_days_route@15.ops[1]: 'l-store-copy tmp%99#0 0'
debug: Replaced main_update_max_duration_days_route@15.ops[3]: 'v-load tmp%99#0' with 'l-load tmp%99#0'
debug: Inserted main_update_max_duration_days_route@15.ops[5]: 'l-store-copy tmp%100#0 0'
debug: Replaced main_update_max_duration_days_route@15.ops[7]: 'v-load tmp%100#0' with 'l-load tmp%100#0'
debug: Inserted main_update_max_duration_days_route@15.ops[10]: 'l-store-copy tmp%101#0 0'
debug: Replaced main_update_max_duration_days_route@15.ops[12]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
debug: Inserted main_update_max_duration_days_route@15.ops[15]: 'l-store-copy tmp%103#0 0'
debug: Replaced main_update_max_duration_days_route@15.ops[17]: 'v-load tmp%103#0' with 'l-load tmp%103#0'
debug: Inserted main_update_max_duration_days_route@15.ops[19]: 'l-store-copy tmp%104#0 0'
debug: Replaced main_update_max_duration_days_route@15.ops[21]: 'v-load tmp%104#0' with 'l-load tmp%104#0'
debug: Inserted main_update_max_duration_days_route@15.ops[24]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_update_max_duration_days_route@15.ops[26]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_update_min_duration_blocks_route@16.ops[1]: 'l-store-copy tmp%105#0 0'
debug: Replaced main_update_min_duration_blocks_route@16.ops[3]: 'v-load tmp%105#0' with 'l-load tmp%105#0'
debug: Inserted main_update_min_duration_blocks_route@16.ops[5]: 'l-store-copy tmp%106#0 0'
debug: Replaced main_update_min_duration_blocks_route@16.ops[7]: 'v-load tmp%106#0' with 'l-load tmp%106#0'
debug: Inserted main_update_min_duration_blocks_route@16.ops[10]: 'l-store-copy tmp%107#0 0'
debug: Replaced main_update_min_duration_blocks_route@16.ops[12]: 'v-load tmp%107#0' with 'l-load tmp%107#0'
debug: Inserted main_update_min_duration_blocks_route@16.ops[15]: 'l-store-copy tmp%109#0 0'
debug: Replaced main_update_min_duration_blocks_route@16.ops[17]: 'v-load tmp%109#0' with 'l-load tmp%109#0'
debug: Inserted main_update_min_duration_blocks_route@16.ops[19]: 'l-store-copy tmp%110#0 0'
debug: Replaced main_update_min_duration_blocks_route@16.ops[21]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_update_min_duration_blocks_route@16.ops[24]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_update_min_duration_blocks_route@16.ops[26]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_get_state_route@17.ops[1]: 'l-store-copy tmp%111#0 0'
debug: Replaced main_get_state_route@17.ops[3]: 'v-load tmp%111#0' with 'l-load tmp%111#0'
debug: Inserted main_get_state_route@17.ops[5]: 'l-store-copy tmp%112#0 0'
debug: Replaced main_get_state_route@17.ops[7]: 'v-load tmp%112#0' with 'l-load tmp%112#0'
debug: Inserted main_get_state_route@17.ops[10]: 'l-store-copy tmp%113#0 0'
debug: Replaced main_get_state_route@17.ops[12]: 'v-load tmp%113#0' with 'l-load tmp%113#0'
debug: Inserted main_get_state_route@17.ops[15]: 'l-store-copy tmp%115#0 0'
debug: Replaced main_get_state_route@17.ops[17]: 'v-load tmp%115#0' with 'l-load tmp%115#0'
debug: Inserted main_get_state_route@17.ops[19]: 'l-store-copy tmp%116#0 0'
debug: Replaced main_get_state_route@17.ops[21]: 'v-load tmp%116#0' with 'l-load tmp%116#0'
debug: Inserted main_get_state_route@17.ops[23]: 'l-store-copy tmp%117#0 0'
debug: Replaced main_get_state_route@17.ops[25]: 'v-load tmp%117#0' with 'l-load tmp%117#0'
debug: Inserted main_get_state_route@17.ops[31]: 'l-store-copy tmp%119#0 0'
debug: Replaced main_get_state_route@17.ops[33]: 'v-load tmp%119#0' with 'l-load tmp%119#0'
debug: Inserted main_get_state_route@17.ops[36]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_get_state_route@17.ops[38]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_get_state_route@17.ops[27]: 'l-store-copy tmp%118#0 0'
debug: Replaced main_get_state_route@17.ops[30]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
debug: Inserted main_log_states_route@18.ops[1]: 'l-store-copy tmp%120#0 0'
debug: Replaced main_log_states_route@18.ops[3]: 'v-load tmp%120#0' with 'l-load tmp%120#0'
debug: Inserted main_log_states_route@18.ops[5]: 'l-store-copy tmp%121#0 0'
debug: Replaced main_log_states_route@18.ops[7]: 'v-load tmp%121#0' with 'l-load tmp%121#0'
debug: Inserted main_log_states_route@18.ops[10]: 'l-store-copy tmp%122#0 0'
debug: Replaced main_log_states_route@18.ops[12]: 'v-load tmp%122#0' with 'l-load tmp%122#0'
debug: Inserted main_log_states_route@18.ops[15]: 'l-store-copy tmp%124#0 0'
debug: Replaced main_log_states_route@18.ops[17]: 'v-load tmp%124#0' with 'l-load tmp%124#0'
debug: Inserted main_log_states_route@18.ops[20]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_log_states_route@18.ops[22]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_log_block_proposers_route@19.ops[1]: 'l-store-copy tmp%125#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[3]: 'v-load tmp%125#0' with 'l-load tmp%125#0'
debug: Inserted main_log_block_proposers_route@19.ops[5]: 'l-store-copy tmp%126#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[7]: 'v-load tmp%126#0' with 'l-load tmp%126#0'
debug: Inserted main_log_block_proposers_route@19.ops[10]: 'l-store-copy tmp%127#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[12]: 'v-load tmp%127#0' with 'l-load tmp%127#0'
debug: Inserted main_log_block_proposers_route@19.ops[15]: 'l-store-copy tmp%129#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[17]: 'v-load tmp%129#0' with 'l-load tmp%129#0'
debug: Inserted main_log_block_proposers_route@19.ops[21]: 'l-store-copy tmp%131#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[23]: 'v-load tmp%131#0' with 'l-load tmp%131#0'
debug: Inserted main_log_block_proposers_route@19.ops[30]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[32]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_log_block_proposers_route@19.ops[25]: 'l-store-copy tmp%132#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[28]: 'v-load tmp%132#0' with 'l-load tmp%132#0'
debug: Inserted main_log_block_proposers_route@19.ops[19]: 'l-store-copy tmp%130#0 0'
debug: Replaced main_log_block_proposers_route@19.ops[28]: 'v-load tmp%130#0' with 'l-load tmp%130#0'
debug: Inserted main_bare_routing@20.ops[1]: 'l-store-copy tmp%133#0 0'
debug: Replaced main_bare_routing@20.ops[3]: 'v-load tmp%133#0' with 'l-load tmp%133#0'
debug: Inserted main_update@21.ops[1]: 'l-store-copy tmp%134#0 0'
debug: Replaced main_update@21.ops[3]: 'v-load tmp%134#0' with 'l-load tmp%134#0'
debug: Inserted main_update@21.ops[7]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_update@21.ops[9]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_delete@22.ops[1]: 'l-store-copy tmp%136#0 0'
debug: Replaced main_delete@22.ops[3]: 'v-load tmp%136#0' with 'l-load tmp%136#0'
debug: Inserted main_delete@22.ops[7]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_delete@22.ops[9]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main___algopy_default_create@23.ops[1]: 'l-store-copy tmp%138#0 0'
debug: Replaced main___algopy_default_create@23.ops[3]: 'v-load tmp%138#0' with 'l-load tmp%138#0'
debug: Inserted main___algopy_default_create@23.ops[5]: 'l-store-copy tmp%139#0 0'
debug: Replaced main___algopy_default_create@23.ops[7]: 'v-load tmp%139#0' with 'l-load tmp%139#0'
debug: Inserted main___algopy_default_create@23.ops[10]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@23.ops[12]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@24.ops[1]: 'l-store-copy smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@24.ops[3]: 'v-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0' with 'l-load smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__%0#0'
debug: Inserted safe_subtract.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced safe_subtract.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted axfer_amount_exact.ops[2]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced axfer_amount_exact.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted axfer_amount_exact.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced axfer_amount_exact.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted axfer_amount_exact.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced axfer_amount_exact.ops[15]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted axfer_amount_exact.ops[18]: 'l-store-copy cond#0 0'
debug: Replaced axfer_amount_exact.ops[20]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted axfer_amount_exact_after_if_else@3.ops[8]: 'l-store-copy cond#0 0'
debug: Replaced axfer_amount_exact_after_if_else@3.ops[10]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted axfer_amount_exact_after_if_else@3.ops[4]: 'l-store-copy tmp%3#0 0'
debug: Replaced axfer_amount_exact_after_if_else@3.ops[7]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted axfer_amount_exact_after_if_else@3.ops[2]: 'l-store-copy tmp%2#0 0'
debug: Replaced axfer_amount_exact_after_if_else@3.ops[7]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted axfer_amount_exact_after_if_else@7.ops[2]: 'l-store-copy tmp%5#0 0'
debug: Replaced axfer_amount_exact_after_if_else@7.ops[4]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted axfer_amount_exact_after_if_else@7.ops[7]: 'l-store-copy cond#0 0'
debug: Replaced axfer_amount_exact_after_if_else@7.ops[9]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted payment_amount_exact.ops[2]: 'l-store-copy gtxn_type%0#0 0'
debug: Replaced payment_amount_exact.ops[4]: 'v-load gtxn_type%0#0' with 'l-load gtxn_type%0#0'
debug: Inserted payment_amount_exact.ops[7]: 'l-store-copy gtxn_type_matches%0#0 0'
debug: Replaced payment_amount_exact.ops[9]: 'v-load gtxn_type_matches%0#0' with 'l-load gtxn_type_matches%0#0'
debug: Inserted payment_amount_exact.ops[19]: 'l-store-copy cond#0 0'
debug: Replaced payment_amount_exact.ops[21]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted payment_amount_exact.ops[15]: 'l-store-copy tmp%1#1 0'
debug: Replaced payment_amount_exact.ops[18]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted payment_amount_exact.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced payment_amount_exact.ops[18]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted payment_amount_exact_after_if_else@3.ops[2]: 'l-store-copy tmp%3#0 0'
debug: Replaced payment_amount_exact_after_if_else@3.ops[4]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted payment_amount_exact_after_if_else@3.ops[7]: 'l-store-copy cond#0 0'
debug: Replaced payment_amount_exact_after_if_else@3.ops[9]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted get_round_time.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_round_time.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_round_time.ops[9]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_round_time.ops[11]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_round_time.ops[18]: 'l-store-copy tmp%2#0 0'
debug: Replaced get_round_time.ops[20]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_round_time.ops[7]: 'l-store-copy first_accessible#0 0'
debug: Replaced get_round_time.ops[16]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
debug: Inserted get_round_time_if_body@1.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced get_round_time_if_body@1.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get_round_time_if_body@1.ops[8]: 'l-store-copy cond#0 0'
debug: Replaced get_round_time_if_body@1.ops[10]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted get_round_time_after_if_else@2.ops[13]: 'l-store-copy ts_delta#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[15]: 'v-load ts_delta#0' with 'l-load ts_delta#0'
debug: Inserted get_round_time_after_if_else@2.ops[9]: 'l-store-copy tmp%6#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[12]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted get_round_time_after_if_else@2.ops[1]: 'l-store-copy last_accessible#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[5]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
debug: Inserted get_round_time_after_if_else@2.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced get_round_time_after_if_else@2.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get_round_time_after_if_else@2.ops[3]: 'l-store-copy first_accessible#0 2'
debug: Replaced get_round_time_after_if_else@2.ops[10]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
debug: Inserted get_round_time_after_if_else@2.ops[5]: 'l-store-copy block_delta#0 2'
debug: Replaced get_round_time_after_if_else@2.ops[21]: 'v-load block_delta#0' with 'l-load block_delta#0'
debug: Inserted project_apr.ops[13]: 'l-store-copy exists1#0 1'
debug: Replaced project_apr.ops[21]: 'v-load exists1#0' with 'l-load exists1#0'
debug: Inserted project_apr_bool_true@4.ops[1]: 'l-store-copy and_result%0#0 0'
debug: Replaced project_apr_bool_true@4.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
debug: Inserted project_apr_bool_false@5.ops[1]: 'l-store-copy and_result%0#0 0'
debug: Replaced project_apr_bool_false@5.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
debug: Inserted project_apr_after_if_else@40.ops[13]: 'l-store-copy tmp%0#0 0'
debug: Replaced project_apr_after_if_else@40.ops[15]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted project_apr_after_if_else@40.ops[19]: 'l-store-copy tmp%1#0 0'
debug: Replaced project_apr_after_if_else@40.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted project_apr_after_if_else@40.ops[24]: 'l-store-copy tmp%2#0 0'
debug: Replaced project_apr_after_if_else@40.ops[26]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted project_apr_after_if_else@40.ops[30]: 'l-store-copy tmp%0#0 0'
debug: Replaced project_apr_after_if_else@40.ops[32]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted project_apr_after_if_else@40.ops[38]: 'l-store-copy tmp%1#0 0'
debug: Replaced project_apr_after_if_else@40.ops[40]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted project_apr_after_if_else@40.ops[43]: 'l-store-copy last_accessible#0 0'
debug: Replaced project_apr_after_if_else@40.ops[45]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
debug: Inserted project_apr_after_if_else@40.ops[2]: 'l-store-copy check%0#0 1'
debug: Replaced project_apr_after_if_else@40.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted project_apr_after_if_else@40.ops[9]: 'l-store-copy check%1#0 1'
debug: Replaced project_apr_after_if_else@40.ops[12]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted project_apr_after_if_else@40.ops[4]: 'l-store-copy value%0#0 1'
debug: Replaced project_apr_after_if_else@40.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted project_apr_after_if_else@40.ops[49]: 'l-store-copy last_accessible#0 0'
debug: Replaced project_apr_after_if_else@40.ops[53]: 'v-load last_accessible#0' with 'l-load last_accessible#0'
debug: Inserted project_apr_after_if_else@40.ops[39]: 'l-store-copy first_accessible#0 0'
debug: Replaced project_apr_after_if_else@40.ops[51]: 'v-load first_accessible#0' with 'l-load first_accessible#0'
debug: Inserted project_apr_for_header@22.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced project_apr_for_header@22.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted project_apr_for_body@23.ops[3]: 'l-store-copy rnd#0 0'
debug: Replaced project_apr_for_body@23.ops[5]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted project_apr_for_body@23.ops[7]: 'l-store-copy tmp%2#0 0'
debug: Replaced project_apr_for_body@23.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted project_apr_if_body@24.ops[7]: 'l-store-copy sum_payouts#0 0'
debug: Replaced project_apr_if_body@24.ops[9]: 'v-load sum_payouts#0' with 'l-load sum_payouts#0'
debug: Inserted project_apr_if_body@24.ops[3]: 'l-store-copy num_payouts#0 0'
debug: Replaced project_apr_if_body@24.ops[12]: 'v-load num_payouts#0' with 'l-load num_payouts#0'
debug: Inserted project_apr_ternary_true@27.ops[3]: 'l-store-copy ternary_result%0#0 0'
debug: Replaced project_apr_ternary_true@27.ops[5]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
debug: Inserted project_apr_ternary_merge@29.ops[7]: 'l-store-copy tmp%3#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[9]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted project_apr_ternary_merge@29.ops[16]: 'l-store-copy tmp%5#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[18]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted project_apr_ternary_merge@29.ops[21]: 'l-store-copy tmp%6#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[23]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted project_apr_ternary_merge@29.ops[32]: 'l-store-copy tmp%8#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[34]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted project_apr_ternary_merge@29.ops[42]: 'l-store-copy tmp%9#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[44]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted project_apr_ternary_merge@29.ops[3]: 'l-store-copy rt_fraction.dt#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[6]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
debug: Inserted project_apr_ternary_merge@29.ops[29]: 'l-store-copy tmp%7#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[32]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted project_apr_ternary_merge@29.ops[48]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced project_apr_ternary_merge@29.ops[51]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted project_apr_ternary_merge@29.ops[12]: 'l-store-copy rt_fraction.dr#0 1'
debug: Replaced project_apr_ternary_merge@29.ops[16]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
debug: Inserted project_apr_ternary_merge@29.ops[27]: 'l-store-copy global_yearly_blocks_produced#0 0'
debug: Replaced project_apr_ternary_merge@29.ops[33]: 'v-load global_yearly_blocks_produced#0' with 'l-load global_yearly_blocks_produced#0'
debug: Inserted project_apr_ternary_merge@29.ops[2]: 'l-store-copy rt_fraction.dr#0 1'
debug: Replaced project_apr_ternary_merge@29.ops[12]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
debug: Inserted project_apr_ternary_merge@29.ops[8]: 'l-store-copy rt_fraction.dt#0 2'
debug: Replaced project_apr_ternary_merge@29.ops[23]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
debug: Inserted project_apr_if_body@7.ops[8]: 'l-store-copy tmp%13#0 0'
debug: Replaced project_apr_if_body@7.ops[10]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted project_apr_if_body@7.ops[2]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced project_apr_if_body@7.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted project_apr_if_body@7.ops[4]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced project_apr_if_body@7.ops[8]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted project_apr_ternary_true@9.ops[6]: 'l-store-copy tmp%1#1 0'
debug: Replaced project_apr_ternary_true@9.ops[8]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted project_apr_ternary_true@9.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced project_apr_ternary_true@9.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted project_apr_ternary_true@9.ops[12]: 'l-store-copy tm2_lp_addr#0 0'
debug: Replaced project_apr_ternary_true@9.ops[18]: 'v-load tm2_lp_addr#0' with 'l-load tm2_lp_addr#0'
debug: Inserted project_apr_ternary_true@9.ops[14]: 'l-store-copy tm2_app_id#0 2'
debug: Replaced project_apr_ternary_true@9.ops[20]: 'v-load tm2_app_id#0' with 'l-load tm2_app_id#0'
debug: Inserted project_apr_ternary_true@9.ops[20]: 'l-store-copy tm2_lp_addr#0 1'
debug: Replaced project_apr_ternary_true@9.ops[26]: 'v-load tm2_lp_addr#0' with 'l-load tm2_lp_addr#0'
debug: Inserted project_apr_ternary_true@9.ops[22]: 'l-store-copy tm2_app_id#0 2'
debug: Replaced project_apr_ternary_true@9.ops[28]: 'v-load tm2_app_id#0' with 'l-load tm2_app_id#0'
debug: Inserted project_apr_ternary_true@9.ops[1]: 'l-store-copy tm2_lp_addr#0 0'
debug: Replaced project_apr_ternary_true@9.ops[12]: 'v-load tm2_lp_addr#0' with 'l-load tm2_lp_addr#0'
debug: Inserted project_apr_ternary_true@9.ops[18]: 'l-store-copy exists1#0 3'
debug: Replaced project_apr_ternary_true@9.ops[35]: 'v-load exists1#0' with 'l-load exists1#0'
debug: Inserted project_apr_bool_true@15.ops[1]: 'l-store-copy and_result%0#0 0'
debug: Replaced project_apr_bool_true@15.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
debug: Inserted project_apr_bool_false@16.ops[1]: 'l-store-copy and_result%0#0 0'
debug: Replaced project_apr_bool_false@16.ops[3]: 'v-load and_result%0#0' with 'l-load and_result%0#0'
debug: Inserted project_apr_if_body@18.ops[7]: 'l-store-copy tmp%4#1 0'
debug: Replaced project_apr_if_body@18.ops[9]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted project_apr_if_body@18.ops[15]: 'l-store-copy tmp%0#0 0'
debug: Replaced project_apr_if_body@18.ops[17]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted project_apr_if_body@18.ops[28]: 'l-store-copy tmp%7#1 0'
debug: Replaced project_apr_if_body@18.ops[30]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted project_apr_if_body@18.ops[36]: 'l-store-copy reinterpret_bytes%0#0 0'
debug: Replaced project_apr_if_body@18.ops[38]: 'v-load reinterpret_bytes%0#0' with 'l-load reinterpret_bytes%0#0'
debug: Inserted project_apr_if_body@18.ops[44]: 'l-store-copy tmp%10#1 0'
debug: Replaced project_apr_if_body@18.ops[46]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted project_apr_if_body@18.ops[20]: 'l-store-copy tmp%1#0 0'
debug: Replaced project_apr_if_body@18.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted project_apr_if_body@18.ops[25]: 'l-store-copy tmp%2#0 0'
debug: Replaced project_apr_if_body@18.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted project_apr_if_body@18.ops[34]: 'l-store-copy tmp%8#0 0'
debug: Replaced project_apr_if_body@18.ops[37]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted project_apr_if_body@18.ops[43]: 'l-store-copy tmp%9#1 0'
debug: Replaced project_apr_if_body@18.ops[46]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted project_apr_if_body@18.ops[1]: 'l-store-copy a2#0 0'
debug: Replaced project_apr_if_body@18.ops[6]: 'v-load a2#0' with 'l-load a2#0'
debug: Inserted project_apr_if_body@18.ops[15]: 'l-store-copy farm_amount#0 1'
debug: Replaced project_apr_if_body@18.ops[24]: 'v-load farm_amount#0' with 'l-load farm_amount#0'
debug: Inserted project_apr_if_body@18.ops[6]: 'l-store-copy a1#0 1'
debug: Replaced project_apr_if_body@18.ops[30]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted project_apr_if_body@18.ops[13]: 'l-store-copy tmp%5#1 1'
debug: Replaced project_apr_if_body@18.ops[40]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted project_apr_if_body@18.ops[4]: 'l-store-copy tmp%3#0 1'
debug: Replaced project_apr_if_body@18.ops[50]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted project_apr_else_body@19.ops[7]: 'l-store-copy tmp%12#1 0'
debug: Replaced project_apr_else_body@19.ops[9]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted project_apr_else_body@19.ops[15]: 'l-store-copy tmp%0#0 0'
debug: Replaced project_apr_else_body@19.ops[17]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted project_apr_else_body@19.ops[28]: 'l-store-copy tmp%15#0 0'
debug: Replaced project_apr_else_body@19.ops[30]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted project_apr_else_body@19.ops[36]: 'l-store-copy reinterpret_bytes%1#0 0'
debug: Replaced project_apr_else_body@19.ops[38]: 'v-load reinterpret_bytes%1#0' with 'l-load reinterpret_bytes%1#0'
debug: Inserted project_apr_else_body@19.ops[44]: 'l-store-copy tmp%18#1 0'
debug: Replaced project_apr_else_body@19.ops[46]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted project_apr_else_body@19.ops[20]: 'l-store-copy tmp%1#0 0'
debug: Replaced project_apr_else_body@19.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted project_apr_else_body@19.ops[25]: 'l-store-copy tmp%2#0 0'
debug: Replaced project_apr_else_body@19.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted project_apr_else_body@19.ops[34]: 'l-store-copy tmp%16#0 0'
debug: Replaced project_apr_else_body@19.ops[37]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted project_apr_else_body@19.ops[43]: 'l-store-copy tmp%17#1 0'
debug: Replaced project_apr_else_body@19.ops[46]: 'v-load tmp%17#1' with 'l-load tmp%17#1'
debug: Inserted project_apr_else_body@19.ops[1]: 'l-store-copy a1#0 0'
debug: Replaced project_apr_else_body@19.ops[5]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted project_apr_else_body@19.ops[15]: 'l-store-copy farm_amount#0 1'
debug: Replaced project_apr_else_body@19.ops[24]: 'v-load farm_amount#0' with 'l-load farm_amount#0'
debug: Inserted project_apr_else_body@19.ops[7]: 'l-store-copy a2#0 1'
debug: Replaced project_apr_else_body@19.ops[30]: 'v-load a2#0' with 'l-load a2#0'
debug: Inserted project_apr_else_body@19.ops[13]: 'l-store-copy tmp%13#1 1'
debug: Replaced project_apr_else_body@19.ops[40]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted project_apr_else_body@19.ops[4]: 'l-store-copy tmp%11#1 1'
debug: Replaced project_apr_else_body@19.ops[50]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted project_apr_ternary_false@10.ops[1]: 'l-store-copy ternary_result%0#0 0'
debug: Replaced project_apr_ternary_false@10.ops[3]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted project_apr_ternary_merge@11.ops[7]: 'l-store-copy tmp%16#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[9]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted project_apr_ternary_merge@11.ops[15]: 'l-store-copy tmp%17#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[17]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted project_apr_ternary_merge@11.ops[45]: 'l-store-copy len_%0#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[47]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[50]: 'l-store-copy no_overflow%0#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[52]: 'v-load no_overflow%0#0' with 'l-load no_overflow%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[63]: 'l-store-copy len_%1#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[65]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted project_apr_ternary_merge@11.ops[68]: 'l-store-copy no_overflow%1#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[70]: 'v-load no_overflow%1#0' with 'l-load no_overflow%1#0'
debug: Inserted project_apr_ternary_merge@11.ops[78]: 'l-store-copy len_%2#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[80]: 'v-load len_%2#0' with 'l-load len_%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[83]: 'l-store-copy no_overflow%2#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[85]: 'v-load no_overflow%2#0' with 'l-load no_overflow%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[94]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[96]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[99]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[101]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted project_apr_ternary_merge@11.ops[104]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[106]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted project_apr_ternary_merge@11.ops[109]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[111]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted project_apr_ternary_merge@11.ops[114]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[116]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted project_apr_ternary_merge@11.ops[119]: 'l-store-copy encoded_tuple_buffer%7#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[121]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
debug: Inserted project_apr_ternary_merge@11.ops[124]: 'l-store-copy encoded_tuple_buffer%8#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[126]: 'v-load encoded_tuple_buffer%8#0' with 'l-load encoded_tuple_buffer%8#0'
debug: Inserted project_apr_ternary_merge@11.ops[129]: 'l-store-copy encoded_tuple_buffer%9#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[131]: 'v-load encoded_tuple_buffer%9#0' with 'l-load encoded_tuple_buffer%9#0'
debug: Inserted project_apr_ternary_merge@11.ops[134]: 'l-store-copy encoded_tuple_buffer%10#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[136]: 'v-load encoded_tuple_buffer%10#0' with 'l-load encoded_tuple_buffer%10#0'
debug: Inserted project_apr_ternary_merge@11.ops[23]: 'l-store-copy tmp%19#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[26]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted project_apr_ternary_merge@11.ops[57]: 'l-store-copy b_zeros%0#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[60]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[20]: 'l-store-copy tmp%18#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[26]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted project_apr_ternary_merge@11.ops[12]: 'l-store-copy rewards#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[19]: 'v-load rewards#0' with 'l-load rewards#0'
debug: Inserted project_apr_ternary_merge@11.ops[66]: 'l-store-copy own_yearly_blocks_produced#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[77]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
debug: Inserted project_apr_ternary_merge@11.ops[82]: 'l-store-copy projected_apr_bps#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[93]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
debug: Inserted project_apr_ternary_merge@11.ops[47]: 'l-store-copy total_online_stake#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[62]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
debug: Inserted project_apr_ternary_merge@11.ops[64]: 'l-store-copy b_zeros%0#0 1'
debug: Replaced project_apr_ternary_merge@11.ops[80]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[81]: 'l-store-copy b_zeros%0#0 1'
debug: Replaced project_apr_ternary_merge@11.ops[97]: 'v-load b_zeros%0#0' with 'l-load b_zeros%0#0'
debug: Inserted project_apr_ternary_merge@11.ops[1]: 'l-store-copy current_block_rewards#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[32]: 'v-load current_block_rewards#0' with 'l-load current_block_rewards#0'
debug: Inserted project_apr_ternary_merge@11.ops[3]: 'l-store-copy farm_amount_algo#0 2'
debug: Replaced project_apr_ternary_merge@11.ops[42]: 'v-load farm_amount_algo#0' with 'l-load farm_amount_algo#0'
debug: Inserted project_apr_ternary_merge@11.ops[101]: 'l-store-copy tmp%22#0 0'
debug: Replaced project_apr_ternary_merge@11.ops[144]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted project_apr_ternary_merge@11.ops[85]: 'l-store-copy tmp%21#0 1'
debug: Replaced project_apr_ternary_merge@11.ops[140]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted project_apr_ternary_merge@11.ops[32]: 'l-store-copy projected_apr_bps#0 2'
debug: Replaced project_apr_ternary_merge@11.ops[88]: 'v-load projected_apr_bps#0' with 'l-load projected_apr_bps#0'
debug: Inserted project_apr_ternary_merge@11.ops[13]: 'l-store-copy own_yearly_blocks_produced#0 3'
debug: Replaced project_apr_ternary_merge@11.ops[71]: 'v-load own_yearly_blocks_produced#0' with 'l-load own_yearly_blocks_produced#0'
debug: Inserted project_apr_ternary_merge@11.ops[70]: 'l-store-copy tmp%20#0 3'
debug: Replaced project_apr_ternary_merge@11.ops[138]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted project_apr_ternary_merge@11.ops[37]: 'l-store-copy val_as_bytes%2#0 3'
debug: Replaced project_apr_ternary_merge@11.ops[114]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted project_apr_ternary_merge@11.ops[32]: 'l-store-copy tmp%19#0 4'
debug: Replaced project_apr_ternary_merge@11.ops[110]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted project_apr_ternary_merge@11.ops[42]: 'l-store-copy val_as_bytes%3#0 5'
debug: Replaced project_apr_ternary_merge@11.ops[121]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted project_apr_ternary_merge@11.ops[46]: 'l-store-copy val_as_bytes%4#0 6'
debug: Replaced project_apr_ternary_merge@11.ops[127]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
debug: Inserted project_apr_ternary_merge@11.ops[50]: 'l-store-copy val_as_bytes%5#0 6'
debug: Replaced project_apr_ternary_merge@11.ops[133]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
debug: Inserted project_apr_ternary_merge@11.ops[54]: 'l-store-copy val_as_bytes%6#0 7'
debug: Replaced project_apr_ternary_merge@11.ops[139]: 'v-load val_as_bytes%6#0' with 'l-load val_as_bytes%6#0'
debug: Inserted calculate_algo_cost.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced calculate_algo_cost.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted calculate_algo_cost.ops[6]: 'l-store-copy tmp%2#0 1'
debug: Replaced calculate_algo_cost.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted calculate_algo_cost_ternary_true@1.ops[1]: 'l-store-copy ternary_result%0#0 0'
debug: Replaced calculate_algo_cost_ternary_true@1.ops[3]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
debug: Inserted calculate_algo_cost_ternary_false@2.ops[1]: 'l-store-copy ternary_result%0#0 0'
debug: Replaced calculate_algo_cost_ternary_false@2.ops[3]: 'v-load ternary_result%0#0' with 'l-load ternary_result%0#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[2]: 'l-store-copy tmp%3#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[4]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[14]: 'l-store-copy tmp%5#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[21]: 'l-store-copy tmp%6#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[23]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[39]: 'l-store-copy tmp%1#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[41]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy tmp%8#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[50]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[53]: 'l-store-copy total_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[55]: 'v-load total_cost#0' with 'l-load total_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[76]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[78]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[81]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[83]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[86]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[88]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[91]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[93]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[96]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[98]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[30]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[33]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[36]: 'l-store-copy tmp%0#1 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[39]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[6]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[11]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[33]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[40]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[48]: 'l-store-copy platform_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[56]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[57]: 'l-store-copy platform_cost#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[70]: 'v-load platform_cost#0' with 'l-load platform_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[66]: 'l-store-copy val_as_bytes%1#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[81]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[70]: 'l-store-copy val_as_bytes%2#0 2'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[87]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[63]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[82]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[75]: 'l-store-copy val_as_bytes%3#0 3'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[94]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[79]: 'l-store-copy val_as_bytes%4#0 4'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[100]: 'v-load val_as_bytes%4#0' with 'l-load val_as_bytes%4#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[83]: 'l-store-copy val_as_bytes%5#0 5'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[106]: 'v-load val_as_bytes%5#0' with 'l-load val_as_bytes%5#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[27]: 'l-store-copy txn_fee_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[52]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[52]: 'l-store-copy ix_cost#0 2'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[79]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[54]: 'l-store-copy txn_fee_cost#0 3'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[84]: 'v-load txn_fee_cost#0' with 'l-load txn_fee_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[20]: 'l-store-copy ix_cost#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[52]: 'v-load ix_cost#0' with 'l-load ix_cost#0'
debug: Inserted calculate_algo_cost_ternary_merge@3.ops[13]: 'l-store-copy box_mbr#0 0'
debug: Replaced calculate_algo_cost_ternary_merge@3.ops[74]: 'v-load box_mbr#0' with 'l-load box_mbr#0'
debug: Inserted get_algo_cost.ops[4]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_algo_cost.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_algo_cost_and_max_duration.ops[4]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[6]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[26]: 'l-store-copy to_encode%0#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[28]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted get_algo_cost_and_max_duration.ops[34]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[36]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted get_algo_cost_and_max_duration.ops[39]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[41]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted get_algo_cost_and_max_duration.ops[44]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[46]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted get_algo_cost_and_max_duration.ops[49]: 'l-store-copy encoded_tuple_buffer%5#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[51]: 'v-load encoded_tuple_buffer%5#0' with 'l-load encoded_tuple_buffer%5#0'
debug: Inserted get_algo_cost_and_max_duration.ops[54]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[56]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted get_algo_cost_and_max_duration.ops[59]: 'l-store-copy encoded_tuple_buffer%7#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[61]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
debug: Inserted get_algo_cost_and_max_duration.ops[7]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[10]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[11]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[14]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[15]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[18]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[19]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[22]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[23]: 'l-store-copy cost#0 0'
debug: Replaced get_algo_cost_and_max_duration.ops[26]: 'v-load cost#0' with 'l-load cost#0'
debug: Inserted get_algo_cost_and_max_duration.ops[13]: 'l-store-copy tmp%1#0 1'
debug: Replaced get_algo_cost_and_max_duration.ops[38]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_algo_cost_and_max_duration.ops[18]: 'l-store-copy tmp%2#0 2'
debug: Replaced get_algo_cost_and_max_duration.ops[44]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_algo_cost_and_max_duration.ops[9]: 'l-store-copy tmp%0#0 1'
debug: Replaced get_algo_cost_and_max_duration.ops[39]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_algo_cost_and_max_duration.ops[24]: 'l-store-copy tmp%3#0 4'
debug: Replaced get_algo_cost_and_max_duration.ops[51]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get_algo_cost_and_max_duration.ops[39]: 'l-store-copy val_as_bytes%0#0 4'
debug: Replaced get_algo_cost_and_max_duration.ops[67]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted get_algo_cost_and_max_duration.ops[29]: 'l-store-copy tmp%4#0 5'
debug: Replaced get_algo_cost_and_max_duration.ops[58]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get_algo_cost_and_max_duration.ops[33]: 'l-store-copy tmp%5#0 5'
debug: Replaced get_algo_cost_and_max_duration.ops[64]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get_max_duration.ops[16]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_max_duration.ops[18]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_max_duration.ops[28]: 'l-store-copy tmp%2#0 0'
debug: Replaced get_max_duration.ops[30]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get_max_duration.ops[33]: 'l-store-copy tmp%3#0 0'
debug: Replaced get_max_duration.ops[35]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get_max_duration.ops[41]: 'l-store-copy tmp%4#0 0'
debug: Replaced get_max_duration.ops[43]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get_max_duration.ops[46]: 'l-store-copy max_duration#0 0'
debug: Replaced get_max_duration.ops[48]: 'v-load max_duration#0' with 'l-load max_duration#0'
debug: Inserted get_max_duration.ops[59]: 'l-store-copy tmp%1#1 0'
debug: Replaced get_max_duration.ops[61]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted get_max_duration.ops[2]: 'l-store-copy check%0#0 1'
debug: Replaced get_max_duration.ops[5]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted get_max_duration.ops[9]: 'l-store-copy check%1#0 1'
debug: Replaced get_max_duration.ops[12]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted get_max_duration.ops[39]: 'l-store-copy blocks_produced#0 0'
debug: Replaced get_max_duration.ops[42]: 'v-load blocks_produced#0' with 'l-load blocks_produced#0'
debug: Inserted get_max_duration.ops[53]: 'l-store-copy b#0 0'
debug: Replaced get_max_duration.ops[56]: 'v-load b#0' with 'l-load b#0'
debug: Inserted get_max_duration.ops[4]: 'l-store-copy value%0#0 1'
debug: Replaced get_max_duration.ops[8]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted get_max_duration.ops[12]: 'l-store-copy value%1#0 1'
debug: Replaced get_max_duration.ops[16]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted get_max_duration.ops[27]: 'l-store-copy rt_fraction.dr#0 1'
debug: Replaced get_max_duration.ops[31]: 'v-load rt_fraction.dr#0' with 'l-load rt_fraction.dr#0'
debug: Inserted get_max_duration.ops[60]: 'l-store-copy b#0 1'
debug: Replaced get_max_duration.ops[63]: 'v-load b#0' with 'l-load b#0'
debug: Inserted get_max_duration.ops[62]: 'l-store-copy tmp%0#1 1'
debug: Replaced get_max_duration.ops[66]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted get_max_duration.ops[29]: 'l-store-copy rt_fraction.dt#0 1'
debug: Replaced get_max_duration.ops[37]: 'v-load rt_fraction.dt#0' with 'l-load rt_fraction.dt#0'
debug: Inserted get_max_duration.ops[18]: 'l-store-copy ds_balance#0 0'
debug: Replaced get_max_duration.ops[46]: 'v-load ds_balance#0' with 'l-load ds_balance#0'
debug: Inserted get_max_duration.ops[25]: 'l-store-copy total_online_stake#0 1'
debug: Replaced get_max_duration.ops[53]: 'v-load total_online_stake#0' with 'l-load total_online_stake#0'
debug: Inserted validate_duration.ops[2]: 'l-store-copy allowed_duration#0 0'
debug: Replaced validate_duration.ops[4]: 'v-load allowed_duration#0' with 'l-load allowed_duration#0'
debug: Inserted validate_duration.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced validate_duration.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted validate_duration_if_body@1.ops[2]: 'l-store-copy tmp%1#0 0'
debug: Replaced validate_duration_if_body@1.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted create_farm.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced create_farm.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted create_farm.ops[6]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced create_farm.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted create_farm_after_if_else@7.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced create_farm_after_if_else@7.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted create_farm_after_if_else@11.ops[1]: 'l-store-copy tmp%5#0 0'
debug: Replaced create_farm_after_if_else@11.ops[3]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted create_farm_after_if_else@11.ops[11]: 'l-store-copy tmp%7#0 0'
debug: Replaced create_farm_after_if_else@11.ops[13]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted create_farm_after_if_else@11.ops[15]: 'l-store-copy tmp%8#0 0'
debug: Replaced create_farm_after_if_else@11.ops[17]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted create_farm_after_if_else@11.ops[24]: 'l-store-copy tmp%10#0 0'
debug: Replaced create_farm_after_if_else@11.ops[26]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted create_farm_after_if_else@11.ops[45]: 'l-store-copy recipient_asa_id#0 0'
debug: Replaced create_farm_after_if_else@11.ops[47]: 'v-load recipient_asa_id#0' with 'l-load recipient_asa_id#0'
debug: Inserted create_farm_after_if_else@11.ops[50]: 'l-store-copy cond#2 0'
debug: Replaced create_farm_after_if_else@11.ops[52]: 'v-load cond#2' with 'l-load cond#2'
debug: Inserted create_farm_after_if_else@11.ops[19]: 'l-store-copy tmp%9#0 0'
debug: Replaced create_farm_after_if_else@11.ops[22]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted create_farm_after_if_else@11.ops[34]: 'l-store-copy tmp%12#0 0'
debug: Replaced create_farm_after_if_else@11.ops[38]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted create_farm_after_if_else@11.ops[30]: 'l-store-copy tmp%11#0 0'
debug: Replaced create_farm_after_if_else@11.ops[37]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted create_farm_after_if_else@11.ops[6]: 'l-store-copy tmp%6#0 0'
debug: Replaced create_farm_after_if_else@11.ops[22]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted create_farm_after_if_else@15.ops[2]: 'l-store-copy tmp%14#0 0'
debug: Replaced create_farm_after_if_else@15.ops[4]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted create_farm_after_if_else@15.ops[6]: 'l-store-copy tmp%15#0 0'
debug: Replaced create_farm_after_if_else@15.ops[8]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted create_farm_after_if_else@15.ops[11]: 'l-store-copy tmp%16#0 0'
debug: Replaced create_farm_after_if_else@15.ops[13]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted create_farm_after_if_else@15.ops[16]: 'l-store-copy tmp%18#0 1'
debug: Replaced create_farm_after_if_else@15.ops[19]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted create_farm_if_body@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced create_farm_if_body@1.ops[4]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted create_farm_after_if_else@2.ops[10]: 'l-store-copy tmp%19#0 0'
debug: Replaced create_farm_after_if_else@2.ops[12]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted create_farm_after_if_else@2.ops[15]: 'l-store-copy to_encode%0#0 0'
debug: Replaced create_farm_after_if_else@2.ops[17]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted create_farm_after_if_else@2.ops[23]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced create_farm_after_if_else@2.ops[25]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted create_farm_after_if_else@2.ops[28]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced create_farm_after_if_else@2.ops[30]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted create_farm_after_if_else@2.ops[51]: 'l-store-copy tmp%2#1 0'
debug: Replaced create_farm_after_if_else@2.ops[53]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted create_farm_after_if_else@2.ops[33]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced create_farm_after_if_else@2.ops[36]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted create_farm_after_if_else@2.ops[41]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced create_farm_after_if_else@2.ops[44]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted create_farm_after_if_else@2.ops[49]: 'l-store-copy tmp%1#0 0'
debug: Replaced create_farm_after_if_else@2.ops[52]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted create_farm_after_if_else@2.ops[59]: 'l-store-copy tmp%23#0 0'
debug: Replaced create_farm_after_if_else@2.ops[62]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted create_farm_after_if_else@2.ops[64]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced create_farm_after_if_else@2.ops[67]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted create_farm_after_if_else@2.ops[72]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced create_farm_after_if_else@2.ops[75]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted create_farm_after_if_else@2.ops[80]: 'l-store-copy new_state_value%1#0 0'
debug: Replaced create_farm_after_if_else@2.ops[83]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
debug: Inserted create_farm_after_if_else@2.ops[47]: 'l-store-copy tmp%0#2 0'
debug: Replaced create_farm_after_if_else@2.ops[52]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted create_farm_after_if_else@2.ops[75]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced create_farm_after_if_else@2.ops[79]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted create_farm_after_if_else@2.ops[19]: 'l-store-copy val_as_bytes%3#0 0'
debug: Replaced create_farm_after_if_else@2.ops[32]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted create_farm_after_if_else@2.ops[5]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced create_farm_after_if_else@2.ops[23]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted create_farm_after_if_else@2.ops[9]: 'l-store-copy val_as_bytes%2#0 1'
debug: Replaced create_farm_after_if_else@2.ops[29]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted create_farm_after_if_else@2.ops[46]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced create_farm_after_if_else@2.ops[66]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted create_farm_after_if_else@2.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced create_farm_after_if_else@2.ops[24]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted extend_duration_blocks.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced extend_duration_blocks.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted extend_duration_blocks.ops[6]: 'l-store-copy cond#0 1'
debug: Replaced extend_duration_blocks.ops[9]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[8]: 'l-store-copy tmp%4#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[14]: 'l-store-copy tmp%5#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[24]: 'l-store-copy tmp%7#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[26]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[28]: 'l-store-copy tmp%8#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[30]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[37]: 'l-store-copy tmp%10#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[39]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[45]: 'l-store-copy tmp%12#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[47]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[49]: 'l-store-copy tmp%13#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[51]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[61]: 'l-store-copy tmp%15#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[63]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[65]: 'l-store-copy tmp%16#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[67]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[98]: 'l-store-copy tmp%2#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[100]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[2]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[33]: 'l-store-copy tmp%9#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[36]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[72]: 'l-store-copy tmp%17#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[75]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[76]: 'l-store-copy tmp%17#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[78]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[80]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[83]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[85]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[88]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[93]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[96]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[101]: 'l-store-copy tmp%1#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[104]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[111]: 'l-store-copy tmp%23#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[114]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[116]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[119]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[124]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[127]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[132]: 'l-store-copy new_state_value%1#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[135]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[4]: 'l-store-copy state#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[8]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[57]: 'l-store-copy tmp%14#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[61]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[101]: 'l-store-copy tmp%0#1 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[106]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[129]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[133]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[14]: 'l-store-copy farm_asset#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[24]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[46]: 'l-store-copy tmp%11#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[61]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[22]: 'l-store-copy tmp%6#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[38]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[50]: 'l-store-copy state#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[67]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[101]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[121]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[68]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[89]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[26]: 'l-store-copy farm_asset#0 2'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[65]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[9]: 'l-store-copy state#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[51]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_duration_blocks_after_if_else@3.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced extend_duration_blocks_after_if_else@3.ops[97]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted extend_amount_per_block.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced extend_amount_per_block.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted extend_amount_per_block.ops[6]: 'l-store-copy cond#0 1'
debug: Replaced extend_amount_per_block.ops[9]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[8]: 'l-store-copy tmp%4#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[14]: 'l-store-copy tmp%5#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[16]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[22]: 'l-store-copy tmp%7#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[24]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[37]: 'l-store-copy tmp%10#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[39]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[41]: 'l-store-copy tmp%11#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[43]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[46]: 'l-store-copy to_encode%0#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[48]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[2]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[27]: 'l-store-copy tmp%8#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[30]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[52]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[55]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[57]: 'l-store-copy state#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[60]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[4]: 'l-store-copy state#0 1'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[8]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[33]: 'l-store-copy tmp%9#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[37]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[21]: 'l-store-copy tmp%6#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[36]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[9]: 'l-store-copy state#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[24]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[42]: 'l-store-copy state#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[59]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[25]: 'l-store-copy state#0 1'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[42]: 'v-load state#0' with 'l-load state#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[15]: 'l-store-copy farm_asset#0 1'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[40]: 'v-load farm_asset#0' with 'l-load farm_asset#0'
debug: Inserted extend_amount_per_block_after_if_else@3.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced extend_amount_per_block_after_if_else@3.ops[67]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted payout.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced payout.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted payout.ops[6]: 'l-store-copy cond#0 1'
debug: Replaced payout.ops[9]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted payout_after_if_else@19.ops[8]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced payout_after_if_else@19.ops[10]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted payout_after_if_else@19.ops[13]: 'l-store-copy tmp%4#0 0'
debug: Replaced payout_after_if_else@19.ops[15]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted payout_after_if_else@19.ops[2]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced payout_after_if_else@19.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted payout_after_if_else@19.ops[4]: 'l-store-copy state#0 1'
debug: Replaced payout_after_if_else@19.ops[8]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@2.ops[9]: 'l-store-copy cond#0 0'
debug: Replaced payout_after_if_else@2.ops[11]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted payout_after_if_else@2.ops[5]: 'l-store-copy tmp%7#0 0'
debug: Replaced payout_after_if_else@2.ops[8]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted payout_after_if_else@2.ops[2]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced payout_after_if_else@2.ops[8]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted payout_after_if_else@11.ops[12]: 'l-store-copy cond#0 0'
debug: Replaced payout_after_if_else@11.ops[14]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted payout_after_if_else@11.ops[5]: 'l-store-copy check%0#0 1'
debug: Replaced payout_after_if_else@11.ops[8]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted payout_after_if_else@11.ops[7]: 'l-store-copy value%0#0 1'
debug: Replaced payout_after_if_else@11.ops[12]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted payout_after_if_else@11.ops[2]: 'l-store-copy tmp%9#0 0'
debug: Replaced payout_after_if_else@11.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted payout_after_if_else@15.ops[3]: 'l-store-copy tmp%11#0 0'
debug: Replaced payout_after_if_else@15.ops[5]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted payout_if_body@3.ops[2]: 'l-store-copy inner_txn_params%0%%param_Fee_idx_0#0 0'
debug: Replaced payout_if_body@3.ops[10]: 'v-load inner_txn_params%0%%param_Fee_idx_0#0' with 'l-load inner_txn_params%0%%param_Fee_idx_0#0'
debug: Inserted payout_after_if_else@5.ops[4]: 'l-store-copy tmp%13#0 0'
debug: Replaced payout_after_if_else@5.ops[6]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted payout_after_if_else@5.ops[17]: 'l-store-copy tmp%15#0 0'
debug: Replaced payout_after_if_else@5.ops[19]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted payout_after_if_else@5.ops[60]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[62]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[64]: 'l-store-copy tmp%25#0 0'
debug: Replaced payout_after_if_else@5.ops[66]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted payout_after_if_else@5.ops[68]: 'l-store-copy tmp%26#0 0'
debug: Replaced payout_after_if_else@5.ops[70]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted payout_after_if_else@5.ops[73]: 'l-store-copy to_encode%0#0 0'
debug: Replaced payout_after_if_else@5.ops[75]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted payout_after_if_else@5.ops[81]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[83]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[85]: 'l-store-copy reinterpret_biguint%3#0 0'
debug: Replaced payout_after_if_else@5.ops[87]: 'v-load reinterpret_biguint%3#0' with 'l-load reinterpret_biguint%3#0'
debug: Inserted payout_after_if_else@5.ops[90]: 'l-store-copy tmp%27#0 0'
debug: Replaced payout_after_if_else@5.ops[92]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted payout_after_if_else@5.ops[11]: 'l-store-copy check%1#0 1'
debug: Replaced payout_after_if_else@5.ops[14]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted payout_after_if_else@5.ops[31]: 'l-store-copy tmp%18#0 0'
debug: Replaced payout_after_if_else@5.ops[34]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted payout_after_if_else@5.ops[48]: 'l-store-copy tmp%22#0 0'
debug: Replaced payout_after_if_else@5.ops[51]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted payout_after_if_else@5.ops[55]: 'l-store-copy tmp%24#0 0'
debug: Replaced payout_after_if_else@5.ops[58]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted payout_after_if_else@5.ops[81]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced payout_after_if_else@5.ops[84]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted payout_after_if_else@5.ops[42]: 'l-store-copy tmp%21#0 0'
debug: Replaced payout_after_if_else@5.ops[46]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted payout_after_if_else@5.ops[54]: 'l-store-copy tmp%23#0 0'
debug: Replaced payout_after_if_else@5.ops[59]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted payout_after_if_else@5.ops[24]: 'l-store-copy tmp%17#0 0'
debug: Replaced payout_after_if_else@5.ops[29]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted payout_after_if_else@5.ops[41]: 'l-store-copy tmp%20#0 0'
debug: Replaced payout_after_if_else@5.ops[47]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted payout_after_if_else@5.ops[22]: 'l-store-copy tmp%16#0 0'
debug: Replaced payout_after_if_else@5.ops[29]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted payout_after_if_else@5.ops[40]: 'l-store-copy tmp%19#0 0'
debug: Replaced payout_after_if_else@5.ops[48]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted payout_after_if_else@5.ops[3]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[17]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[14]: 'l-store-copy value%1#0 2'
debug: Replaced payout_after_if_else@5.ops[30]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted payout_after_if_else@5.ops[40]: 'l-store-copy txn_fuel_spent#3 0'
debug: Replaced payout_after_if_else@5.ops[58]: 'v-load txn_fuel_spent#3' with 'l-load txn_fuel_spent#3'
debug: Inserted payout_after_if_else@5.ops[76]: 'l-store-copy state#0 0'
debug: Replaced payout_after_if_else@5.ops[93]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@5.ops[9]: 'l-store-copy tmp%14#0 1'
debug: Replaced payout_after_if_else@5.ops[30]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted payout_after_if_else@5.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced payout_after_if_else@5.ops[39]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted payout_after_if_else@5.ops[21]: 'l-store-copy state#0 3'
debug: Replaced payout_after_if_else@5.ops[73]: 'v-load state#0' with 'l-load state#0'
debug: Inserted payout_after_if_else@8.ops[3]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced payout_after_if_else@8.ops[6]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted payout_after_if_else@8.ops[11]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced payout_after_if_else@8.ops[14]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted payout_after_if_else@8.ops[19]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced payout_after_if_else@8.ops[22]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted payout_after_if_else@8.ops[27]: 'l-store-copy new_state_value%1#0 0'
debug: Replaced payout_after_if_else@8.ops[30]: 'v-load new_state_value%1#0' with 'l-load new_state_value%1#0'
debug: Inserted payout_after_if_else@8.ops[5]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced payout_after_if_else@8.ops[9]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted payout_after_if_else@8.ops[22]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced payout_after_if_else@8.ops[26]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted withdraw_fees.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced withdraw_fees.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted withdraw_fees.ops[32]: 'l-store-copy locked_balance#0 0'
debug: Replaced withdraw_fees.ops[34]: 'v-load locked_balance#0' with 'l-load locked_balance#0'
debug: Inserted withdraw_fees.ops[39]: 'l-store-copy tmp%4#0 0'
debug: Replaced withdraw_fees.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted withdraw_fees.ops[50]: 'l-store-copy cond#0 0'
debug: Replaced withdraw_fees.ops[52]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted withdraw_fees.ops[6]: 'l-store-copy check%0#0 1'
debug: Replaced withdraw_fees.ops[9]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted withdraw_fees.ops[14]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced withdraw_fees.ops[17]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted withdraw_fees.ops[22]: 'l-store-copy tmp%1#1 0'
debug: Replaced withdraw_fees.ops[25]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted withdraw_fees.ops[27]: 'l-store-copy tmp%2#0 0'
debug: Replaced withdraw_fees.ops[30]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted withdraw_fees.ops[32]: 'l-store-copy tmp%2#0 0'
debug: Replaced withdraw_fees.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted withdraw_fees.ops[48]: 'l-store-copy check%1#0 1'
debug: Replaced withdraw_fees.ops[51]: 'v-load check%1#0' with 'l-load check%1#0'
debug: Inserted withdraw_fees.ops[20]: 'l-store-copy tmp%0#1 0'
debug: Replaced withdraw_fees.ops[25]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted withdraw_fees.ops[51]: 'l-store-copy value%1#0 1'
debug: Replaced withdraw_fees.ops[56]: 'v-load value%1#0' with 'l-load value%1#0'
debug: Inserted withdraw_fees.ops[43]: 'l-store-copy tmp%3#0 0'
debug: Replaced withdraw_fees.ops[56]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted withdraw_fees.ops[16]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced withdraw_fees.ops[31]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted withdraw_fees.ops[8]: 'l-store-copy value%0#0 1'
debug: Replaced withdraw_fees.ops[37]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted withdraw_fees_after_if_else@5.ops[1]: 'l-store-copy tmp%6#0 0'
debug: Replaced withdraw_fees_after_if_else@5.ops[3]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted optout.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced optout.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted optout.ops[7]: 'l-store-copy cond#0 1'
debug: Replaced optout.ops[10]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted optout_after_if_else@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced optout_after_if_else@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted optout_after_if_else@3.ops[6]: 'l-store-copy check%0#0 1'
debug: Replaced optout_after_if_else@3.ops[9]: 'v-load check%0#0' with 'l-load check%0#0'
debug: Inserted optout_after_if_else@3.ops[8]: 'l-store-copy value%0#0 1'
debug: Replaced optout_after_if_else@3.ops[12]: 'v-load value%0#0' with 'l-load value%0#0'
debug: Inserted optout_after_if_else@7.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced optout_after_if_else@7.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted optout_after_if_else@7.ops[5]: 'l-store-copy receiver#0 1'
debug: Replaced optout_after_if_else@7.ops[10]: 'v-load receiver#0' with 'l-load receiver#0'
debug: Inserted optout_after_if_else@7.ops[11]: 'l-store-copy receiver#0 0'
debug: Replaced optout_after_if_else@7.ops[15]: 'v-load receiver#0' with 'l-load receiver#0'
debug: Inserted get_state.ops[2]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_state.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_state.ops[6]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_state.ops[9]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_state.ops[8]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_state.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted log_states_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced log_states_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted log_states_for_body@2.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced log_states_for_body@2.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted log_states_for_body@2.ops[15]: 'l-store-copy box_name#0 0'
debug: Replaced log_states_for_body@2.ops[17]: 'v-load box_name#0' with 'l-load box_name#0'
debug: Inserted log_states_for_body@2.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced log_states_for_body@2.ops[21]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted log_states_for_body@2.ops[6]: 'l-store-copy item_offset%0#0 0'
debug: Replaced log_states_for_body@2.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted log_states_for_body@2.ops[24]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced log_states_for_body@2.ops[27]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted log_states_for_body@2.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced log_states_for_body@2.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted log_states_if_body@3.ops[2]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced log_states_if_body@3.ops[5]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted log_states_if_body@3.ops[4]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced log_states_if_body@3.ops[8]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted log_block_proposers_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced log_block_proposers_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted log_block_proposers_for_body@2.ops[2]: 'l-store-copy tmp%1#0 0'
debug: Replaced log_block_proposers_for_body@2.ops[4]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted log_block_proposers_for_body@2.ops[1]: 'l-store-copy rnd#1 0'
debug: Replaced log_block_proposers_for_body@2.ops[7]: 'v-load rnd#1' with 'l-load rnd#1'
debug: Inserted ensure_manager_caller.ops[12]: 'l-store-copy cond#0 0'
debug: Replaced ensure_manager_caller.ops[14]: 'v-load cond#0' with 'l-load cond#0'
debug: Inserted ensure_manager_caller.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced ensure_manager_caller.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted ensure_manager_caller.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced ensure_manager_caller.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted ensure_manager_caller.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced ensure_manager_caller.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_ix_rewards_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_ix_rewards_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_ix_rewards_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_ix_rewards_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_ix_rewards_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_ix_rewards_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_ix_rewards_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted get_txn_fee_per_block.ops[12]: 'l-store-copy tmp%1#0 0'
debug: Replaced get_txn_fee_per_block.ops[14]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get_txn_fee_per_block.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get_txn_fee_per_block.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get_txn_fee_per_block.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get_txn_fee_per_block.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get_txn_fee_per_block.ops[12]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Found 4 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_project_apr_route@5 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_get_algo_cost_route@6 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_get_algo_cost_and_max_duration_route@7 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_create_farm_route@8 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_extend_duration_blocks_route@9 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_extend_amount_per_block_route@10 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_payout_route@11 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_noop_route@12 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_withdraw_fees_route@13 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_optout_route@14 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_update_max_duration_days_route@15 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_update_min_duration_blocks_route@16 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_get_state_route@17 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_log_states_route@18 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_log_block_proposers_route@19 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_update@21 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_delete@22 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main___algopy_default_create@23 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: shared x-stack for main_after_if_else@24 -> main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25: tmp%0#0
debug: Found 2 edge set/s for smart_contracts.common.math.safe_subtract
debug: Allocated 1 variable/s to x-stack: ternary_result%0#0
debug: shared x-stack for safe_subtract_ternary_true@1 -> safe_subtract_ternary_merge@3: ternary_result%0#0
debug: shared x-stack for safe_subtract_ternary_false@2 -> safe_subtract_ternary_merge@3: ternary_result%0#0
debug: Found 3 edge set/s for smart_contracts.common.validate.axfer_amount_exact
debug: Found 2 edge set/s for smart_contracts.common.validate.payment_amount_exact
debug: Found 1 edge set/s for smart_contracts.common.round_time.get_round_time
debug: Found 16 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr
debug: Allocated 3 variable/s to x-stack: cond#0, farm_amount_algo#0, ternary_result%0#0
debug: shared x-stack for project_apr_bool_true@4 -> project_apr_bool_merge@6: cond#0
debug: shared x-stack for project_apr_bool_false@5 -> project_apr_bool_merge@6: cond#0
debug: shared x-stack for project_apr_bool_true@15 -> project_apr_bool_merge@17: cond#0
debug: shared x-stack for project_apr_bool_false@16 -> project_apr_bool_merge@17: cond#0
debug: shared x-stack for project_apr_if_body@18 -> project_apr_after_inlined_smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset@20: ternary_result%0#0
debug: shared x-stack for project_apr_else_body@19 -> project_apr_after_inlined_smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset@20: ternary_result%0#0
debug: shared x-stack for project_apr_ternary_false@10 -> project_apr_ternary_merge@11: farm_amount_algo#0
debug: shared x-stack for project_apr_after_inlined_smart_contracts.dualstakefarm.contract.get_tinyman_algo_price_for_asset@20 -> project_apr_ternary_merge@11: farm_amount_algo#0
debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.calculate_algo_cost
debug: Allocated 1 variable/s to x-stack: optin_mbr#0
debug: shared x-stack for calculate_algo_cost_ternary_true@1 -> calculate_algo_cost_ternary_merge@3: optin_mbr#0
debug: shared x-stack for calculate_algo_cost_ternary_false@2 -> calculate_algo_cost_ternary_merge@3: optin_mbr#0
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration
debug: Found 4 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block
debug: Found 7 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.payout
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.withdraw_fees
debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.optout
debug: Found 4 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states
debug: Found 2 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers
debug: Found 1 edge set/s for smart_contracts.dualstakefarm.contract.DualstakeFarm.ensure_manager_caller
debug: smart_contracts.common.round_time.get_round_time f-stack entry: []
debug: smart_contracts.common.round_time.get_round_time f-stack on first store: ['first_accessible#0', 'last_accessible#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack entry: ['own_yearly_blocks_produced#0', 'tmp%7#0', 'tmp%9#0', 'total_online_stake#0', 'a1#0', 'a2#0', 'aid1#0', 'avg_payout_or_bonus#0', 'avg_round_time#0', 'balance#0', 'bonus#0', 'current_block_rewards#0', 'delta#0', 'farm_amount#0', 'last_accessible#0', 'num_payouts#0', 'num_payouts#9', 'rnd_delta#0', 'sum_payouts#0', 'sum_payouts#9', 'tmp%2#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr f-stack on first store: ['exists2#0', 'tm2_app_id#0', 'exists3#0', 'tm2_lp_addr#0', 'exists4#0', 'staked#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack entry: []
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.validate_duration f-stack on first store: ['allowed_duration#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm f-stack entry: []
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.create_farm f-stack on first store: ['tmp%0#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks f-stack entry: []
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_duration_blocks f-stack on first store: ['tmp%0#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block f-stack entry: []
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.extend_amount_per_block f-stack on first store: ['tmp%0#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack entry: ['state#0', 'tmp%7#0', 'txn_fuel_spent#3']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.payout f-stack on first store: ['tmp%0#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack entry: ['tmp%2#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_states f-stack on first store: ['tmp%0#0', 'k#0']
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack entry: []
debug: smart_contracts.dualstakefarm.contract.DualstakeFarm.log_block_proposers f-stack on first store: ['tmp%0#0', 'rnd#1']
debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: replacing `b main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25` with `return`
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_inlined_smart_contracts.dualstakefarm.contract.DualstakeFarm.__puya_arc4_router__@25 into main_after_if_else@24
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: removing explicit jump to fall-through block main_after_if_else@24
smart_contracts/common/send.py:18 debug: optimizing TEAL subroutine smart_contracts.common.send.axfer(asset: uint64, receiver: bytes, amount: uint64, fee: uint64) -> void:
smart_contracts/common/send.py:38 debug: optimizing TEAL subroutine smart_contracts.common.send.algo_pay(receiver: bytes, amount: uint64, fee: uint64) -> void:
smart_contracts/common/math.py:12 debug: optimizing TEAL subroutine smart_contracts.common.math.safe_subtract(a: uint64, b: uint64, default: uint64) -> uint64:
debug: replacing `b safe_subtract_ternary_merge@3` with `retsub`
debug: inlining single reference block safe_subtract_ternary_true@1 into safe_subtract
debug: inlining single reference block safe_subtract_ternary_merge@3 into safe_subtract
smart_contracts/common/validate.py:26 debug: optimizing TEAL subroutine smart_contracts.common.validate.axfer_amount_exact(axfer_txn_id: uint64, expected_asset: uint64, expected_amount: uint64) -> void:
debug: inlining single reference block axfer_amount_exact_if_body@2 into axfer_amount_exact
debug: inlining single reference block axfer_amount_exact_if_body@6 into axfer_amount_exact_after_if_else@3
debug: inlining single reference block axfer_amount_exact_if_body@10 into axfer_amount_exact_after_if_else@7
smart_contracts/common/validate.py:50 debug: optimizing TEAL subroutine smart_contracts.common.validate.payment_amount_exact(payment_txn_idx: uint64, expected_amount: uint64) -> void:
debug: inlining single reference block payment_amount_exact_if_body@2 into payment_amount_exact
debug: inlining single reference block payment_amount_exact_if_body@6 into payment_amount_exact_after_if_else@3
smart_contracts/common/round_time.py:22 debug: optimizing TEAL subroutine smart_contracts.common.round_time.get_round_time(min_round_sample: uint64) -> uint64, uint64:
debug: inlining single reference block get_round_time_if_body@1 into get_round_time
debug: inlining single reference block get_round_time_if_body@4 into get_round_time
smart_contracts/dualstakefarm/contract.py:135 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.update() -> void:
smart_contracts/dualstakefarm/contract.py:139 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.delete() -> void:
smart_contracts/dualstakefarm/contract.py:143 debug: optimizing TEAL subroutine smart_contracts.dualstakefarm.contract.DualstakeFarm.project_apr(recipient_app_id: uint64) -> bytes:
debug: not inlining jump-block due to stack manipulations
debug: Traceback (most recent call last):
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/errors.py", line 36, in log_exceptions
    yield
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puyapy/compile.py", line 79, in compile_to_teal
    teal = awst_to_teal(
           ^^^^^^^^^^^^^
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/compile.py", line 73, in awst_to_teal
    teal = list(_ir_to_teal(log_ctx, context, ir))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/compile.py", line 128, in _ir_to_teal
    compiled = _contract_ir_to_teal(artifact_context, artifact_ir)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/compile.py", line 304, in _contract_ir_to_teal
    approval_teal = mir_to_teal(context, approval_mir)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/main.py", line 19, in mir_to_teal
    optimize_teal_program(context, teal)
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/optimize/main.py", line 26, in optimize_teal_program
    _optimize_subroutine(context, teal_sub)
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/optimize/main.py", line 61, in _optimize_subroutine
    _inline_single_op_blocks(teal_sub)
  File "/home/bit/code/dualstakefarm/projects/dualstakefarm-contracts/.venv/lib/python3.12/site-packages/puya/teal/optimize/main.py", line 145, in _inline_single_op_blocks
    assert isinstance(replace_op, models.ControlOp) and not replace_op.targets
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError
critical: AssertionError: 

